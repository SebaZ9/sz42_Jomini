<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RiakClient</name>
    </assembly>
    <members>
        <member name="M:RiakClient.Auth.RiakSecurityManager.ServerCertificateValidationCallback(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <summary>
            Method used to validate a server certificate
            </summary>
            <param name="sender">The sender</param>
            <param name="certificate">The server certificate</param>
            <param name="chain">The X509 certificate chain</param>
            <param name="sslPolicyErrors">The set of errors according to SSL policy</param>
            <returns>boolean indicating validity of server certificate</returns>
        </member>
        <member name="M:RiakClient.Auth.RiakSecurityManager.ClientCertificateSelectionCallback(System.Object,System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Cryptography.X509Certificates.X509Certificate,System.String[])">
            <summary>
            Callback to select a client certificate for authentication
            </summary>
            <param name="sender">The sender</param>
            <param name="targetHost">The host requesting authentication</param>
            <param name="localCertificates">The collection of local certificates</param>
            <param name="remoteCertificate">The remote certificate</param>
            <param name="acceptableIssuers">The collection of acceptable issuers</param>
            <returns>A matching certificate for authentication</returns>
        </member>
        <member name="M:RiakClient.Auth.RiakSecurityManager.GetAuthRequest">
            <summary>
            Gets the protobuf object for an authentication request
            </summary>
            <returns>A correctly constructed protobuf object</returns>
        </member>
        <member name="M:RiakClient.Auth.RiakSecurityManager.EnsureServerCertificateSubject(System.String)">
            <summary>
            Ensures that the server certificate is for the target host
            </summary>
            <param name="serverCertificateSubject">The presented subject</param>
            <returns>boolean indicating validity</returns>
        </member>
        <member name="M:RiakClient.Auth.RiakSecurityManager.GetCertificateAuthorityCert">
            <summary>
            Gets a file containing the certificate authority certificate
            </summary>
            <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2"/> object</returns>
        </member>
        <member name="M:RiakClient.Auth.RiakSecurityManager.GetClientCertificates">
            <summary>
            Returns a collection of client certificates from the configuration setting and local stores
            </summary>
            <returns>Returns <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection"/> representing available client certificates</returns>
        </member>
        <member name="P:RiakClient.Auth.RiakSecurityManager.IsSecurityEnabled">
            <summary>
            Gets a value indicating whether security is enabled
            </summary>
        </member>
        <member name="P:RiakClient.Auth.RiakSecurityManager.ClientCertificatesConfigured">
            <summary>
            Gets a value indicating whether client certs are configured and at least one available
            </summary>
        </member>
        <member name="P:RiakClient.Auth.RiakSecurityManager.ClientCertificates">
            <summary>
            Gets the client certs collection
            </summary>
        </member>
        <member name="T:RiakClient.Commands.CommandBuilder`3">
            <summary>
            Base class for all Riak command builders.
            </summary>
            <typeparam name="TBuilder">The type of the builder. Allows chaining.</typeparam>
            <typeparam name="TCommand">The type of the command.</typeparam>
            <typeparam name="TOptions">The type of the options for this command.</typeparam>
        </member>
        <member name="T:RiakClient.Commands.CRDT.HllResponse">
            <summary>
            Response to a <see cref="T:RiakClient.Commands.CRDT.FetchHll"/> or <see cref="T:RiakClient.Commands.CRDT.UpdateHll"/> command.
            </summary>
        </member>
        <member name="T:RiakClient.Commands.CRDT.DataTypeResponse`1">
            <summary>
            Response to a Riak CRDT command.
            </summary>
            <typeparam name="TValue">The type of the value stored in this response.</typeparam>
        </member>
        <member name="T:RiakClient.Commands.Response`2">
            <summary>
            Response to a Riak command with a return value.
            </summary>
            <typeparam name="TKey">The type of the Riak request key.</typeparam>
            <typeparam name="TValue">The type of the Riak response.</typeparam>
        </member>
        <member name="T:RiakClient.Commands.Response`1">
            <summary>
            Response to a Riak command with a return value.
            </summary>
            <typeparam name="TValue">The type of the Riak response.</typeparam>
        </member>
        <member name="T:RiakClient.Commands.Response">
            <summary>
            Response to a Riak command.
            </summary>
        </member>
        <member name="M:RiakClient.Commands.Response.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Commands.Response"/> class representing "Not Found".
            </summary>
            <param name="notFound">Set to <b>true</b> to indicate the item was not found.</param>
        </member>
        <member name="P:RiakClient.Commands.Response.NotFound">
            <summary>
            Will be set to <b>true</b> when the object does not exist in Riak.
            </summary>
            <value><b>false</b> when the object exists in Riak, <b>true</b> if the object does NOT exist.</value>
        </member>
        <member name="M:RiakClient.Commands.Response`1.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Commands.Response`1"/> class.
            </summary>
            <param name="notFound">Set to <b>true</b> to indicate the item was not found.</param>
        </member>
        <member name="M:RiakClient.Commands.Response`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Commands.Response`1"/> class.
            </summary>
            <param name="value">The response data.</param>
        </member>
        <member name="P:RiakClient.Commands.Response`1.Value">
            <summary>
            The value returned from Riak
            </summary>
            <value>The value returned from Riak, deserialized.</value>
        </member>
        <member name="M:RiakClient.Commands.Response`2.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Commands.Response`2"/> class.
            </summary>
            <param name="notFound">Set to <b>true</b> to indicate the item was not found.</param>
        </member>
        <member name="M:RiakClient.Commands.Response`2.#ctor(`0,`1)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Commands.Response`2"/> class.
            </summary>
            <param name="key">The key corresponding to the request.</param>
            <param name="value">The response data.</param>
        </member>
        <member name="P:RiakClient.Commands.Response`2.Key">
            <summary>
            The key corresponding to the request.
            </summary>
            <value>The key.</value>
        </member>
        <member name="M:RiakClient.Commands.CRDT.DataTypeResponse`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Commands.CRDT.DataTypeResponse`1"/> class representing "Not Found".
            </summary>
        </member>
        <member name="M:RiakClient.Commands.CRDT.DataTypeResponse`1.#ctor(RiakClient.RiakString,System.Byte[],`0)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Commands.CRDT.DataTypeResponse`1"/> class.
            </summary>
            <param name="key">A <see cref="T:RiakClient.RiakString"/> representing the key.</param>
            <param name="context">The data type context. Necessary to use this if updating a data type with removals.</param>
            <param name="value">The value for this response.</param>
        </member>
        <member name="P:RiakClient.Commands.CRDT.DataTypeResponse`1.Context">
            <summary>
            If non-null, a context that can be used for subsequent operations that contain removals.
            </summary>
            <value>A <see cref="T:System.Byte"/>[] representing an opaque context.</value>
        </member>
        <member name="M:RiakClient.Commands.CRDT.HllResponse.#ctor">
            <inheritdoc />
        </member>
        <member name="M:RiakClient.Commands.CRDT.HllResponse.#ctor(RiakClient.RiakString,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Commands.CRDT.HllResponse"/> class.
            </summary>
            <param name="key">A <see cref="T:RiakClient.RiakString"/> representing the key.</param>
            <param name="value">The value of the fetched hyperloglog.</param>
        </member>
        <member name="P:RiakClient.Commands.CRDT.HllResponse.Cardinality">
            <summary>
            Get the estimated cardinality of the HyperLogLog.
            Alias for Value.
            </summary>
        </member>
        <member name="T:RiakClient.Commands.CRDT.FetchHllOptions">
            <summary>
            Represents options for a <see cref="T:RiakClient.Commands.CRDT.FetchHll"/> operation.
            </summary>
            <inheritdoc/>
        </member>
        <member name="T:RiakClient.Commands.CRDT.FetchCommandOptions">
            <summary>
            Represents options for a CRDT command that fetches data.
            </summary>
        </member>
        <member name="T:RiakClient.Commands.KvCommandOptions">
            <summary>
            Base class for all Riak KV command options.
            </summary>
        </member>
        <member name="T:RiakClient.Commands.CommandOptions">
            <summary>
            Base class for all Riak command options.
            </summary>
        </member>
        <member name="M:RiakClient.Commands.CommandOptions.GetHashCode">
            <summary>
            Returns a hash code for the current object.
            Uses a combination of the public properties to generate a unique hash code.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="P:RiakClient.Commands.CommandOptions.Timeout">
            <summary>
            The timeout for this command.
            </summary>
        </member>
        <member name="M:RiakClient.Commands.KvCommandOptions.#ctor(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Commands.KvCommandOptions"/> class.
            </summary>
            <param name="bucketType">The bucket type in Riak. Required.</param>
            <param name="bucket">The bucket in Riak. Required.</param>
            <param name="key">The key in Riak.</param>
            <param name="keyIsRequired">If <b>true</b> and no key given, an exception is thrown.</param>
        </member>
        <member name="M:RiakClient.Commands.KvCommandOptions.GetHashCode">
            <summary>
            Returns a hash code for the current object.
            Uses a combination of the public properties to generate a unique hash code.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="P:RiakClient.Commands.KvCommandOptions.BucketType">
            <summary>
            The bucket type
            </summary>
            <value>A <see cref="T:RiakClient.RiakString"/> representing the bucket type.</value>
        </member>
        <member name="P:RiakClient.Commands.KvCommandOptions.Bucket">
            <summary>
            The bucket
            </summary>
            <value>A <see cref="T:RiakClient.RiakString"/> representing the bucket.</value>
        </member>
        <member name="P:RiakClient.Commands.KvCommandOptions.Key">
            <summary>
            The key
            </summary>
            <value>The <see cref="T:RiakClient.RiakString"/> representing the key.</value>
        </member>
        <member name="M:RiakClient.Commands.CRDT.FetchCommandOptions.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Commands.CRDT.FetchCommandOptions"/> class.
            </summary>
            <param name="bucketType">The bucket type in Riak. Required.</param>
            <param name="bucket">The bucket in Riak. Required.</param>
            <param name="key">The key in Riak. Required.</param>
        </member>
        <member name="P:RiakClient.Commands.CRDT.FetchCommandOptions.R">
            <summary>
            The R (read) value to use.
            </summary>
        </member>
        <member name="P:RiakClient.Commands.CRDT.FetchCommandOptions.PR">
            <summary>
            The PR (primary vnode read) value to use.
            </summary>
        </member>
        <member name="P:RiakClient.Commands.CRDT.FetchCommandOptions.NotFoundOK">
            <summary>
            If true, a <c>not_found</c> response from Riak is not an error.
            </summary>
        </member>
        <member name="P:RiakClient.Commands.CRDT.FetchCommandOptions.UseBasicQuorum">
            <summary>
            Controls whether a read request should return early in some failure cases.
            </summary>
        </member>
        <member name="P:RiakClient.Commands.CRDT.FetchCommandOptions.IncludeContext">
            <summary>
            Set to <b>false</b> to not return context. Default (and recommended value) is <b>true</b>.
            </summary>
        </member>
        <member name="M:RiakClient.Commands.CRDT.FetchHllOptions.#ctor(System.String,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:RiakClient.Commands.CRDT.FetchHll">
            <summary>
            Fetches a Map from Riak
            </summary>
        </member>
        <member name="T:RiakClient.Commands.CRDT.FetchCommand`1">
            <summary>
            Fetches a CRDT from Riak
            </summary>
            <typeparam name="TResponse">The type of the response data from Riak.</typeparam>
        </member>
        <member name="T:RiakClient.Commands.Command`2">
            <summary>
            Base class for Riak commands.
            </summary>
            <typeparam name="TOptions">The type of the options for this command.</typeparam>
            <typeparam name="TResponse">The type of the response data from Riak.</typeparam>
        </member>
        <member name="T:RiakClient.Commands.Command`1">
            <summary>
            Base class for Riak commands that don't have options.
            </summary>
            <typeparam name="TResponse">The type of the response data from Riak.</typeparam>
        </member>
        <member name="T:RiakClient.Commands.IRiakCommand">
            <summary>
            Represents a command to execute against Riak
            </summary>
        </member>
        <member name="M:RiakClient.Commands.Command`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Commands.Command`1"/> class.
            </summary>
        </member>
        <member name="P:RiakClient.Commands.Command`1.Response">
            <summary>
            A sub-class instance of <see cref="P:RiakClient.Commands.Command`1.Response"/> representing the response from Riak.
            </summary>
        </member>
        <member name="M:RiakClient.Commands.Command`2.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Commands.Command`2"/> class.
            </summary>
            <param name="options">Options for this operation. See <see cref="F:RiakClient.Commands.Command`2.CommandOptions"/></param>
        </member>
        <member name="M:RiakClient.Commands.CRDT.FetchCommand`1.#ctor(RiakClient.Commands.CRDT.FetchCommandOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Commands.CRDT.FetchCommand`1"/> class.
            </summary>
            <param name="options">Options for this operation. See <see cref="T:RiakClient.Commands.CRDT.FetchCommandOptions"/></param>
        </member>
        <member name="P:RiakClient.Commands.CRDT.FetchCommand`1.ExpectedCode">
            <summary>
            The expected protobuf message code from Riak.
            </summary>
        </member>
        <member name="M:RiakClient.Commands.CRDT.FetchHll.#ctor(RiakClient.Commands.CRDT.FetchHllOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Commands.CRDT.FetchHll"/> class.
            </summary>
            <param name="options">Options for this operation. See <see cref="T:RiakClient.Commands.CRDT.FetchHllOptions"/></param>
        </member>
        <member name="T:RiakClient.Commands.CRDT.FetchHll.Builder">
            <inheritdoc />
        </member>
        <member name="T:RiakClient.Commands.CRDT.FetchCommandBuilder`4">
            <summary>
            Builds a fetch command.
            </summary>
            <typeparam name="TBuilder">The type of the builder. Allows chaining.</typeparam>
            <typeparam name="TCommand">The type of the fetch command.</typeparam>
            <typeparam name="TOptions">The type of the options for the fetch command.</typeparam>
            <typeparam name="TResponse">The type of the fetch command's response.</typeparam>
        </member>
        <member name="T:RiakClient.Commands.KvCommandBuilder`3">
            <summary>
            Base class for all Riak KV command builders.
            </summary>
            <typeparam name="TBuilder">The type of the builder. Allows chaining.</typeparam>
            <typeparam name="TCommand">The type of the command.</typeparam>
            <typeparam name="TOptions">The type of the options for this command.</typeparam>
        </member>
        <member name="T:RiakClient.Commands.CRDT.UpdateHll">
            <summary>
            Command used to update a Hyperloglog in Riak. As a convenience, a builder method
            is provided as well as an object with a fluent API for constructing the
            update.
            See <see cref="T:RiakClient.Commands.CRDT.UpdateHll.Builder"/>
            <code>
            var update = new UpdateHll.Builder()
                      .WithBucketType("hlls")
                      .WithBucket("myBucket")
                      .WithKey("hll_1")
                      .WithReturnBody(true)
                      .Build();
            </code>
            </summary>
        </member>
        <member name="M:RiakClient.Commands.CRDT.UpdateCommand`1.#ctor(RiakClient.Commands.CRDT.UpdateCommandOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Commands.CRDT.UpdateCommand`1"/> class.
            </summary>
            <param name="options">Options for this operation. See <see cref="T:RiakClient.Commands.CRDT.UpdateMapOptions"/></param>
        </member>
        <member name="M:RiakClient.Commands.CRDT.UpdateHll.#ctor(RiakClient.Commands.CRDT.UpdateHllOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Commands.CRDT.UpdateHll"/> class.
            </summary>
            <param name="options">Options for this operation. See <see cref="T:RiakClient.Commands.CRDT.UpdateHllOptions"/></param>
            <inheritdoc/>
        </member>
        <member name="T:RiakClient.Commands.CRDT.UpdateCommandBuilder`4">
            <summary>
            Builds a fetch command.
            </summary>
            <typeparam name="TBuilder">The type of the builder. Allows chaining.</typeparam>
            <typeparam name="TCommand">The type of the update command.</typeparam>
            <typeparam name="TOptions">The type of the options for the update command.</typeparam>
            <typeparam name="TResponse">The type of the update command's response.</typeparam>
        </member>
        <member name="T:RiakClient.Commands.CRDT.UpdateHllOptions">
            <summary>
            Represents options for a <see cref="T:RiakClient.Commands.CRDT.UpdateHll"/> operation.
            </summary>
            <inheritdoc/>
        </member>
        <member name="T:RiakClient.Commands.CRDT.UpdateCommandOptions">
            <summary>
            Represents options for a <see cref="T:RiakClient.Commands.CRDT.UpdateCommand`1"/> operation.
            </summary>
        </member>
        <member name="M:RiakClient.Commands.CRDT.UpdateCommandOptions.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Commands.CRDT.UpdateCommandOptions"/> class.
            </summary>
            <param name="bucketType">The bucket type in Riak. Required.</param>
            <param name="bucket">The bucket in Riak. Required.</param>
            <param name="key">The key in Riak. If <b>null</b>, Riak will generate a key.</param>
        </member>
        <member name="P:RiakClient.Commands.CRDT.UpdateCommandOptions.W">
            <summary>
            The W (write) value to use.
            </summary>
        </member>
        <member name="P:RiakClient.Commands.CRDT.UpdateCommandOptions.PW">
            <summary>
            The PW (primary vnode write) value to use.
            </summary>
        </member>
        <member name="P:RiakClient.Commands.CRDT.UpdateCommandOptions.DW">
            <summary>
            The DW (durable write) value to use.
            </summary>
        </member>
        <member name="P:RiakClient.Commands.CRDT.UpdateCommandOptions.ReturnBody">
            <summary>
            If true, returns the updated CRDT.
            </summary>
        </member>
        <member name="P:RiakClient.Commands.CRDT.UpdateCommandOptions.Context">
            <summary>
            The context from a previous fetch. Required for remove operations. 
            </summary>
        </member>
        <member name="P:RiakClient.Commands.CRDT.UpdateCommandOptions.IncludeContext">
            <summary>
            Set to <b>false</b> to not return context. Default (and recommended value) is <b>true</b>.
            </summary>
        </member>
        <member name="P:RiakClient.Commands.CRDT.UpdateCommandOptions.HasRemoves">
            <summary>
            Returns to <b>true</b> if this command has removals.
            </summary>
        </member>
        <member name="M:RiakClient.Commands.CRDT.UpdateHllOptions.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Commands.CRDT.UpdateHllOptions"/> class.
            </summary>
            <inheritdoc/>
        </member>
        <member name="P:RiakClient.Commands.CRDT.UpdateHllOptions.Additions">
            <summary>
            The <see cref="T:RiakClient.Commands.CRDT.UpdateHll"/> additions.
            </summary>
            <value>The values to add via the <see cref="T:RiakClient.Commands.CRDT.UpdateHll"/> command.</value>
        </member>
        <member name="P:RiakClient.Commands.CRDT.UpdateHllOptions.AdditionsAsStrings">
            <summary>
            The <see cref="T:RiakClient.Commands.CRDT.UpdateHll"/> additions, as UTF8-encoded strings.
            </summary>
            <value>The values to add via the <see cref="T:RiakClient.Commands.CRDT.UpdateHll"/> command.</value>
        </member>
        <member name="T:RiakClient.Commands.TS.ListKeys">
            <summary>
            Fetches timeseries data from Riak
            </summary>
        </member>
        <member name="M:RiakClient.Commands.TS.ListKeys.#ctor(RiakClient.Commands.TS.ListKeysOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Commands.TS.ListKeys"/> class.
            </summary>
            <param name="options">Options for this operation. See <see cref="T:RiakClient.Commands.TS.ByKeyOptions"/></param>
        </member>
        <member name="T:RiakClient.Commands.TS.ListKeys.Builder">
            <inheritdoc />
        </member>
        <member name="T:RiakClient.Commands.TS.TimeseriesCommandBuilder`3">
            <summary>
            Base class for all Riak command builders.
            </summary>
            <typeparam name="TBuilder">The type of the builder. Allows chaining.</typeparam>
            <typeparam name="TCommand">The type of the command.</typeparam>
            <typeparam name="TOptions">The type of the options for this command.</typeparam>
        </member>
        <member name="T:RiakClient.Commands.TS.ListKeysOptions">
            <inheritdoc/>
        </member>
        <member name="T:RiakClient.Commands.TS.TimeseriesCommandOptions">
            <summary>
            Base class for all Riak TS command options.
            </summary>
        </member>
        <member name="M:RiakClient.Commands.TS.TimeseriesCommandOptions.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Commands.TS.TimeseriesCommandOptions"/> class.
            </summary>
            <param name="table">The table in Riak TS. Required.</param>
        </member>
        <member name="M:RiakClient.Commands.TS.TimeseriesCommandOptions.GetHashCode">
            <summary>
            Returns a hash code for the current object.
            Uses a combination of the public properties to generate a unique hash code.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="P:RiakClient.Commands.TS.TimeseriesCommandOptions.Table">
            <summary>
            The table in Riak TS.
            </summary>
            <value>A <see cref="T:RiakClient.RiakString"/> representing the table.</value>
        </member>
        <member name="M:RiakClient.Commands.TS.ListKeysOptions.#ctor(System.String)">
            <inheritdoc/>
        </member>
        <member name="P:RiakClient.Commands.TS.ListKeysOptions.Callback">
            <summary>
            Set to a function to receive streamed data.
            </summary>
        </member>
        <member name="T:RiakClient.Commands.TS.QueryOptions">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.Commands.TS.QueryOptions.#ctor(System.String)">
            <inheritdoc/>
        </member>
        <member name="P:RiakClient.Commands.TS.QueryOptions.Query">
            <summary>
            The query for Riak TS
            </summary>
        </member>
        <member name="P:RiakClient.Commands.TS.QueryOptions.Callback">
            <summary>
            Set to a function to receive streamed data.
            </summary>
        </member>
        <member name="M:RiakClient.Commands.TS.Cell.GetHashCode">
            <summary>
            Returns a hash code for the current object.
            Uses a combination of the public properties to generate a unique hash code.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:RiakClient.Commands.TS.Column.GetHashCode">
            <summary>
            Returns a hash code for the current object.
            Uses a combination of the public properties to generate a unique hash code.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="T:RiakClient.Commands.TS.ByKeyCommand`1">
            <summary>
            Operates on Riak TS data by key
            </summary>
            <typeparam name="TResponse">The type of the response data from Riak.</typeparam>
        </member>
        <member name="M:RiakClient.Commands.TS.ByKeyCommand`1.#ctor(RiakClient.Commands.TS.ByKeyOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Commands.TS.ByKeyCommand`1"/> class.
            </summary>
            <param name="options">Options for this operation. See <see cref="T:RiakClient.Commands.TS.ByKeyOptions"/></param>
        </member>
        <member name="T:RiakClient.Commands.TS.ByKeyCommand`1.Builder`1">
            <inheritdoc />
        </member>
        <member name="T:RiakClient.Commands.TS.Delete">
            <summary>
            Fetches timeseries data from Riak
            </summary>
        </member>
        <member name="M:RiakClient.Commands.TS.Delete.#ctor(RiakClient.Commands.TS.ByKeyOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Commands.TS.Delete"/> class.
            </summary>
            <param name="options">Options for this operation. See <see cref="T:RiakClient.Commands.TS.ByKeyOptions"/></param>
        </member>
        <member name="T:RiakClient.Commands.TS.Delete.Builder">
            <inheritdoc />
        </member>
        <member name="T:RiakClient.Commands.TS.ByKeyOptions">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.Commands.TS.ByKeyOptions.#ctor(System.String)">
            <inheritdoc/>
        </member>
        <member name="P:RiakClient.Commands.TS.ByKeyOptions.Key">
            <summary>
            The key in Riak TS
            </summary>
        </member>
        <member name="T:RiakClient.Commands.TS.ListKeysResponse">
            <summary>
            Response to a <see cref="T:RiakClient.Commands.TS.ListKeys"/> command.
            </summary>
        </member>
        <member name="M:RiakClient.Commands.TS.ListKeysResponse.#ctor">
            <inheritdoc />
        </member>
        <member name="M:RiakClient.Commands.TS.ListKeysResponse.#ctor(System.Collections.Generic.IEnumerable{RiakClient.Commands.TS.Row})">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Commands.TS.ListKeysResponse"/> class.
            </summary>
            <param name="values">The rows for the fetched TS data.</param>
        </member>
        <member name="T:RiakClient.Commands.TS.QueryResponse">
            <summary>
            Response to a <see cref="T:RiakClient.Commands.TS.Query"/> command.
            </summary>
        </member>
        <member name="M:RiakClient.Commands.TS.QueryResponse.#ctor">
            <inheritdoc />
        </member>
        <member name="M:RiakClient.Commands.TS.QueryResponse.#ctor(System.String,System.Collections.Generic.IEnumerable{RiakClient.Commands.TS.Column},System.Collections.Generic.IEnumerable{RiakClient.Commands.TS.Row})">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Commands.TS.QueryResponse"/> class.
            </summary>
            <param name="query">A <see cref="T:System.String"/> representing query.</param>
            <param name="columns">The columns for the fetched TS data.</param>
            <param name="values">The rows for the fetched TS data.</param>
        </member>
        <member name="P:RiakClient.Commands.TS.QueryResponse.Columns">
            <summary>
            Returns the columns for this response.
            </summary>
        </member>
        <member name="T:RiakClient.Commands.TS.Query">
            <summary>
            Fetches timeseries data from Riak
            </summary>
        </member>
        <member name="M:RiakClient.Commands.TS.Query.#ctor(RiakClient.Commands.TS.QueryOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Commands.TS.Query"/> class.
            </summary>
            <param name="options">Options for this operation. See <see cref="T:RiakClient.Commands.TS.ByKeyOptions"/></param>
        </member>
        <member name="T:RiakClient.Commands.TS.Query.Builder">
            <inheritdoc />
        </member>
        <member name="T:RiakClient.Commands.TS.StoreResponse">
            <summary>
            Response to a <see cref="T:RiakClient.Commands.TS.Store"/> command.
            </summary>
        </member>
        <member name="M:RiakClient.Commands.TS.StoreResponse.#ctor">
            <inheritdoc />
        </member>
        <member name="T:RiakClient.Commands.TS.StoreOptions">
            <summary>
            Represents options for a <see cref="T:RiakClient.Commands.TS.Store"/> operation.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.Commands.TS.StoreOptions.#ctor(System.String)">
            <inheritdoc/>
        </member>
        <member name="P:RiakClient.Commands.TS.StoreOptions.Columns">
            <summary>
            The columns corresponding to the rows
            </summary>
        </member>
        <member name="P:RiakClient.Commands.TS.StoreOptions.Rows">
            <summary>
            The rows to store in Riak TS
            </summary>
        </member>
        <member name="T:RiakClient.Commands.TS.Store">
            <summary>
            Fetches timeseries data from Riak
            </summary>
        </member>
        <member name="M:RiakClient.Commands.TS.Store.#ctor(RiakClient.Commands.TS.StoreOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Commands.TS.Store"/> class.
            </summary>
            <param name="options">Options for this operation. See <see cref="T:RiakClient.Commands.TS.StoreOptions"/></param>
        </member>
        <member name="T:RiakClient.Commands.TS.Store.Builder">
            <inheritdoc />
        </member>
        <member name="T:RiakClient.Commands.TS.GetResponse">
            <summary>
            Response to a <see cref="T:RiakClient.Commands.TS.Get"/> command.
            </summary>
        </member>
        <member name="M:RiakClient.Commands.TS.GetResponse.#ctor">
            <inheritdoc />
        </member>
        <member name="M:RiakClient.Commands.TS.GetResponse.#ctor(RiakClient.Commands.TS.Row,System.Collections.Generic.IEnumerable{RiakClient.Commands.TS.Column},System.Collections.Generic.IEnumerable{RiakClient.Commands.TS.Row})">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Commands.TS.GetResponse"/> class.
            </summary>
            <param name="key">A <see cref="T:RiakClient.Commands.TS.Row"/> representing the key.</param>
            <param name="columns">The columns for the fetched TS data.</param>
            <param name="values">The rows for the fetched TS data.</param>
        </member>
        <member name="P:RiakClient.Commands.TS.GetResponse.Columns">
            <summary>
            Returns the columns for this response.
            </summary>
        </member>
        <member name="T:RiakClient.Commands.CRDT.FetchSetOptions">
            <summary>
            Represents options for a <see cref="T:RiakClient.Commands.CRDT.FetchSet"/> operation.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.Commands.CRDT.FetchSetOptions.#ctor(System.String,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:RiakClient.Commands.CRDT.SetResponse">
            <summary>
            Response to a <see cref="T:RiakClient.Commands.CRDT.FetchSet"/> command.
            </summary>
        </member>
        <member name="M:RiakClient.Commands.CRDT.SetResponse.#ctor">
            <inheritdoc />
        </member>
        <member name="M:RiakClient.Commands.CRDT.SetResponse.#ctor(RiakClient.RiakString,System.Byte[],System.Collections.Generic.ISet{System.Byte[]})">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Commands.CRDT.SetResponse"/> class.
            </summary>
            <param name="key">A <see cref="T:RiakClient.RiakString"/> representing the key.</param>
            <param name="context">The data type context. Necessary to use this if updating a data type with removals.</param>
            <param name="value">The value of the fetched CRDT counter.</param>
        </member>
        <member name="T:RiakClient.Commands.CRDT.FetchSet">
            <summary>
            Fetches a Map from Riak
            </summary>
        </member>
        <member name="M:RiakClient.Commands.CRDT.FetchSet.#ctor(RiakClient.Commands.CRDT.FetchSetOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Commands.CRDT.FetchSet"/> class.
            </summary>
            <param name="options">Options for this operation. See <see cref="T:RiakClient.Commands.CRDT.FetchSetOptions"/></param>
        </member>
        <member name="T:RiakClient.Commands.CRDT.FetchSet.Builder">
            <inheritdoc />
        </member>
        <member name="T:RiakClient.Commands.ServerInfoResponse">
            <summary>
            Response to a <see cref="T:RiakClient.Commands.FetchServerInfo"/> command.
            </summary>
        </member>
        <member name="M:RiakClient.Commands.ServerInfoResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Commands.ServerInfoResponse"/> class.
            </summary>
        </member>
        <member name="M:RiakClient.Commands.ServerInfoResponse.#ctor(RiakClient.Commands.ServerInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Commands.ServerInfoResponse"/> class.
            </summary>
            <param name="value">The fetched server information.</param>
        </member>
        <member name="T:RiakClient.Commands.FetchServerInfo">
            <summary>
            Fetches server information from Riak
            </summary>
        </member>
        <member name="T:RiakClient.Commands.KV.PreflistItem">
            <summary>
            Part of the <see cref="T:RiakClient.Commands.KV.PreflistResponse"/> class.
            </summary>
        </member>
        <member name="M:RiakClient.Commands.KV.PreflistItem.#ctor(RiakClient.RiakString,System.Int64,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Commands.KV.PreflistItem"/> class.
            </summary>
            <param name="node">A <see cref="T:RiakClient.RiakString"/> representing the node owning the partition.</param>
            <param name="id">The partition ID.</param>
            <param name="primary">Will be <b>true</b> if this is a primary node for the partition.</param>
        </member>
        <member name="T:RiakClient.Commands.KV.PreflistResponse">
            <summary>
            Response to a <see cref="T:RiakClient.Commands.KV.FetchPreflist"/> command.
            </summary>
        </member>
        <member name="M:RiakClient.Commands.KV.PreflistResponse.#ctor">
            <inheritdoc />
        </member>
        <member name="M:RiakClient.Commands.KV.PreflistResponse.#ctor(RiakClient.RiakString,System.Collections.Generic.IEnumerable{RiakClient.Commands.KV.PreflistItem})">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Commands.KV.PreflistResponse"/> class.
            </summary>
            <param name="key">A <see cref="T:RiakClient.RiakString"/> representing the key.</param>
            <param name="value">The value of the fetched preflist.</param>
        </member>
        <member name="T:RiakClient.Commands.KV.FetchPreflist">
            <summary>
            Fetches a Map from Riak
            </summary>
        </member>
        <member name="M:RiakClient.Commands.KV.FetchPreflist.#ctor(RiakClient.Commands.KV.FetchPreflistOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Commands.KV.FetchPreflist"/> class.
            </summary>
            <param name="options">Options for this operation. See <see cref="T:RiakClient.Commands.KV.FetchPreflistOptions"/></param>
        </member>
        <member name="T:RiakClient.Commands.KV.FetchPreflist.Builder">
            <inheritdoc />
        </member>
        <member name="T:RiakClient.Commands.KV.FetchPreflistOptions">
            <summary>
            Represents options for a <see cref="T:RiakClient.Commands.KV.FetchPreflist"/> operation.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.Commands.KV.FetchPreflistOptions.#ctor(System.String,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:RiakClient.Commands.CRDT.FetchCounter">
            <summary>
            Fetches a Map from Riak
            </summary>
        </member>
        <member name="M:RiakClient.Commands.CRDT.FetchCounter.#ctor(RiakClient.Commands.CRDT.FetchCounterOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Commands.CRDT.FetchCounter"/> class.
            </summary>
            <param name="options">Options for this operation. See <see cref="T:RiakClient.Commands.CRDT.FetchCounterOptions"/></param>
        </member>
        <member name="T:RiakClient.Commands.CRDT.FetchCounter.Builder">
            <inheritdoc />
        </member>
        <member name="T:RiakClient.Commands.CRDT.FetchMap">
            <summary>
            Fetches a Map from Riak
            </summary>
        </member>
        <member name="M:RiakClient.Commands.CRDT.FetchMap.#ctor(RiakClient.Commands.CRDT.FetchMapOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Commands.CRDT.FetchMap"/> class.
            </summary>
            <param name="options">Options for this operation. See <see cref="T:RiakClient.Commands.CRDT.FetchMapOptions"/></param>
        </member>
        <member name="T:RiakClient.Commands.CRDT.FetchMap.Builder">
            <inheritdoc />
        </member>
        <member name="T:RiakClient.Commands.CRDT.FetchCounterOptions">
            <summary>
            Represents options for a <see cref="T:RiakClient.Commands.CRDT.FetchCounter"/> operation.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.Commands.CRDT.FetchCounterOptions.#ctor(System.String,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:RiakClient.Commands.CRDT.CounterResponse">
            <summary>
            Response to a <see cref="T:RiakClient.Commands.CRDT.FetchCounter"/> or <see cref="T:RiakClient.Commands.CRDT.UpdateCounter"/> command.
            </summary>
        </member>
        <member name="M:RiakClient.Commands.CRDT.CounterResponse.#ctor">
            <inheritdoc />
        </member>
        <member name="M:RiakClient.Commands.CRDT.CounterResponse.#ctor(RiakClient.RiakString,System.Byte[],System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Commands.CRDT.CounterResponse"/> class.
            </summary>
            <param name="key">A <see cref="T:RiakClient.RiakString"/> representing the key.</param>
            <param name="context">The data type context. Necessary to use this if updating a data type with removals.</param>
            <param name="value">The value of the fetched CRDT counter.</param>
        </member>
        <member name="T:RiakClient.Commands.CRDT.MapResponse">
            <summary>
            Response to a <see cref="T:RiakClient.Commands.CRDT.FetchMap"/> command.
            </summary>
        </member>
        <member name="M:RiakClient.Commands.CRDT.MapResponse.#ctor">
            <inheritdoc />
        </member>
        <member name="M:RiakClient.Commands.CRDT.MapResponse.#ctor(RiakClient.RiakString,System.Byte[],RiakClient.Commands.CRDT.Map)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Commands.CRDT.MapResponse"/> class.
            </summary>
            <param name="key">A <see cref="T:RiakClient.RiakString"/> representing the key.</param>
            <param name="context">The data type context. Necessary to use this if updating a data type with removals.</param>
            <param name="value">A map that has been parsed from the Riak CRDT data.</param>
        </member>
        <member name="T:RiakClient.Commands.CRDT.UpdateSetOptions">
            <summary>
            Represents options for a <see cref="T:RiakClient.Commands.CRDT.UpdateSet"/> operation.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.Commands.CRDT.UpdateSetOptions.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Commands.CRDT.UpdateSetOptions"/> class.
            </summary>
            <inheritdoc/>
        </member>
        <member name="P:RiakClient.Commands.CRDT.UpdateSetOptions.Additions">
            <summary>
            The <see cref="T:RiakClient.Commands.CRDT.UpdateSet"/> additions.
            </summary>
            <value>The values to add via the <see cref="T:RiakClient.Commands.CRDT.UpdateSet"/> command.</value>
        </member>
        <member name="P:RiakClient.Commands.CRDT.UpdateSetOptions.Removals">
            <summary>
            The <see cref="T:RiakClient.Commands.CRDT.UpdateSet"/> removals.
            </summary>
            <value>The values to remove via the <see cref="T:RiakClient.Commands.CRDT.UpdateSet"/> command.</value>
        </member>
        <member name="P:RiakClient.Commands.CRDT.UpdateSetOptions.AdditionsAsStrings">
            <summary>
            The <see cref="T:RiakClient.Commands.CRDT.UpdateSet"/> additions, as UTF8-encoded strings.
            </summary>
            <value>The values to add via the <see cref="T:RiakClient.Commands.CRDT.UpdateSet"/> command.</value>
        </member>
        <member name="P:RiakClient.Commands.CRDT.UpdateSetOptions.RemovalsAsStrings">
            <summary>
            The <see cref="T:RiakClient.Commands.CRDT.UpdateSet"/> removals, as UTF8-encoded strings.
            </summary>
            <value>The values to remove via the <see cref="T:RiakClient.Commands.CRDT.UpdateSet"/> command.</value>
        </member>
        <member name="T:RiakClient.Commands.CRDT.UpdateSet">
            <summary>
            Command used to update a Set in Riak. As a convenience, a builder method
            is provided as well as an object with a fluent API for constructing the
            update.
            See <see cref="T:RiakClient.Commands.CRDT.UpdateSet.Builder"/>
            <code>
            var update = new UpdateSet.Builder()
                      .WithBucketType("maps")
                      .WithBucket("myBucket")
                      .WithKey("map_1")
                      .WithReturnBody(true)
                      .Build();
            </code>
            </summary>
        </member>
        <member name="M:RiakClient.Commands.CRDT.UpdateSet.#ctor(RiakClient.Commands.CRDT.UpdateSetOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Commands.CRDT.UpdateSet"/> class.
            </summary>
            <param name="options">Options for this operation. See <see cref="T:RiakClient.Commands.CRDT.UpdateSetOptions"/></param>
            <inheritdoc/>
        </member>
        <member name="T:RiakClient.Commands.CRDT.UpdateCounter">
            <summary>
            Command used to update a Counter in Riak. As a convenience, a builder method
            is provided as well as an object with a fluent API for constructing the
            update.
            See <see cref="T:RiakClient.Commands.CRDT.UpdateCounter.Builder"/>
            <code>
            var update = new UpdateCounter.Builder(10)
                      .WithBucketType("maps")
                      .WithBucket("myBucket")
                      .WithKey("map_1")
                      .WithReturnBody(true)
                      .Build();
            </code>
            </summary>
        </member>
        <member name="M:RiakClient.Commands.CRDT.UpdateCounter.#ctor(RiakClient.Commands.CRDT.UpdateCounterOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Commands.CRDT.UpdateCounter"/> class.
            </summary>
            <param name="options">Options for this operation. See <see cref="T:RiakClient.Commands.CRDT.UpdateCounterOptions"/></param>
            <inheritdoc/>
        </member>
        <member name="T:RiakClient.Commands.CRDT.UpdateMap">
            <summary>
            Command used to update a Map in Riak. As a convenience, a builder method
            is provided as well as an object with a fluent API for constructing the
            update. See <see cref="T:RiakClient.Commands.CRDT.UpdateMap.MapOperation"/>
            <code>
            var mapOp = new UpdateMap.MapOperation();
            mapOp.IncrementCounter("counter_1", 50)
                .AddToSet("set_1", "set_value_1")
                .SetRegister("register_1", "register_value_1")
                .SetFlag("flag_1", true)
                .Map("inner_map")
                    .IncrementCounter("counter_1", 50)
                    .AddToSet("set_2", "set_value_2");
            </code>
            See <see cref="T:RiakClient.Commands.CRDT.UpdateMap.Builder"/>
            <code>
            var update = new UpdateMap.Builder(mapOp)
                      .WithBucketType("maps")
                      .WithBucket("myBucket")
                      .WithKey("map_1")
                      .WithReturnBody(true)
                      .Build();
            </code>
            </summary>
        </member>
        <member name="M:RiakClient.Commands.CRDT.UpdateMap.#ctor(RiakClient.Commands.CRDT.UpdateMapOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Commands.CRDT.UpdateMap"/> class.
            </summary>
            <param name="options">Options for this operation. See <see cref="T:RiakClient.Commands.CRDT.UpdateMapOptions"/></param>
        </member>
        <member name="T:RiakClient.Commands.CRDT.FetchMapOptions">
            <summary>
            Represents options for a <see cref="T:RiakClient.Commands.CRDT.FetchMap"/> operation.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.Commands.CRDT.FetchMapOptions.#ctor(System.String,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:RiakClient.Commands.CRDT.UpdateCounterOptions">
            <summary>
            Represents options for a <see cref="T:RiakClient.Commands.CRDT.UpdateCounter"/> operation.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.Commands.CRDT.UpdateCounterOptions.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Commands.CRDT.UpdateCounterOptions"/> class.
            </summary>
            <inheritdoc/>
        </member>
        <member name="P:RiakClient.Commands.CRDT.UpdateCounterOptions.Increment">
            <summary>
            The <see cref="T:RiakClient.Commands.CRDT.UpdateCounter"/> increment value.
            </summary>
            <value>The increment value for the <see cref="T:RiakClient.Commands.CRDT.UpdateCounter"/> command.</value>
        </member>
        <member name="T:RiakClient.Commands.CRDT.UpdateMapOptions">
            <summary>
            Represents options for a <see cref="T:RiakClient.Commands.CRDT.UpdateMap"/> operation.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.Commands.CRDT.UpdateMapOptions.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Commands.CRDT.UpdateMapOptions"/> class.
            </summary>
            <inheritdoc/>
        </member>
        <member name="P:RiakClient.Commands.CRDT.UpdateMapOptions.Op">
            <summary>
            The <see cref="T:RiakClient.Commands.CRDT.UpdateMap.MapOperation"/>
            </summary>
            <value>The <see cref="T:RiakClient.Commands.CRDT.UpdateMap.MapOperation"/> to be executed by the <see cref="T:RiakClient.Commands.CRDT.UpdateMap"/> command.</value>
        </member>
        <member name="T:RiakClient.Commands.TS.Get">
            <summary>
            Fetches timeseries data from Riak
            </summary>
        </member>
        <member name="M:RiakClient.Commands.TS.Get.#ctor(RiakClient.Commands.TS.ByKeyOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Commands.TS.Get"/> class.
            </summary>
            <param name="options">Options for this operation. See <see cref="T:RiakClient.Commands.TS.ByKeyOptions"/></param>
        </member>
        <member name="T:RiakClient.Commands.TS.Get.Builder">
            <inheritdoc />
        </member>
        <member name="M:RiakClient.Commands.TS.Row.GetHashCode">
            <summary>
            Returns a hash code for the current object.
            Uses a combination of the public properties to generate a unique hash code.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="T:RiakClient.Comms.LoadBalancing.ILoadBalancingStrategy">
            <summary>
            The interface for implementing Riak node load balancing strategies against.
            </summary>
        </member>
        <member name="M:RiakClient.Comms.LoadBalancing.ILoadBalancingStrategy.Initialise(System.Collections.Generic.IEnumerable{RiakClient.Comms.IRiakNode})">
            <summary>
            Initialise the load balancer with a set of <see cref="T:RiakClient.Comms.IRiakNode"/> nodes.
            </summary>
            <param name="nodes">The nodes to use with the load balancer.</param>
        </member>
        <member name="M:RiakClient.Comms.LoadBalancing.ILoadBalancingStrategy.SelectNode">
            <summary>
            Get the next node to use from the load balancer.
            </summary>
            <returns>A <see cref="T:RiakClient.Comms.IRiakNode"/> to use.</returns>
        </member>
        <member name="M:RiakClient.Comms.LoadBalancing.ILoadBalancingStrategy.RemoveNode(RiakClient.Comms.IRiakNode)">
            <summary>
            Remove a node from the load balancer.
            </summary>
            <param name="node">The node to remove.</param>
        </member>
        <member name="M:RiakClient.Comms.LoadBalancing.ILoadBalancingStrategy.AddNode(RiakClient.Comms.IRiakNode)">
            <summary>
            Add a node to the load balancer.
            </summary>
            <param name="node">The node to add.</param>
        </member>
        <member name="T:RiakClient.Comms.LoadBalancing.RoundRobinStrategy">
            <summary>
            Represents a Round-Robin based load balancing strategy.
            </summary>
        </member>
        <member name="M:RiakClient.Comms.LoadBalancing.RoundRobinStrategy.Initialise(System.Collections.Generic.IEnumerable{RiakClient.Comms.IRiakNode})">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.Comms.LoadBalancing.RoundRobinStrategy.SelectNode">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.Comms.LoadBalancing.RoundRobinStrategy.RemoveNode(RiakClient.Comms.IRiakNode)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.Comms.LoadBalancing.RoundRobinStrategy.AddNode(RiakClient.Comms.IRiakNode)">
            <inheritdoc/>
        </member>
        <member name="T:RiakClient.Comms.IRiakNode">
            <summary>
            Represents the interface for interacting with a Riak Node.
            Abstracts explicit connection use away.
            </summary>
        </member>
        <member name="M:RiakClient.Comms.IRiakNode.UseConnection(System.Func{RiakClient.Comms.IRiakConnection,RiakClient.RiakResult})">
            <summary>
            Execute the <paramref name="useFun"/> delegate using this one of this <see cref="T:RiakClient.Comms.IRiakNode"/>'s connections.
            </summary>
            <param name="useFun">The delegate function to execute using one of this <see cref="T:RiakClient.Comms.IRiakNode"/>'s connections.</param>
            <returns>A <see cref="T:RiakClient.RiakResult"/> detailing the success or failure of the operation.</returns>
        </member>
        <member name="M:RiakClient.Comms.IRiakNode.UseConnection``1(System.Func{RiakClient.Comms.IRiakConnection,RiakClient.RiakResult{``0}})">
            <summary>
            Execute the <paramref name="useFun"/> delegate using this one of this <see cref="T:RiakClient.Comms.IRiakNode"/>'s connections.
            </summary>
            <typeparam name="TResult">The expected return type from the operation.</typeparam>
            <param name="useFun">The delegate function to execute using one of this <see cref="T:RiakClient.Comms.IRiakNode"/>'s connections.</param>
            <returns>
            A <see cref="T:RiakClient.RiakResult"/> detailing the success or failure of the operation, 
            as well as the <typeparamref name="TResult"/> return value.
            </returns>
        </member>
        <member name="M:RiakClient.Comms.IRiakNode.UseDelayedConnection``1(System.Func{RiakClient.Comms.IRiakConnection,System.Action,RiakClient.RiakResult{System.Collections.Generic.IEnumerable{``0}}})">
            <summary>
            Execute the <paramref name="useFun"/> delegate using this one of this <see cref="T:RiakClient.Comms.IRiakNode"/>'s connections,
            and keep the connection open.
            This method is used over <see cref="M:RiakClient.Comms.IRiakNode.UseConnection``1(System.Func{RiakClient.Comms.IRiakConnection,RiakClient.RiakResult{``0}})"/> to keep a connection open to receive streaming results.
            </summary>
            <typeparam name="TResult">The expected return type from the operation.</typeparam>
            <param name="useFun">The delegate function to execute using one of this <see cref="T:RiakClient.Comms.IRiakNode"/>'s connections.</param>
            <returns>
            A <see cref="T:RiakClient.RiakResult"/> detailing the success or failure of the operation, 
            as well as the <typeparamref name="TResult"/> return value.
            </returns>
        </member>
        <member name="P:RiakClient.Comms.IRiakNode.CanMarkOffline">
            <summary>
            Indicates if this node can be marked offline. <b>false</b> if the node points to a load balancer.
            </summary>
            <returns>
            <b>true</b> or <b>false</b> depending on the node's configuration.
            </returns>
        </member>
        <member name="T:RiakClient.Comms.IRiakConnection">
            <summary>
            The public interface for connections to Riak.
            </summary>
        </member>
        <member name="T:RiakClient.Comms.IRiakConnectionFactory">
            <summary>
            An interface for factories that create <see cref="T:RiakClient.Comms.IRiakConnection"/>s from <see cref="T:RiakClient.Config.IRiakNodeConfiguration"/>s.
            </summary>
        </member>
        <member name="M:RiakClient.Comms.IRiakConnectionFactory.CreateConnection(RiakClient.Config.IRiakNodeConfiguration,RiakClient.Config.IRiakAuthenticationConfiguration)">
            <summary>
            Create a <see cref="T:RiakClient.Comms.IRiakConnection"/> from a <see cref="T:RiakClient.Config.IRiakNodeConfiguration"/>.
            </summary>
            <param name="nodeConfig">The node configuration to base the connection on.</param>
            <param name="authConfig">The authentication configuration to use with the connection.</param>
            <returns>A new instance of a <see cref="T:RiakClient.Comms.IRiakConnection"/> type.</returns>
        </member>
        <member name="T:RiakClient.Config.IRiakAuthenticationConfiguration">
            <summary>
            Represents a configuration element interface for Riak authentication.
            </summary>
        </member>
        <member name="P:RiakClient.Config.IRiakAuthenticationConfiguration.Username">
            <summary>
            The username to authenticate with.
            </summary>
        </member>
        <member name="P:RiakClient.Config.IRiakAuthenticationConfiguration.Password">
            <summary>
            The password to authenticate with.
            </summary>
        </member>
        <member name="P:RiakClient.Config.IRiakAuthenticationConfiguration.ClientCertificateFile">
            <summary>
            A client certificate file to load and use.
            Must be a valid file path.
            </summary>
        </member>
        <member name="P:RiakClient.Config.IRiakAuthenticationConfiguration.ClientCertificateSubject">
            <summary>
            A client certificate subject, used to find and use a certificate from the local store.
            </summary>
        </member>
        <member name="P:RiakClient.Config.IRiakAuthenticationConfiguration.CertificateAuthorityFile">
            <summary>
            A client certificate authority certificate to load and use. 
            Must be a valid file path.
            </summary>
        </member>
        <member name="P:RiakClient.Config.IRiakAuthenticationConfiguration.CheckCertificateRevocation">
            <summary>
            The option to check the certificate revocation list during authentication.
            </summary>
        </member>
        <member name="T:RiakClient.Config.IRiakClusterConfiguration">
            <summary>
            Represents a configuration element interface for a Riak Cluster.
            </summary>
        </member>
        <member name="M:RiakClient.Config.IRiakClusterConfiguration.AddNode(RiakClient.Config.IRiakNodeConfiguration)">
            <summary>
            Add a <see cref="T:RiakClient.Config.IRiakNodeConfiguration"/> configuration to the cluster configuration.
            </summary>
            <param name="nodeConfiguration">The node configuration</param>
        </member>
        <member name="P:RiakClient.Config.IRiakClusterConfiguration.RiakNodes">
            <summary>
            A collection of <see cref="T:RiakClient.Config.IRiakNodeConfiguration"/> configurations detailing the Riak nodes that can be connected to.
            </summary>
        </member>
        <member name="P:RiakClient.Config.IRiakClusterConfiguration.NodePollTime">
            <summary>
            The period of time to poll nodes for health/liveness checks.
            </summary>
        </member>
        <member name="P:RiakClient.Config.IRiakClusterConfiguration.DefaultRetryWaitTime">
            <summary>
            The period of time to wait inbetween operation retries.
            </summary>
        </member>
        <member name="P:RiakClient.Config.IRiakClusterConfiguration.DefaultRetryCount">
            <summary>
            The max number of retry attempts to make when the client encounters 
            <see cref="T:RiakClient.ResultCode"/>.NoConnections or <see cref="T:RiakClient.ResultCode"/>.CommunicationError errors.
            </summary>
        </member>
        <member name="P:RiakClient.Config.IRiakClusterConfiguration.UseTtbEncoding">
            <summary>
            Use term-to-binary encoding for messages that support it.
            </summary>
        </member>
        <member name="P:RiakClient.Config.IRiakClusterConfiguration.Authentication">
            <summary>
            A <see cref="T:RiakClient.Config.IRiakAuthenticationConfiguration"/> configuration that details any authentication information.
            </summary>
        </member>
        <member name="T:RiakClient.Config.IRiakNodeConfiguration">
            <summary>
            Represents a configuration for a Riak Node.
            </summary>
        </member>
        <member name="P:RiakClient.Config.IRiakNodeConfiguration.Name">
            <summary>
            The name of the node.
            </summary>
        </member>
        <member name="P:RiakClient.Config.IRiakNodeConfiguration.HostAddress">
            <summary>
            The address of the node.  
            Can be an IP address or a resolvable domain name.
            </summary>
        </member>
        <member name="P:RiakClient.Config.IRiakNodeConfiguration.PbcPort">
            <summary>
            The port to use when connecting to the Protocol Buffers API.
            </summary>
        </member>
        <member name="P:RiakClient.Config.IRiakNodeConfiguration.PoolSize">
            <summary>
            The worker pool size to use for this node.
            This many workers (and connections) will be available for concurrent use.
            </summary>
        </member>
        <member name="P:RiakClient.Config.IRiakNodeConfiguration.ExternalLoadBalancer">
            <summary>
            If True, this node (pointing to a load balancer) will not be marked offline and requests will always be routed to it.
            If False (default) and this node is offline, it will be removed from the pool until health check determines it is healthy again.
            </summary>
        </member>
        <member name="P:RiakClient.Config.IRiakNodeConfiguration.UseTtbEncoding">
            <summary>
            Use term-to-binary encoding for messages that support it.
            </summary>
        </member>
        <member name="P:RiakClient.Config.IRiakNodeConfiguration.NetworkReadTimeout">
            <summary>
            The network timeout to use when attempting to read data from Riak.
            </summary>
        </member>
        <member name="P:RiakClient.Config.IRiakNodeConfiguration.NetworkWriteTimeout">
            <summary>
            The network timeout to use when attempting to write data to Riak.
            </summary>
        </member>
        <member name="P:RiakClient.Config.IRiakNodeConfiguration.NetworkConnectTimeout">
            <summary>
            The network timeout to use when attempting to connect to Riak.
            </summary>
        </member>
        <member name="T:RiakClient.Config.RiakAuthenticationConfiguration">
            <summary>
            Represents a configuration file element for configuring Riak Authentication.
            </summary>
        </member>
        <member name="P:RiakClient.Config.RiakAuthenticationConfiguration.Username">
            <inheritdoc/>
        </member>
        <member name="P:RiakClient.Config.RiakAuthenticationConfiguration.Password">
            <inheritdoc/>
        </member>
        <member name="P:RiakClient.Config.RiakAuthenticationConfiguration.ClientCertificateFile">
            <inheritdoc/>
        </member>
        <member name="P:RiakClient.Config.RiakAuthenticationConfiguration.ClientCertificateSubject">
            <inheritdoc/>
        </member>
        <member name="P:RiakClient.Config.RiakAuthenticationConfiguration.CertificateAuthorityFile">
            <inheritdoc/>
        </member>
        <member name="P:RiakClient.Config.RiakAuthenticationConfiguration.CheckCertificateRevocation">
            <inheritdoc/>
        </member>
        <member name="T:RiakClient.Erlang.OtpExternal">
            Provides a collection of constants used when encoding and decoding Erlang
            terms.
        </member>
        <member name="F:RiakClient.Erlang.OtpExternal.MaxAtomLength">
            The longest allowed Erlang atom 
        </member>
        <member name="F:RiakClient.Erlang.OtpExternal.SmallIntTag">
            The tag used for small integers 
        </member>
        <member name="F:RiakClient.Erlang.OtpExternal.IntTag">
            The tag used for integers 
        </member>
        <member name="F:RiakClient.Erlang.OtpExternal.FloatTag">
            The tag used for floating point numbers 
        </member>
        <member name="F:RiakClient.Erlang.OtpExternal.AtomTag">
            The tag used for atoms 
        </member>
        <member name="F:RiakClient.Erlang.OtpExternal.SmallTupleTag">
            The tag used for small tuples 
        </member>
        <member name="F:RiakClient.Erlang.OtpExternal.LargeTupleTag">
            The tag used for large tuples 
        </member>
        <member name="F:RiakClient.Erlang.OtpExternal.NilTag">
            The tag used for empty lists 
        </member>
        <member name="F:RiakClient.Erlang.OtpExternal.ListTag">
            The tag used for non-empty lists 
        </member>
        <member name="F:RiakClient.Erlang.OtpExternal.BinTag">
            The tag used for binaries 
        </member>
        <member name="F:RiakClient.Erlang.OtpExternal.SmallBigTag">
            The tag used for small bignums 
        </member>
        <member name="F:RiakClient.Erlang.OtpExternal.LargeBigTag">
            The tag used for large bignums 
        </member>
        <member name="F:RiakClient.Erlang.OtpExternal.VersionTag">
            The version number used to mark serialized Erlang terms 
        </member>
        <member name="T:RiakClient.Erlang.OtpInputStream">
            <summary>
            Provides a stream for decoding Erlang terms from external format.
            </summary>
        </member>
        <member name="M:RiakClient.Erlang.OtpInputStream.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Erlang.OtpInputStream"/> class
            from a buffer containing encoded Erlang terms.
            </summary>
            <param name="buffer">The buffer containing Erlang terms.</param>
        </member>
        <member name="M:RiakClient.Erlang.OtpInputStream.#ctor(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Erlang.OtpInputStream"/> class
            from a buffer containing encoded Erlang terms at the given
            offset and length.
            </summary>
            <param name="buffer">The buffer containing Erlang terms.</param>
            <param name="index">The index into buffer at which the stream begins.</param>
            <param name="count">The length of the stream in bytes.</param>
        </member>
        <member name="M:RiakClient.Erlang.OtpInputStream.ReadN(System.Byte[])">
            <summary>
            Read an array of bytes from the stream into the buffer.
            The method reads at most buffer.Length bytes from the input stream.
            </summary>
            <param name="buffer">The buffer into which to read data.</param>
            <returns>The number of bytes read.</returns>
        </member>
        <member name="M:RiakClient.Erlang.OtpInputStream.ReadN(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Read an array of bytes from the stream. The method reads at most len
            bytes from the input stream into offset off of the buffer.
            </summary>
            <param name="buffer">The buffer into which to read data.</param>
            <param name="offset">The offset in the buffer into which to read data.</param>
            <param name="count">The number of bytes to read.</param>
            <returns>The number of bytes read.</returns>
        </member>
        <member name="M:RiakClient.Erlang.OtpInputStream.Peek">
            <summary>
            Look ahead one position in the stream without consuming the byte found there.
            </summary>
            <returns>The next byte in the stream.</returns>
        </member>
        <member name="M:RiakClient.Erlang.OtpInputStream.Peek1">
            <summary>
            Look ahead one position in the stream without consuming the byte found there.
            </summary>
            <returns>The next byte in the stream.</returns>
        </member>
        <member name="M:RiakClient.Erlang.OtpInputStream.Peek1SkipVersion">
            <summary>
            Look ahead one position in the stream, skipping the version tag if it's read.
            </summary>
            <returns>The next byte from the stream.</returns>
        </member>
        <member name="M:RiakClient.Erlang.OtpInputStream.Read1">
            <summary>
            Read one byte from the stream.
            </summary>
            <returns>The next byte from the stream.</returns>
        </member>
        <member name="M:RiakClient.Erlang.OtpInputStream.Read1SkipVersion">
            <summary>
            Read one byte from the stream, skipping the version tag if it's read.
            </summary>
            <returns>The next byte from the stream.</returns>
        </member>
        <member name="M:RiakClient.Erlang.OtpInputStream.Read2BE">
            <summary>
            Read a two byte big endian integer from the stream.
            </summary>
            <returns>The bytes read, converted from big endian to an integer.</returns>
        </member>
        <member name="M:RiakClient.Erlang.OtpInputStream.Read4BE">
            <summary>
            Read a four byte big endian integer from the stream.
            </summary>
            <returns>The bytes read, converted from big endian to an integer.</returns>
        </member>
        <member name="M:RiakClient.Erlang.OtpInputStream.ReadBE(System.Int32)">
            <summary>
            Read a bigendian integer from the stream.
            </summary>
            <param name="n">The number of bytes to read</param>
            <returns>The bytes read, converted from big endian to an integer.</returns>
        </member>
        <member name="M:RiakClient.Erlang.OtpInputStream.ReadBoolean">
            <summary>
            Read an Erlang atom from the stream and interpret the value as a boolean.
            </summary>
            <returns>true if the atom at the current position in the stream contains
            the value 'true' (ignoring case), false otherwise.</returns>
        </member>
        <member name="M:RiakClient.Erlang.OtpInputStream.ReadAtom">
            <summary>
            Read an Erlang atom from the stream.
            </summary>
            <returns>string containing the value of the atom.</returns>
        </member>
        <member name="M:RiakClient.Erlang.OtpInputStream.ReadBinaryAsString">
            <summary>
            Read an Erlang binary from the stream and converts to a UTF-8 string.
            </summary>
            <returns> A string containing the value of the binary.</returns>
        </member>
        <member name="M:RiakClient.Erlang.OtpInputStream.ReadBinary">
            <summary>
            Read an Erlang binary from the stream.
            </summary>
            <returns> A byte array containing the value of the binary.</returns>
        </member>
        <member name="M:RiakClient.Erlang.OtpInputStream.ReadDouble">
            <summary>
            Read an Erlang float from the stream.
            </summary>
            <returns>The float value, as a double.</returns>
        </member>
        <member name="M:RiakClient.Erlang.OtpInputStream.IsLongTag(System.Byte)">
            <summary>
            Can the tag be parsed as a long
            </summary>
            <param name="tag">the tag to check</param>
            <returns>boolean indicating if tag can be parsed as a long.</returns>
        </member>
        <member name="M:RiakClient.Erlang.OtpInputStream.ReadLong">
            <summary>
            Read an array of bytes
            </summary>
            <returns>the value as a long.</returns>
        </member>
        <member name="M:RiakClient.Erlang.OtpInputStream.ReadListHead">
            <summary>
            Read a list header from the stream.
            </summary>
            <returns>the arity of the list.</returns>
        </member>
        <member name="M:RiakClient.Erlang.OtpInputStream.ReadTupleHead">
            <summary>
            Read a tuple header from the stream.
            </summary>
            <returns>the arity of the tuple.</returns>
        </member>
        <member name="T:RiakClient.Erlang.OtpOutputStream">
            <summary>
            Provides a stream for encoding Erlang terms to external format, for transmission or storage.
            </summary>
        </member>
        <member name="M:RiakClient.Erlang.OtpOutputStream.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Erlang.OtpOutputStream"/> class
            with the default initial <see cref="T:System.IO.MemoryStream"/>size.
            </summary>
        </member>
        <member name="M:RiakClient.Erlang.OtpOutputStream.Write(System.Byte)">
            <summary>
            Write one byte to the stream.
            </summary>
            <param name="b">The byte to write</param>
        </member>
        <member name="M:RiakClient.Erlang.OtpOutputStream.Write2BE(System.Int64)">
            <summary>
            Write the low two bytes of a value to the stream in big endian order.
            </summary>
            <param name="n">The value to use.</param>
        </member>
        <member name="M:RiakClient.Erlang.OtpOutputStream.Write4BE(System.Int64)">
            <summary>
            Write the low four bytes of a value to the stream in big endian order.
            </summary>
            <param name="n">The value to use.</param>
        </member>
        <member name="M:RiakClient.Erlang.OtpOutputStream.Write8BE(System.Int64)">
            <summary>
            Write the low eight (all) bytes of a value to the stream in big endian order.
            </summary>
            <param name="n">The value to use.</param>
        </member>
        <member name="M:RiakClient.Erlang.OtpOutputStream.WriteAtom(System.String)">
            <summary>
            Write a string to the stream as an Erlang atom. Assumes ISO-8859-1 encoding.
            This will throw an exception if the string can't be converted.
            </summary>
            <param name="atom">The string to write.</param>
        </member>
        <member name="M:RiakClient.Erlang.OtpOutputStream.WriteBinary(System.Byte[])">
            <summary>
            Write an array of bytes to the stream as an Erlang binary.
            </summary>
            <param name="bin">The array of bytes to write.</param>
        </member>
        <member name="M:RiakClient.Erlang.OtpOutputStream.WriteStringAsBinary(System.String)">
            <summary>
            Write a string as a UTF-8 encoded array of bytes to the stream as an Erlang binary.
            </summary>
            <param name="s">The string to write.</param>
        </member>
        <member name="M:RiakClient.Erlang.OtpOutputStream.WriteBoolean(System.Boolean)">
            <summary>
            Write a bool value to the stream as the Erlang atom 'true' or 'false'.
            </summary>
            <param name="b">The boolean value to write.</param>
        </member>
        <member name="M:RiakClient.Erlang.OtpOutputStream.WriteDouble(System.Double)">
            <summary>
            Write a double value to the stream.
            </summary>
            <param name="d">The double to use.</param>
        </member>
        <member name="M:RiakClient.Erlang.OtpOutputStream.WriteLong(System.Int64)">
            <summary>
            Write a long to the stream.
            </summary>
            <param name="l">The long to use.</param>
        </member>
        <member name="M:RiakClient.Erlang.OtpOutputStream.WriteListHead(System.Int32)">
            <summary>
            Write an Erlang list header to the stream. After calling this method, you
            must write 'arity' elements to the stream followed by nil, or it will not
            be possible to decode it later.
            </summary>
            <param name="arity">The number of elements in the list.</param>
        </member>
        <member name="M:RiakClient.Erlang.OtpOutputStream.WriteNil">
            <summary>
            Write an empty Erlang list to the stream.
            </summary>
        </member>
        <member name="M:RiakClient.Erlang.OtpOutputStream.WriteTupleHead(System.Int32)">
            <summary>
            Write an Erlang tuple header to the stream. After calling this method,
            you must write 'arity' elements to the stream or it will not be possible
            to decode it later.
            </summary>
            <param name="arity">The number of elements in the tuple.</param>
        </member>
        <member name="T:RiakClient.Exceptions.RiakUnsupportedException">
            <summary>
            Represents an error that is raised when conflicting Riak features are used together.
            </summary>
        </member>
        <member name="T:RiakClient.Exceptions.RiakException">
            <summary>
            Represents an error that occurred during execution.
            </summary>
        </member>
        <member name="M:RiakClient.Exceptions.RiakException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Exceptions.RiakException"/> class.
            </summary>
        </member>
        <member name="M:RiakClient.Exceptions.RiakException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Exceptions.RiakException"/> class.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:RiakClient.Exceptions.RiakException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Exceptions.RiakException"/> class.
            </summary>
            <param name="message">A message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:RiakClient.Exceptions.RiakException.#ctor(System.Int32,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Exceptions.RiakException"/> class.
            </summary>
            <param name="errorCode">An error code returned from a Riak operation.</param>
            <param name="message">A message that describes the error.</param>
            <param name="nodeOffline">A flag to mark if the node was offline or unreachable at the time of the error.</param>
        </member>
        <member name="M:RiakClient.Exceptions.RiakException.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Exceptions.RiakException"/> class.
            </summary>
            <param name="message">A message that describes the error.</param>
            <param name="nodeOffline">A flag to mark if the node was offline or unreachable at the time of the error.</param>
        </member>
        <member name="M:RiakClient.Exceptions.RiakException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc/>
            <exception cref="T:System.ArgumentNullException">The value of '<paramref name="info"/>' cannot be null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">A value has already been associated with '<paramref name="name"/>'.</exception>
        </member>
        <member name="P:RiakClient.Exceptions.RiakException.ErrorCode">
            <summary>
            An error code returned from a Riak operation.
            </summary>
        </member>
        <member name="P:RiakClient.Exceptions.RiakException.NodeOffline">
            <summary>
            A flag to mark if the node was offline or unreachable at the time of the error.
            </summary>
        </member>
        <member name="M:RiakClient.Exceptions.RiakUnsupportedException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Exceptions.RiakUnsupportedException"/> class.
            </summary>
        </member>
        <member name="M:RiakClient.Exceptions.RiakUnsupportedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Exceptions.RiakUnsupportedException"/> class.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:RiakClient.Exceptions.RiakUnsupportedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Exceptions.RiakUnsupportedException"/> class.
            </summary>
            <param name="message">A message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="T:RiakClient.IRiakAsyncClient">
            <summary>
            An asyncronous interface of <see cref="T:RiakClient.IRiakClient"/>. 
            Wraps all methods with a version of <see cref="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0})"/>.
            </summary>
        </member>
        <member name="M:RiakClient.IRiakAsyncClient.Ping">
            <summary>
            Ping this instance of Riak.
            </summary>
            <description>
            Ping can be used to ensure that there is an operational Riak node
            present at the other end of the client. It's important to note that this will ping
            any Riak node in the cluster and a specific node cannot be specified by the user.
            Do not use this method to determine individual node health.
            </description>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> that will contain a <see cref="T:RiakClient.RiakResult"/>. 
            Check <see cref="P:RiakClient.RiakResult.IsSuccess"/> to see if the operation was a success.
            </returns>
        </member>
        <member name="M:RiakClient.IRiakAsyncClient.Get(System.String,System.String,RiakClient.Models.RiakGetOptions)">
            <summary>
            Get the specified <paramref name="key"/> from the <paramref name="bucket"/>.
            Optionally can be read from rVal instances. By default, the server's
            r-value will be used, but can be overridden by rVal.
            </summary>
            <param name="bucket">The name of the bucket containing the <paramref name="key"/>.</param>
            <param name="key">The key of the object.</param>
            <param name="options">
            The <see cref="T:RiakClient.Models.RiakGetOptions"/> responsible for configuring the semantics of this single get request. 
            These options will override any previously defined bucket configuration properties.
            </param>
            <remarks>If a node does not respond, that does not necessarily mean that the 
            <paramref name="bucket"/>/<paramref name="key"/> combination is not available. 
            It simply means that fewer than R/PR nodes responded to the read request. 
            See <see cref="T:RiakClient.Models.RiakGetOptions"/> for information on how different options change Riak's default behavior.
            </remarks>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/>, that will contain a <see cref="T:RiakClient.RiakResult`1"/>,  
            which will contain the found <see cref="T:RiakClient.Models.RiakObject"/>.
            </returns>
        </member>
        <member name="M:RiakClient.IRiakAsyncClient.Get(RiakClient.Models.RiakObjectId,RiakClient.Models.RiakGetOptions)">
            <summary>
            Retrieve the specified object from Riak.
            </summary>
            <param name="objectId">
            Object identifier made up of a key, bucket, and bucket type. <see cref="T:RiakClient.Models.RiakObjectId"/>
            </param>
            <param name="options">
            The <see cref="T:RiakClient.Models.RiakGetOptions"/> responsible for configuring the semantics of this single get request.
            These options will override any previously defined bucket configuration properties.
            </param>
            <remarks>
            If a node does not respond, that does not necessarily mean that the 
            <paramref name="objectId"/> is not available. It simply means
            that fewer than <paramref name="rVal"/> nodes responded to the read request. Unfortunately, 
            the Riak API does not allow us to distinguish between a 404 resulting from less than <paramref name="rVal"/>
            nodes successfully responding and an <paramref name="objectId"/> not being found in Riak.
            </remarks>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/>, that will contain a <see cref="T:RiakClient.RiakResult`1"/>, 
            which will contain the found <see cref="T:RiakClient.Models.RiakObject"/>.
            </returns>
        </member>
        <member name="M:RiakClient.IRiakAsyncClient.Get(System.Collections.Generic.IEnumerable{RiakClient.Models.RiakObjectId},RiakClient.Models.RiakGetOptions)">
            <summary>
            Retrieve multiple objects from Riak.
            </summary>
            <param name="objectIds">
            An <see href="System.Collections.Generic.IEnumerable{T}"/> of <see cref="T:RiakClient.Models.RiakObjectId"/> to be retrieved.
            </param>
            <param name="options">
            The <see cref="T:RiakClient.Models.RiakGetOptions"/> responsible for configuring the semantics of this single get request. 
            These options will override any previously defined bucket configuration properties.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/>, that will contain an <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:RiakClient.RiakResult`1"/>.
            You should verify the success or failure of each result separately.
            </returns>
            <remarks>
            Riak does not support multi get behavior. RiakClient's multi get functionality wraps multiple
            get requests and returns results as an IEnumerable{RiakResult{RiakObject}}. Callers should be aware that
            this may result in partial success - all results should be evaluated individually in the calling application.
            In addition, applications should plan for multiple failures or multiple cases of siblings being present.
            </remarks>
        </member>
        <member name="M:RiakClient.IRiakAsyncClient.IncrementCounter(System.String,System.String,System.Int64,RiakClient.Models.RiakCounterUpdateOptions)">
            <summary>
            Increments a Riak counter. 
            </summary>
            <param name="bucket">The bucket.</param>
            <param name="counter">The name of the counter.</param>
            <param name="amount">The amount to increment/decrement the counter.</param>
            <param name="options">The <see cref="T:RiakClient.Models.RiakCounterUpdateOptions"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/>, that will contain a <see cref="T:RiakClient.Models.RiakCounterResult"/>.</returns>
            <remarks>Only available in Riak 1.4+. If the counter is not initialized, then the counter will be initialized to 0 and then incremented.</remarks>
        </member>
        <member name="M:RiakClient.IRiakAsyncClient.GetCounter(System.String,System.String,RiakClient.Models.RiakCounterGetOptions)">
            <summary>
            Returns the value of a counter.
            </summary>
            <param name="bucket">The bucket.</param>
            <param name="counter">The counter.</param>
            <param name="options"><see cref="T:RiakClient.Models.RiakCounterGetOptions"/> describing how to read the counter.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/>, that will contain a <see cref="T:RiakClient.Models.RiakCounterResult"/>.</returns>
            <remarks>Only available in Riak 1.4+.</remarks>
        </member>
        <member name="M:RiakClient.IRiakAsyncClient.Put(RiakClient.Models.RiakObject,RiakClient.Models.RiakPutOptions)">
            <summary>
            Persist a <see cref="T:RiakClient.Models.RiakObject"/> to Riak using the specific <see cref="T:RiakClient.Models.RiakPutOptions"/>.
            </summary>
            <param name="value">The <see cref="T:RiakClient.Models.RiakObject"/> to save.</param>
            <param name="options">
            The <see cref="T:RiakClient.Models.RiakPutOptions"/> responsible for configuring the semantics of this single put request. 
            These options will override any previously defined bucket configuration properties.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/>, that will contain a <see cref="T:RiakClient.RiakResult"/> 
            detailing the success or failure of the operation.
            </returns>
        </member>
        <member name="M:RiakClient.IRiakAsyncClient.Put(System.Collections.Generic.IEnumerable{RiakClient.Models.RiakObject},RiakClient.Models.RiakPutOptions)">
            <summary>
            Persist an <see href="System.Collections.Generic.IEnumerable{T}"/> of <see cref="T:RiakClient.Models.RiakObject"/>s to Riak.
            </summary>
            <param name="values">
            The <see href="System.Collections.Generic.IEnumerable{T}"/> of <see cref="T:RiakClient.Models.RiakObject"/>s to save.
            </param>
            <param name="options">
            The <see cref="T:RiakClient.Models.RiakPutOptions"/> responsible for configuring the semantics of this single put request. 
            These options will override any previously defined bucket configuration properties.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/>, that will contain an 
            <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:RiakClient.RiakResult`1"/>. 
            You should verify the success or failure of each result separately.
            </returns>
            <remarks>
            Riak does not support multi put behavior. RiakClient's multi put functionality wraps multiple
            put requests and returns results as an IEnumerable{RiakResult{RiakObject}}. Callers should be aware that
            this may result in partial success - all results should be evaluated individually in the calling application.
            In addition, applications should plan for multiple failures or multiple cases of siblings being present.
            </remarks>
        </member>
        <member name="M:RiakClient.IRiakAsyncClient.Delete(RiakClient.Models.RiakObject,RiakClient.Models.RiakDeleteOptions)">
            <summary>
            Delete the data identified by the <paramref name="riakObject"/>
            </summary>
            <param name="riakObject">The object to delete.</param>
            <param name="options">
            The <see cref="T:RiakClient.Models.RiakDeleteOptions"/> responsible for configuring the semantics of this single delete request. 
            These options will override any previously defined bucket configuration properties.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/>, that will contain a <see cref="T:RiakClient.RiakResult"/> 
            detailing the success or failure of the operation.
            </returns>
        </member>
        <member name="M:RiakClient.IRiakAsyncClient.Delete(System.String,System.String,RiakClient.Models.RiakDeleteOptions)">
            <summary>
            Delete the object identified by <paramref name="key"/> from a <paramref name="bucket"/>.
            </summary>
            <param name="bucket">The name of the bucket containing the <paramref name="key"/>.</param>
            <param name="key">The key of the object to be deleted.</param>
            <param name="options">
            The <see cref="T:RiakClient.Models.RiakDeleteOptions"/> responsible for configuring the semantics of this single delete request. 
            These options will override any previously defined bucket configuration properties.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/>, that will contain a <see cref="T:RiakClient.RiakResult"/> 
            detailing the success or failure of the operation.
            </returns>
        </member>
        <member name="M:RiakClient.IRiakAsyncClient.Delete(RiakClient.Models.RiakObjectId,RiakClient.Models.RiakDeleteOptions)">
            <summary>
            Delete the object identified by the <paramref name="objectId"/>.
            </summary>
            <param name="objectId">The <see cref="T:RiakClient.Models.RiakObjectId"/> of the object to be deleted.</param>
            <param name="options">
            The <see cref="T:RiakClient.Models.RiakDeleteOptions"/> responsible for configuring the semantics of this single delete request. 
            These options will override any previously defined bucket configuration properties.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/>, that will contain a <see cref="T:RiakClient.RiakResult"/> 
            detailing the success or failure of the operation.
            </returns>
        </member>
        <member name="M:RiakClient.IRiakAsyncClient.Delete(System.Collections.Generic.IEnumerable{RiakClient.Models.RiakObjectId},RiakClient.Models.RiakDeleteOptions)">
            <summary>
            Delete multiple objects identified by a <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:RiakClient.Models.RiakObjectId"/>.
            </summary>
            <param name="objectIds">
            A <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:RiakClient.Models.RiakObjectId"/>s to delete.
            </param>
            <param name="options">
            The <see cref="T:RiakClient.Models.RiakDeleteOptions"/> responsible for configuring the semantics of this delete request. 
            These options will override any previously defined bucket configuration properties.
            </param>  
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/>, that will contain an <see cref="T:System.Collections.Generic.IEnumerable`1"/> 
            of <see cref="T:RiakClient.RiakResult"/>, one for each individual delete operation.
            You should verify the success or failure of each result separately.
            </returns>
        </member>
        <member name="M:RiakClient.IRiakAsyncClient.Search(RiakClient.Models.Search.RiakSearchRequest)">
            <summary>
            Perform a Riak Search query.
            </summary>
            <param name="search">The <see cref="T:RiakClient.Models.Search.RiakSearchRequest"/> to perform.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/>, that will contain a <see cref="T:RiakClient.RiakResult`1"/> 
            of <see cref="T:RiakClient.Models.Search.RiakSearchResult"/>.
            </returns>
        </member>
        <member name="M:RiakClient.IRiakAsyncClient.MapReduce(RiakClient.Models.MapReduce.RiakMapReduceQuery)">
            <summary>
            Execute a map reduce query.
            </summary>
            <param name="query">The <see cref="T:RiakClient.Models.MapReduce.RiakMapReduceQuery"/> to perform.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/>, that will contain a  <see cref="T:RiakClient.RiakResult`1"/> 
            of <see cref="T:RiakClient.Models.MapReduce.RiakMapReduceResult"/>.
            </returns>
        </member>
        <member name="M:RiakClient.IRiakAsyncClient.StreamMapReduce(RiakClient.Models.MapReduce.RiakMapReduceQuery)">
            <summary>
            Perform a map reduce query and stream the results.
            </summary>
            <param name="query">The map reduce query to perform.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/>, that will contain a <see cref="T:RiakClient.RiakResult`1"/> 
            of <see cref="T:RiakClient.Models.MapReduce.RiakStreamedMapReduceResult"/>.
            </returns>
            <remarks>
            <b>Make sure to fully enumerate the <see cref="T:RiakClient.Models.MapReduce.RiakStreamedMapReduceResult"/> 
            or connections may be left open.</b>
            </remarks>
        </member>
        <member name="M:RiakClient.IRiakAsyncClient.ListBuckets">
            <summary>
            Lists all buckets in the Default Bucket Type.
            </summary>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/>, that will contain an 
            <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.String"/> bucket names.
            </returns>
            <remarks>
            Buckets provide a logical namespace for keys. Listing buckets requires folding over 
            all keys in a cluster and reading a list of buckets from disk. 
            This operation, while non-blocking in Riak 1.0 and newer, still produces considerable
            physical I/O and can take a long time.
            </remarks>
        </member>
        <member name="M:RiakClient.IRiakAsyncClient.StreamListBuckets">
            <summary>
            Lists all buckets available on the Riak cluster. This uses an <see cref="T:System.Collections.Generic.IEnumerable`1"/> 
            of <see cref="T:System.String"/> to lazy initialize the collection of bucket names. 
            </summary>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/>, that will contain an 
            <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.String"/> bucket names.
            </returns>
            <remarks>
            Buckets provide a logical namespace for keys. Listing buckets requires folding over all keys in a 
            cluster and reading a list of buckets from disk. This operation, while non-blocking in Riak 1.0 and 
            newer, still produces considerable physical I/O and can take a long time. 
            <b>Callers should fully enumerate the collection or else close the connection when finished.</b>
            </remarks>
        </member>
        <member name="M:RiakClient.IRiakAsyncClient.ListKeys(System.String)">
            <summary>
            Lists all keys in the specified <paramref name="bucket"/>.
            </summary>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/>, that will contain an 
            <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.String"/> keys.
            </returns>
            <param name="bucket">
            The bucket to list keys from.
            </param>
            <remarks>
            ListKeys is an expensive operation that requires folding over all data in the Riak cluster to produce
            a list of keys. This operation, while cheaper in Riak 1.0 than in earlier versions of Riak, should be avoided.
            </remarks>
        </member>
        <member name="M:RiakClient.IRiakAsyncClient.StreamListKeys(System.String)">
            <summary>
            Performs a streaming list keys operation.
            </summary>
            <param name="bucket">The bucket to list keys from.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/>, that will contain an 
            <see cref="T:System.Collections.Generic.IEnumerable`1"/> of keys.
            </returns>
            <remarks>
            While this streams results back to the client, alleviating pressure on Riak, this still relies on
            folding over all keys present in the Riak cluster. Use at your own risk. If you are using the LevelDB backend,
            a better approach would be to use <see cref="M:RiakClient.IRiakAsyncClient.ListKeysFromIndex(System.String)"/> in most cases.
            </remarks>
        </member>
        <member name="M:RiakClient.IRiakAsyncClient.GetBucketProperties(System.String)">
            <summary>
            Returns all properties for a <paramref name="bucket"/>.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/>, that will contain the bucket properties.</returns>
            <param name="bucket">The name of the bucket to get properties for.</param>
        </member>
        <member name="M:RiakClient.IRiakAsyncClient.SetBucketProperties(System.String,RiakClient.Models.RiakBucketProperties)">
            <summary>
            Sets the <see cref="T:RiakClient.Models.RiakBucketProperties"/> properties of a <paramref name="bucket"/>.
            </summary>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/>, that will contain a <see cref="T:RiakClient.RiakResult"/> 
            detailing the success or failure of the operation.
            </returns>
            <param name="bucket">The name of the bucket to set the properties on.</param>
            <param name="properties">
            The properties to set. Note that only those properties explicitly set in the 
            <see cref="T:RiakClient.Models.RiakBucketProperties"/> will be set on the bucket. 
            Those not set in the object will retain their values on Riak's side.
            </param>
        </member>
        <member name="M:RiakClient.IRiakAsyncClient.ResetBucketProperties(System.String)">
            <summary>
            Reset the properties on a bucket back to their defaults.
            </summary>
            <param name="bucket">The name of the bucket to reset the properties on.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/>, that will contain a <see cref="T:RiakClient.RiakResult"/> 
            detailing the success or failure of the operation.
            </returns>
        </member>
        <member name="M:RiakClient.IRiakAsyncClient.WalkLinks(RiakClient.Models.RiakObject,System.Collections.Generic.IList{RiakClient.Models.RiakLink})">
            <summary>
            Retrieve arbitrarily deep list of links for a <see cref="T:RiakClient.Models.RiakObject"/>
            </summary>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/>, that will contain an <see cref="T:System.Collections.Generic.IList`1"/> 
            of <see cref="T:RiakClient.Models.RiakObject"/> identified by the input <paramref name="riakLinks"/>.
            </returns>
            <param name="riakObject">The initial object to use for the beginning of the link walking.</param>
            <param name="riakLinks">A list of link definitions.</param>
            <remarks>Refer to http://wiki.basho.com/Links-and-Link-Walking.html for more information.</remarks>
        </member>
        <member name="M:RiakClient.IRiakAsyncClient.GetServerInfo">
            <summary>
            Get the server information from the connected cluster.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/>, that will contain a <see cref="T:RiakClient.Models.RiakServerInfo"/> 
            object containing information gathered from a node in the cluster.
            </returns>
            <remarks>
            This function will assume that all of the nodes in the cluster are running
            the same version of Riak. It will only get executed on a single node, and the content
            that is returned technically only relates to that node. All nodes in a cluster should
            run on the same version of Riak.
            </remarks>
        </member>
        <member name="M:RiakClient.IRiakAsyncClient.GetSecondaryIndex(RiakClient.Models.RiakIndexId,System.Numerics.BigInteger,RiakClient.Models.RiakIndexGetOptions)">
            <summary>
            Query a secondary index for a specific integer value.
            </summary>
            <param name="index">The <see cref="T:RiakClient.Models.RiakIndexId"/> identifying the index to query.</param>
            <param name="value">The integer value to query for.</param>
            <param name="options">The <see cref="T:RiakClient.Models.RiakIndexGetOptions"/> responsible for configuring the semantics of this single index request.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/>, that will contain a <see cref="T:RiakClient.RiakResult`1"/> 
            of <see cref="T:RiakClient.Models.Index.RiakIndexResult"/>.
            </returns>
        </member>
        <member name="M:RiakClient.IRiakAsyncClient.GetSecondaryIndex(RiakClient.Models.RiakIndexId,System.String,RiakClient.Models.RiakIndexGetOptions)">
            <summary>
            Query a secondary index for a specific string value.
            </summary>
            <param name="index">The <see cref="T:RiakClient.Models.RiakIndexId"/> identifying the index to query.</param>
            <param name="value">The string value to query for.</param>
            <param name="options">The <see cref="T:RiakClient.Models.RiakIndexGetOptions"/> responsible for configuring the semantics of this single index request.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/>, that will contain a <see cref="T:RiakClient.RiakResult`1"/> 
            of <see cref="T:RiakClient.Models.Index.RiakIndexResult"/>.
            </returns>
        </member>
        <member name="M:RiakClient.IRiakAsyncClient.GetSecondaryIndex(RiakClient.Models.RiakIndexId,System.Numerics.BigInteger,System.Numerics.BigInteger,RiakClient.Models.RiakIndexGetOptions)">
            <summary>
            Query a secondary index for a range of integer values.
            </summary>
            <param name="index">The <see cref="T:RiakClient.Models.RiakIndexId"/> identifying the index to query.</param>
            <param name="min">The inclusive min integer value for the query range.</param>
            <param name="max">The inclusive max integer value for the query range.</param>
            <param name="options">The <see cref="T:RiakClient.Models.RiakIndexGetOptions"/> responsible for configuring the semantics of this single index request.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/>, that will contain a <see cref="T:RiakClient.RiakResult`1"/> 
            of <see cref="T:RiakClient.Models.Index.RiakIndexResult"/>.
            </returns>
        </member>
        <member name="M:RiakClient.IRiakAsyncClient.GetSecondaryIndex(RiakClient.Models.RiakIndexId,System.String,System.String,RiakClient.Models.RiakIndexGetOptions)">
            <summary>
            Query a secondary index for a range of string values.
            </summary>
            <param name="index">The <see cref="T:RiakClient.Models.RiakIndexId"/> identifying the index to query.</param>
            <param name="min">The inclusive min string value for the query range.</param>
            <param name="max">The inclusive max string value for the query range.</param>
            <param name="options">The <see cref="T:RiakClient.Models.RiakIndexGetOptions"/> responsible for configuring the semantics of this single index request.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/>, that will contain a <see cref="T:RiakClient.RiakResult`1"/> 
            of <see cref="T:RiakClient.Models.Index.RiakIndexResult"/>.
            </returns>
        </member>
        <member name="M:RiakClient.IRiakAsyncClient.StreamGetSecondaryIndex(RiakClient.Models.RiakIndexId,System.Numerics.BigInteger,RiakClient.Models.RiakIndexGetOptions)">
            <summary>
            Query a secondary index for a specific integer value, and stream the results back.
            </summary>
            <param name="index">The <see cref="T:RiakClient.Models.RiakIndexId"/> identifying the index to query.</param>
            <param name="value">The integer value to query for.</param>
            <param name="options">The <see cref="T:RiakClient.Models.RiakIndexGetOptions"/> responsible for configuring the semantics of this single index request.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/>, that will contain a <see cref="T:RiakClient.RiakResult`1"/> 
            of <see cref="T:RiakClient.Models.Index.RiakStreamedIndexResult"/>.
            </returns>
        </member>
        <member name="M:RiakClient.IRiakAsyncClient.StreamGetSecondaryIndex(RiakClient.Models.RiakIndexId,System.String,RiakClient.Models.RiakIndexGetOptions)">
            <summary>
            Query a secondary index for a specific string value, and stream the results back.
            </summary>
            <param name="index">The <see cref="T:RiakClient.Models.RiakIndexId"/> identifying the index to query.</param>
            <param name="value">The string value to query for.</param>
            <param name="options">The <see cref="T:RiakClient.Models.RiakIndexGetOptions"/> responsible for configuring the semantics of this single index request.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/>, that will contain a <see cref="T:RiakClient.RiakResult`1"/> 
            of <see cref="T:RiakClient.Models.Index.RiakStreamedIndexResult"/>.
            </returns>
        </member>
        <member name="M:RiakClient.IRiakAsyncClient.StreamGetSecondaryIndex(RiakClient.Models.RiakIndexId,System.Numerics.BigInteger,System.Numerics.BigInteger,RiakClient.Models.RiakIndexGetOptions)">
            <summary>
            Query a secondary index for a range of integer values, and stream the results back.
            </summary>
            <param name="index">The <see cref="T:RiakClient.Models.RiakIndexId"/> identifying the index to query.</param>
            <param name="min">The inclusive min integer value for the query range.</param>
            <param name="max">The inclusive max integer value for the query range.</param>
            <param name="options">The <see cref="T:RiakClient.Models.RiakIndexGetOptions"/> responsible for configuring the semantics of this single index request.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/>, that will contain a <see cref="T:RiakClient.RiakResult`1"/> 
            of <see cref="T:RiakClient.Models.Index.RiakStreamedIndexResult"/>.
            </returns>
        </member>
        <member name="M:RiakClient.IRiakAsyncClient.StreamGetSecondaryIndex(RiakClient.Models.RiakIndexId,System.String,System.String,RiakClient.Models.RiakIndexGetOptions)">
            <summary>
            Query a secondary index for a range of string values, and stream the results back.
            </summary>
            <param name="index">The <see cref="T:RiakClient.Models.RiakIndexId"/> identifying the index to query.</param>
            <param name="min">The inclusive min string value for the query range.</param>
            <param name="max">The inclusive max string value for the query range.</param>
            <param name="options">The <see cref="T:RiakClient.Models.RiakIndexGetOptions"/> responsible for configuring the semantics of this single index request.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/>, that will contain a <see cref="T:RiakClient.RiakResult`1"/> 
            of <see cref="T:RiakClient.Models.Index.RiakStreamedIndexResult"/>.
            </returns>
        </member>
        <member name="M:RiakClient.IRiakAsyncClient.ListKeysFromIndex(System.String)">
            <summary>
            Return a list of keys from the given bucket.
            </summary>
            <param name="bucket">The bucket to list keys from.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/>, that will contain an 
            <see cref="T:System.Collections.Generic.IEnumerable`1"/> of keys.
            </returns>
            <remarks>
            This uses the $key special index instead of the list keys API to 
            quickly return an unsorted list of keys from Riak. Only works with a LevelDB backend.
            </remarks>
        </member>
        <member name="M:RiakClient.IRiakAsyncClient.Batch(System.Action{RiakClient.IRiakBatchClient})">
            <summary>
            Used to create a batched set of actions to be sent to a Riak cluster.
            </summary>
            <param name="batchAction">An action that wraps all the operations to batch together.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:RiakClient.IRiakAsyncClient.Batch``1(System.Func{RiakClient.IRiakBatchClient,``0})">
            <summary>
            Used to create a batched set of actions to be sent to a Riak cluster.
            </summary>
            <typeparam name="T">The <paramref name="batchFun"/>'s return type.</typeparam>
            <param name="batchFunction">A func that wraps all the operations to batch together.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> that will contain the return value of <paramref name="batchFun"/>.</returns>
        </member>
        <member name="M:RiakClient.IRiakAsyncClient.Execute(RiakClient.Commands.IRiakCommand)">
            <summary>
            Used to execute a command against a Riak cluster.
            </summary>
            <param name="command">The command to execute.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/>, which will indicate success. The passed in command will contain the response.
            </returns>
        </member>
        <member name="T:RiakClient.IRiakClient">
            <summary>
            Subinterface of <see cref="T:RiakClient.IRiakBatchClient"/>. 
            Adds properties for the Async client and batch operators.
            </summary>
        </member>
        <member name="T:RiakClient.IRiakBatchClient">
            <summary>
            Interface for most Riak client operations.
            </summary>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.Ping">
            <summary>
            Ping this instance of Riak.
            </summary>
            <description>
            Ping can be used to ensure that there is an operational Riak node
            present at the other end of the client. It's important to note that this will ping
            any Riak node in the cluster and a specific node cannot be specified by the user.
            Do not use this method to determine individual node health.
            </description>
            <returns>
            Returns a <see cref="T:RiakClient.RiakResult"/>. Check <see cref="P:RiakClient.RiakResult.IsSuccess"/> to see if the operation was a success.
            </returns>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.Get(RiakClient.Models.RiakObjectId,RiakClient.Models.RiakGetOptions)">
            <summary>
            Retrieve the specified object from Riak.
            </summary>
            <param name="objectId">
            Object identifier made up of a key, bucket, and bucket type. <see cref="T:RiakClient.Models.RiakObjectId"/>
            </param>
            <param name="options">
            The <see cref="T:RiakClient.Models.RiakGetOptions"/> responsible for configuring the semantics of this single get request.
            These options will override any previously defined bucket configuration properties.
            </param>
            <remarks>
            If a node does not respond, that does not necessarily mean that the 
            <paramref name="objectId"/> is not available. It simply means
            that fewer than <paramref name="rVal"/> nodes responded to the read request. Unfortunately, 
            the Riak API does not allow us to distinguish between a 404 resulting from less than <paramref name="rVal"/>
            nodes successfully responding and an <paramref name="objectId"/> not being found in Riak.
            </remarks>
            <returns>
            A <see cref="T:RiakClient.RiakResult`1"/>, which will contain the found <see cref="T:RiakClient.Models.RiakObject"/>.
            </returns>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.Get(System.String,System.String,RiakClient.Models.RiakGetOptions)">
            <summary>
            Get the specified <paramref name="key"/> from the <paramref name="bucket"/>.
            Optionally can be read from rVal instances. By default, the server's
            r-value will be used, but can be overridden by rVal.
            </summary>
            <param name="bucket">The name of the bucket containing the <paramref name="key"/>.</param>
            <param name="key">The key of the object.</param>
            <param name="options">
            The <see cref="T:RiakClient.Models.RiakGetOptions"/> responsible for configuring the semantics of this single get request. 
            These options will override any previously defined bucket configuration properties.
            </param>
            <remarks>If a node does not respond, that does not necessarily mean that the 
            <paramref name="bucket"/>/<paramref name="key"/> combination is not available. 
            It simply means that fewer than R/PR nodes responded to the read request. 
            See <see cref="T:RiakClient.Models.RiakGetOptions"/> for information on how different options change Riak's default behavior.
            </remarks>
            <returns>
            A <see cref="T:RiakClient.RiakResult`1"/>, which will contain the found <see cref="T:RiakClient.Models.RiakObject"/>.
            </returns>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.Get(System.String,System.String,System.String,RiakClient.Models.RiakGetOptions)">
            <summary>
            Retrieve the specified object from Riak.
            </summary>
            <param name="bucketType">The name of the bucket type containing the <paramref name="bucket"/>.</param>
            <param name="bucket">The name of the bucket containing the <paramref name="key"/>.</param>
            <param name="key">The key of the object.</param>
            <param name="options">
            The <see cref="T:RiakClient.Models.RiakGetOptions"/> responsible for configuring the semantics of this single get request. 
            These options will override any previously defined bucket configuration properties.
            </param>
            <remarks>
            If a node does not respond, that does not necessarily mean that the 
            <paramref name="bucketType"/>/<paramref name="bucket"/>/<paramref name="key"/> combination is not available. 
            It simply means that fewer than R/PR nodes responded to the read request. See <see cref="T:RiakClient.Models.RiakGetOptions"/>
            for information on how different options change Riak's default behavior.
            </remarks>
            <returns>
            A <see cref="T:RiakClient.RiakResult`1"/>, which will contain the found <see cref="T:RiakClient.Models.RiakObject"/>.
            </returns>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.Get(System.Collections.Generic.IEnumerable{RiakClient.Models.RiakObjectId},RiakClient.Models.RiakGetOptions)">
            <summary>
            Retrieve multiple objects from Riak.
            </summary>
            <param name="objectIds">
            An <see href="System.Collections.Generic.IEnumerable{T}"/> of <see cref="T:RiakClient.Models.RiakObjectId"/> to be retrieved.
            </param>
            <param name="options">
            The <see cref="T:RiakClient.Models.RiakGetOptions"/> responsible for configuring the semantics of this single get request. 
            These options will override any previously defined bucket configuration properties.
            </param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:RiakClient.RiakResult`1"/>
            is returned. You should verify the success or failure of each result separately.
            </returns>
            <remarks>
            Riak does not support multi get behavior. RiakClient's multi get functionality wraps multiple
            get requests and returns results as an IEnumerable{RiakResult{RiakObject}}. Callers should be aware that
            this may result in partial success - all results should be evaluated individually in the calling application.
            In addition, applications should plan for multiple failures or multiple cases of siblings being present.
            </remarks>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.IncrementCounter(System.String,System.String,System.Int64,RiakClient.Models.RiakCounterUpdateOptions)">
            <summary>
            Increments a Riak counter. 
            </summary>
            <param name="bucket">The bucket.</param>
            <param name="counter">The name of the counter.</param>
            <param name="amount">The amount to increment/decrement the counter.</param>
            <param name="options">The <see cref="T:RiakClient.Models.RiakCounterUpdateOptions"/>.</param>
            <returns><see cref="T:RiakClient.Models.RiakCounterResult"/></returns>
            <remarks>Only available in Riak 1.4+. If the counter is not initialized, then the counter will be initialized to 0 and then incremented.</remarks>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.GetCounter(System.String,System.String,RiakClient.Models.RiakCounterGetOptions)">
            <summary>
            Returns the value of a counter.
            </summary>
            <param name="bucket">The bucket.</param>
            <param name="counter">The counter.</param>
            <param name="options"><see cref="T:RiakClient.Models.RiakCounterGetOptions"/> describing how to read the counter.</param>
            <returns><see cref="T:RiakClient.Models.RiakCounterResult"/>.</returns>
            <remarks>Only available in Riak 1.4+.</remarks>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.Put(RiakClient.Models.RiakObject,RiakClient.Models.RiakPutOptions)">
            <summary>
            Persist a <see cref="T:RiakClient.Models.RiakObject"/> to Riak using the specific <see cref="T:RiakClient.Models.RiakPutOptions"/>.
            </summary>
            <param name="value">The <see cref="T:RiakClient.Models.RiakObject"/> to save.</param>
            <param name="options">
            The <see cref="T:RiakClient.Models.RiakPutOptions"/> responsible for configuring the semantics of this single put request. 
            These options will override any previously defined bucket configuration properties.
            </param>
            <returns>A <see cref="T:RiakClient.RiakResult"/> detailing the success or failure of the operation.</returns>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.Put(System.Collections.Generic.IEnumerable{RiakClient.Models.RiakObject},RiakClient.Models.RiakPutOptions)">
            <summary>
            Persist an <see href="System.Collections.Generic.IEnumerable{T}"/> of <see cref="T:RiakClient.Models.RiakObject"/>s to Riak.
            </summary>
            <param name="values">
            The <see href="System.Collections.Generic.IEnumerable{T}"/> of <see cref="T:RiakClient.Models.RiakObject"/>s to save.
            </param>
            <param name="options">
            The <see cref="T:RiakClient.Models.RiakPutOptions"/> responsible for configuring the semantics of this single put request. 
            These options will override any previously defined bucket configuration properties.
            </param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:RiakClient.RiakResult`1"/>
            is returned. You should verify the success or failure of each result separately.
            </returns>
            <remarks>
            Riak does not support multi put behavior. RiakClient's multi put functionality wraps multiple
            put requests and returns results as an IEnumerable{RiakResult{RiakObject}}. Callers should be aware that
            this may result in partial success - all results should be evaluated individually in the calling application.
            In addition, applications should plan for multiple failures or multiple cases of siblings being present.
            </remarks>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.Delete(RiakClient.Models.RiakObject,RiakClient.Models.RiakDeleteOptions)">
            <summary>
            Delete the data identified by the <paramref name="riakObject"/>
            </summary>
            <param name="riakObject">The object to delete.</param>
            <param name="options">
            The <see cref="T:RiakClient.Models.RiakDeleteOptions"/> responsible for configuring the semantics of this single delete request. 
            These options will override any previously defined bucket configuration properties.
            </param>
            <returns>A <see cref="T:RiakClient.RiakResult"/> detailing the success or failure of the operation.</returns>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.Delete(System.String,System.String,RiakClient.Models.RiakDeleteOptions)">
            <summary>
            Delete the object identified by <paramref name="key"/> from a <paramref name="bucket"/>.
            </summary>
            <param name="bucket">The name of the bucket containing the <paramref name="key"/>.</param>
            <param name="key">The key of the object to be deleted.</param>
            <param name="options">
            The <see cref="T:RiakClient.Models.RiakDeleteOptions"/> responsible for configuring the semantics of this single delete request. 
            These options will override any previously defined bucket configuration properties.
            </param>
            <returns>A <see cref="T:RiakClient.RiakResult"/> detailing the success or failure of the operation.</returns>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.Delete(System.String,System.String,System.String,RiakClient.Models.RiakDeleteOptions)">
            <summary>
            Delete the object identified by <paramref name="key"/> from a <paramref name="bucket"/>.
            </summary>
            <param name="bucketType">The name of the bucket type containing the <paramref name="bucket"/>.</param>
            <param name="bucket">The name of the bucket containing the <paramref name="key"/>.</param>
            <param name="key">The key of the object to be deleted.</param>
            <param name="options">
            The <see cref="T:RiakClient.Models.RiakDeleteOptions"/> responsible for configuring the semantics of this single delete request. 
            These options will override any previously defined bucket configuration properties.
            </param>
            <returns>A <see cref="T:RiakClient.RiakResult"/> detailing the success or failure of the operation.</returns>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.Delete(RiakClient.Models.RiakObjectId,RiakClient.Models.RiakDeleteOptions)">
            <summary>
            Delete the object identified by the <paramref name="objectId"/>.
            </summary>
            <param name="objectId">The <see cref="T:RiakClient.Models.RiakObjectId"/> of the object to be deleted.</param>
            <param name="options">
            The <see cref="T:RiakClient.Models.RiakDeleteOptions"/> responsible for configuring the semantics of this single delete request. 
            These options will override any previously defined bucket configuration properties.
            </param>
            <returns>A <see cref="T:RiakClient.RiakResult"/> detailing the success or failure of the operation.</returns>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.Delete(System.Collections.Generic.IEnumerable{RiakClient.Models.RiakObjectId},RiakClient.Models.RiakDeleteOptions)">
            <summary>
            Delete multiple objects identified by a <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:RiakClient.Models.RiakObjectId"/>.
            </summary>
            <param name="objectIds">
            A <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:RiakClient.Models.RiakObjectId"/>s to delete.
            </param>
            <param name="options">
            The <see cref="T:RiakClient.Models.RiakDeleteOptions"/> responsible for configuring the semantics of this delete request. 
            These options will override any previously defined bucket configuration properties.
            </param>  
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:RiakClient.RiakResult"/>, one for each individual delete operation.
            You should verify the success or failure of each result separately.
            </returns>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.Search(RiakClient.Models.Search.RiakSearchRequest)">
            <summary>
            Perform a Riak Search query.
            </summary>
            <param name="search">The <see cref="T:RiakClient.Models.Search.RiakSearchRequest"/> to perform.</param>
            <returns>A <see cref="T:RiakClient.RiakResult`1"/> of <see cref="T:RiakClient.Models.Search.RiakSearchResult"/>.</returns>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.MapReduce(RiakClient.Models.MapReduce.RiakMapReduceQuery)">
            <summary>
            Execute a map reduce query.
            </summary>
            <param name="query">The <see cref="T:RiakClient.Models.MapReduce.RiakMapReduceQuery"/> to perform.</param>
            <returns>A <see cref="T:RiakClient.RiakResult`1"/> of <see cref="T:RiakClient.Models.MapReduce.RiakMapReduceResult"/>.</returns>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.StreamMapReduce(RiakClient.Models.MapReduce.RiakMapReduceQuery)">
            <summary>
            Perform a map reduce query and stream the results.
            </summary>
            <param name="query">The map reduce query to perform.</param>
            <returns>A <see cref="T:RiakClient.RiakResult`1"/> of <see cref="T:RiakClient.Models.MapReduce.RiakStreamedMapReduceResult"/>.</returns>
            <remarks>
            <b>Make sure to fully enumerate the <see cref="T:RiakClient.Models.MapReduce.RiakStreamedMapReduceResult"/> 
            or connections may be left open.</b>
            </remarks>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.ListBuckets">
            <summary>
            Lists all buckets in the Default Bucket Type.
            </summary>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.String"/> bucket names.
            </returns>
            <remarks>
            Buckets provide a logical namespace for keys. Listing buckets requires folding over all keys in a cluster and 
            reading a list of buckets from disk. This operation, while non-blocking in Riak 1.0 and newer, still produces considerable
            physical I/O and can take a long time.
            </remarks>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.ListBuckets(System.String)">
            <summary>
            Lists all buckets in the specified Bucket Type.
            </summary>
            <param name="bucketType">The name of the bucket type to list buckets for.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.String"/> bucket names.
            </returns>
            <remarks>
            Buckets provide a logical namespace for keys. Listing buckets requires folding over all keys in a cluster and 
            reading a list of buckets from disk. This operation, while non-blocking in Riak 1.0 and newer, still produces considerable
            physical I/O and can take a long time.
            </remarks>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.StreamListBuckets">
            <summary>
            Lists all buckets available on the Riak cluster. This uses an <see cref="T:System.Collections.Generic.IEnumerable`1"/> 
            of <see cref="T:System.String"/> to lazy initialize the collection of bucket names. 
            </summary>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.String"/> bucket names.
            </returns>
            <remarks>
            Buckets provide a logical namespace for keys. Listing buckets requires folding over all keys in a 
            cluster and reading a list of buckets from disk. This operation, while non-blocking in Riak 1.0 and 
            newer, still produces considerable physical I/O and can take a long time. 
            <b>Callers should fully enumerate the collection or else close the connection when finished.</b>
            </remarks>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.ListKeys(System.String)">
            <summary>
            Lists all keys in the specified <paramref name="bucket"/>.
            </summary>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.String"/> keys.
            </returns>
            <param name="bucket">
            The bucket to list keys from.
            </param>
            <remarks>
            ListKeys is an expensive operation that requires folding over all data in the Riak cluster to produce
            a list of keys. This operation, while cheaper in Riak 1.0 than in earlier versions of Riak, should be avoided.
            </remarks>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.ListKeys(System.String,System.String)">
            <summary>
            Lists all keys in the specified <paramref name="bucket"/>.
            </summary>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.String"/> keys.
            </returns>
            <param name="bucketType">
            The name of the bucket type containing the <paramref name="bucket"/>.
            Riak 1.4 users should use the <see cref="M:RiakClient.IRiakBatchClient.ListKeys(System.String)"/> overload.
            </param>
            <param name="bucket">
            The bucket to list keys from.
            </param>
            <remarks>ListKeys is an expensive operation that requires folding over all data in the Riak cluster to produce
            a list of keys. This operation, while cheaper in Riak 1.0 than in earlier versions of Riak, should be avoided.</remarks>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.StreamListKeys(System.String)">
            <summary>
            Performs a streaming list keys operation.
            </summary>
            <param name="bucket">The bucket to list keys from.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of keys.</returns>
            <remarks>
            While this streams results back to the client, alleviating pressure on Riak, this still relies on
            folding over all keys present in the Riak cluster. Use at your own risk. If you are using the LevelDB backend,
            a better approach would be to use <see cref="M:RiakClient.IRiakBatchClient.ListKeysFromIndex(System.String)"/> in most cases.
            </remarks>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.StreamListKeys(System.String,System.String)">
            <summary>
            Performs a streaming list keys operation.
            </summary>
            <param name="bucketType">The name of the bucket type containing the <paramref name="bucket"/>.</param>
            <param name="bucket">The bucket to list keys from.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of keys.</returns>
            <remarks>
            While this streams results back to the client, alleviating pressure on Riak, this still relies on
            folding over all keys present in the Riak cluster. Use at your own risk. If you are using the LevelDB backend,
            a better approach would be to use <see cref="M:RiakClient.IRiakBatchClient.ListKeysFromIndex(System.String,System.String)"/> in most cases.
            </remarks>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.GetBucketProperties(System.String)">
            <summary>
            Returns all properties for a <paramref name="bucket"/>.
            </summary>
            <returns>The bucket properties.</returns>
            <param name="bucket">The name of the bucket to get properties for.</param>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.GetBucketProperties(System.String,System.String)">
            <summary>
            Returns all properties for a <paramref name="bucket"/>.
            </summary>
            <returns>The bucket properties.</returns>
            <param name="bucketType">The name of the bucket type containing the <paramref name="bucket"/>.</param>
            <param name="bucket">The name of the bucket to get properties for.</param>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.SetBucketProperties(System.String,RiakClient.Models.RiakBucketProperties)">
            <summary>
            Sets the <see cref="T:RiakClient.Models.RiakBucketProperties"/> properties of a <paramref name="bucket"/>.
            </summary>
            <returns>
            A <see cref="T:RiakClient.RiakResult"/> detailing the success or failure of the operation.
            </returns>
            <param name="bucket">The name of the bucket to set the properties on.</param>
            <param name="properties">
            The properties to set. Note that only those properties explicitly set in the 
            <see cref="T:RiakClient.Models.RiakBucketProperties"/> will be set on the bucket. 
            Those not set in the object will retain their values on Riak's side.
            </param>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.SetBucketProperties(System.String,System.String,RiakClient.Models.RiakBucketProperties)">
            <summary>
            Sets the <see cref="T:RiakClient.Models.RiakBucketProperties"/> properties of a <paramref name="bucket"/>.
            </summary>
            <returns>
            A <see cref="T:RiakClient.RiakResult"/> detailing the success or failure of the operation.
            </returns>
            <param name="bucketType">The name of the bucket type containing the <paramref name="bucket"/>.</param>
            <param name="bucket">The name of the bucket to set the properties on.</param>
            <param name="properties">
            The properties to set. Note that only those properties explicitly set in the 
            <see cref="T:RiakClient.Models.RiakBucketProperties"/> will be set on the bucket. 
            Those not set in the object will retain their values on Riak's side.
            </param>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.ResetBucketProperties(System.String)">
            <summary>
            Reset the properties on a bucket back to their defaults.
            </summary>
            <param name="bucket">The name of the bucket to reset the properties on.</param>
            <returns>A <see cref="T:RiakClient.RiakResult"/> detailing the success or failure of the operation.</returns>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.ResetBucketProperties(System.String,System.String)">
            <summary>
            Reset the properties on a bucket back to their defaults.
            </summary>
            <param name="bucketType">The name of the bucket type containing the <paramref name="bucket"/>.</param>
            <param name="bucket">The name of the bucket to reset properties on.</param>
            <returns>A <see cref="T:RiakClient.RiakResult"/> detailing the success or failure of the operation.</returns>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.WalkLinks(RiakClient.Models.RiakObject,System.Collections.Generic.IList{RiakClient.Models.RiakLink})">
            <summary>
            Retrieve arbitrarily deep list of links for a <see cref="T:RiakClient.Models.RiakObject"/>
            </summary>
            <returns>
            An <see cref="T:System.Collections.Generic.IList`1"/> of <see cref="T:RiakClient.Models.RiakObject"/> 
            identified by the input <paramref name="riakLinks"/>.
            </returns>
            <param name="riakObject">The initial object to use for the beginning of the link walking.</param>
            <param name="riakLinks">A list of link definitions.</param>
            <remarks>Refer to http://wiki.basho.com/Links-and-Link-Walking.html for more information.</remarks>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.GetServerInfo">
            <summary>
            Get the server information from the connected cluster.
            </summary>
            <returns>A <see cref="T:RiakClient.Models.RiakServerInfo"/> object containing information gathered from a node in the cluster.</returns>
            <remarks>
            This function will assume that all of the nodes in the cluster are running
            the same version of Riak. It will only get executed on a single node, and the content
            that is returned technically only relates to that node. All nodes in a cluster should
            run on the same version of Riak.
            </remarks>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.GetSecondaryIndex(RiakClient.Models.RiakIndexId,System.Numerics.BigInteger,RiakClient.Models.RiakIndexGetOptions)">
            <summary>
            Query a secondary index for a specific integer value.
            </summary>
            <param name="index">The <see cref="T:RiakClient.Models.RiakIndexId"/> identifying the index to query.</param>
            <param name="value">The integer value to query for.</param>
            <param name="options">The <see cref="T:RiakClient.Models.RiakIndexGetOptions"/> responsible for configuring the semantics of this single index request.</param>
            <returns>A <see cref="T:RiakClient.RiakResult`1"/> of <see cref="T:RiakClient.Models.Index.RiakIndexResult"/>.</returns>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.GetSecondaryIndex(RiakClient.Models.RiakIndexId,System.String,RiakClient.Models.RiakIndexGetOptions)">
            <summary>
            Query a secondary index for a specific string value.
            </summary>
            <param name="index">The <see cref="T:RiakClient.Models.RiakIndexId"/> identifying the index to query.</param>
            <param name="value">The string value to query for.</param>
            <param name="options">The <see cref="T:RiakClient.Models.RiakIndexGetOptions"/> responsible for configuring the semantics of this single index request.</param>
            <returns>A <see cref="T:RiakClient.RiakResult`1"/> of <see cref="T:RiakClient.Models.Index.RiakIndexResult"/>.</returns>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.GetSecondaryIndex(RiakClient.Models.RiakIndexId,System.Numerics.BigInteger,System.Numerics.BigInteger,RiakClient.Models.RiakIndexGetOptions)">
            <summary>
            Query a secondary index for a range of integer values.
            </summary>
            <param name="index">The <see cref="T:RiakClient.Models.RiakIndexId"/> identifying the index to query.</param>
            <param name="min">The inclusive min integer value for the query range.</param>
            <param name="max">The inclusive max integer value for the query range.</param>
            <param name="options">The <see cref="T:RiakClient.Models.RiakIndexGetOptions"/> responsible for configuring the semantics of this single index request.</param>
            <returns>A <see cref="T:RiakClient.RiakResult`1"/> of <see cref="T:RiakClient.Models.Index.RiakIndexResult"/>.</returns>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.GetSecondaryIndex(RiakClient.Models.RiakIndexId,System.String,System.String,RiakClient.Models.RiakIndexGetOptions)">
            <summary>
            Query a secondary index for a range of string values.
            </summary>
            <param name="index">The <see cref="T:RiakClient.Models.RiakIndexId"/> identifying the index to query.</param>
            <param name="min">The inclusive min string value for the query range.</param>
            <param name="max">The inclusive max string value for the query range.</param>
            <param name="options">The <see cref="T:RiakClient.Models.RiakIndexGetOptions"/> responsible for configuring the semantics of this single index request.</param>
            <returns>A <see cref="T:RiakClient.RiakResult`1"/> of <see cref="T:RiakClient.Models.Index.RiakIndexResult"/>.</returns>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.StreamGetSecondaryIndex(RiakClient.Models.RiakIndexId,System.Numerics.BigInteger,RiakClient.Models.RiakIndexGetOptions)">
            <summary>
            Query a secondary index for a specific integer value, and stream the results back.
            </summary>
            <param name="index">The <see cref="T:RiakClient.Models.RiakIndexId"/> identifying the index to query.</param>
            <param name="value">The integer value to query for.</param>
            <param name="options">The <see cref="T:RiakClient.Models.RiakIndexGetOptions"/> responsible for configuring the semantics of this single index request.</param>
            <returns>A <see cref="T:RiakClient.RiakResult`1"/> of <see cref="T:RiakClient.Models.Index.RiakStreamedIndexResult"/>.</returns>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.StreamGetSecondaryIndex(RiakClient.Models.RiakIndexId,System.String,RiakClient.Models.RiakIndexGetOptions)">
            <summary>
            Query a secondary index for a specific string value, and stream the results back.
            </summary>
            <param name="index">The <see cref="T:RiakClient.Models.RiakIndexId"/> identifying the index to query.</param>
            <param name="value">The string value to query for.</param>
            <param name="options">The <see cref="T:RiakClient.Models.RiakIndexGetOptions"/> responsible for configuring the semantics of this single index request.</param>
            <returns>A <see cref="T:RiakClient.RiakResult`1"/> of <see cref="T:RiakClient.Models.Index.RiakStreamedIndexResult"/>.</returns>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.StreamGetSecondaryIndex(RiakClient.Models.RiakIndexId,System.Numerics.BigInteger,System.Numerics.BigInteger,RiakClient.Models.RiakIndexGetOptions)">
            <summary>
            Query a secondary index for a range of integer values, and stream the results back.
            </summary>
            <param name="index">The <see cref="T:RiakClient.Models.RiakIndexId"/> identifying the index to query.</param>
            <param name="min">The inclusive min integer value for the query range.</param>
            <param name="max">The inclusive max integer value for the query range.</param>
            <param name="options">The <see cref="T:RiakClient.Models.RiakIndexGetOptions"/> responsible for configuring the semantics of this single index request.</param>
            <returns>A <see cref="T:RiakClient.RiakResult`1"/> of <see cref="T:RiakClient.Models.Index.RiakStreamedIndexResult"/>.</returns>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.StreamGetSecondaryIndex(RiakClient.Models.RiakIndexId,System.String,System.String,RiakClient.Models.RiakIndexGetOptions)">
            <summary>
            Query a secondary index for a range of string values, and stream the results back.
            </summary>
            <param name="index">The <see cref="T:RiakClient.Models.RiakIndexId"/> identifying the index to query.</param>
            <param name="min">The inclusive min string value for the query range.</param>
            <param name="max">The inclusive max string value for the query range.</param>
            <param name="options">The <see cref="T:RiakClient.Models.RiakIndexGetOptions"/> responsible for configuring the semantics of this single index request.</param>
            <returns>A <see cref="T:RiakClient.RiakResult`1"/> of <see cref="T:RiakClient.Models.Index.RiakStreamedIndexResult"/>.</returns>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.ListKeysFromIndex(System.String)">
            <summary>
            Return a list of keys from the given bucket.
            </summary>
            <param name="bucket">The bucket to list keys from.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of keys.</returns>
            <remarks>
            This uses the $key special index instead of the list keys API to 
            quickly return an unsorted list of keys from Riak. Only works with a LevelDB backend.
            </remarks>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.ListKeysFromIndex(System.String,System.String)">
            <summary>
            Return a list of keys from the given bucket.
            </summary>
            <param name="bucketType">The name of the bucket type containing the <paramref name="bucket"/>.</param>
            <param name="bucket">The bucket to list keys from.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of keys.</returns>
            <remarks>
            This uses the $key special index instead of the list keys API to 
            quickly return an unsorted list of keys from Riak. Only works with a LevelDB backend.
            </remarks>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.DtFetchCounter(System.String,System.String,System.String,RiakClient.Models.RiakDtFetchOptions)">
            <summary>
            Fetch a Counter Data Type object from the provided address. 
            </summary>
            <param name="bucketType">The name of the bucket type containing the <paramref name="bucket"/>.</param>
            <param name="bucket">The name of the bucket containing the <paramref name="key"/>.</param>
            <param name="key">The key of the data type object.</param>
            <param name="options">The <see cref="T:RiakClient.Models.RiakDtFetchOptions"/> responsible for configuring the semantics of this data type fetch request.</param>
            <returns>A <see cref="T:RiakClient.Models.RiakCounterResult"/> detailing the operation result and current counter value.</returns>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.DtFetchCounter(RiakClient.Models.RiakObjectId,RiakClient.Models.RiakDtFetchOptions)">
            <summary>
            Fetch a Counter Data Type object from the provided address.
            </summary>
            <param name="objectId">The <see cref="T:RiakClient.Models.RiakObjectId"/> of the counter to fetch.</param>
            <param name="options">The <see cref="T:RiakClient.Models.RiakDtFetchOptions"/> responsible for configuring the semantics of this data type fetch request.</param>
            <returns>A <see cref="T:RiakClient.Models.RiakCounterResult"/> detailing the operation result and current counter value.</returns>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.DtUpdateCounter(System.String,System.String,System.String,System.Int64,RiakClient.Models.RiakDtUpdateOptions)">
            <summary>
            Update a Counter Data Type object at the provided address.
            </summary>
            <param name="bucketType">The name of the bucket type containing the <paramref name="bucket"/>.</param>
            <param name="bucket">The name of the bucket containing the <paramref name="key"/>.</param>
            <param name="key">The key of the data type object.</param>
            <param name="amount">The delta to apply to the counter. To add 1 to the counter, use "1". To subtract 5, use "-5".</param>
            <param name="options">The <see cref="T:RiakClient.Models.RiakDtUpdateOptions"/> responsible for configuring the semantics of this data type update request.</param>
            <returns>A <see cref="T:RiakClient.Models.RiakCounterResult"/> detailing the operation result and current counter value.</returns>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.DtUpdateCounter(RiakClient.Models.RiakObjectId,System.Int64,RiakClient.Models.RiakDtUpdateOptions)">
            <summary>
            Update a Counter Data Type object at the provided address.
            </summary>
            <param name="objectId">The <see cref="T:RiakClient.Models.RiakObjectId"/> of the counter to update.</param>
            <param name="amount">The delta to apply to the counter. To add 1 to the counter, use "1". To subtract 5, use "-5".</param>
            <param name="options">The <see cref="T:RiakClient.Models.RiakDtUpdateOptions"/> responsible for configuring the semantics of this data type update request.</param>
            <returns>A <see cref="T:RiakClient.Models.RiakCounterResult"/> detailing the operation result and current counter value.</returns>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.DtFetchSet(System.String,System.String,System.String,RiakClient.Models.RiakDtFetchOptions)">
            <summary>
            Fetch a Set Data Type object at the provided address.
            </summary>
            <param name="bucketType">The name of the bucket type containing the <paramref name="bucket"/>.</param>
            <param name="bucket">The name of the bucket containing the <paramref name="key"/>.</param>
            <param name="key">The key of the data type object.</param>
            <param name="options">The <see cref="T:RiakClient.Models.RiakDtFetchOptions"/> responsible for configuring the semantics of this data type fetch request.</param>
            <returns>A <see cref="T:RiakClient.Models.RiakDt.RiakDtSetResult"/> detailing the operation result, current context, and set values.</returns>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.DtFetchSet(RiakClient.Models.RiakObjectId,RiakClient.Models.RiakDtFetchOptions)">
            <summary>
            Fetch a Set Data Type object at the provided address.
            </summary>
            <param name="objectId">The <see cref="T:RiakClient.Models.RiakObjectId"/> of the set to fetch.</param>
            <param name="options">The <see cref="T:RiakClient.Models.RiakDtFetchOptions"/> responsible for configuring the semantics of this data type fetch request.</param>
            <returns>A <see cref="T:RiakClient.Models.RiakDt.RiakDtSetResult"/> detailing the operation result, current context, and set values.</returns>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.DtUpdateSet``1(System.String,System.String,System.String,RiakClient.Models.SerializeObjectToByteArray{``0},System.Byte[],System.Collections.Generic.List{``0},System.Collections.Generic.List{``0},RiakClient.Models.RiakDtUpdateOptions)">
            <summary>
            Update a Set Data Type object at the provided address.
            </summary>
            <typeparam name="T">The type of the objects being stored in the set.</typeparam>
            <param name="bucketType">The name of the bucket type containing the <paramref name="bucket"/>.</param>
            <param name="bucket">The name of the bucket containing the <paramref name="key"/>.</param>
            <param name="key">The key of the data type object.</param>
            <param name="serialize">A delegate to serialize the <paramref name="adds"/> and <paramref name="removes"/> lists from objects of type <typeparamref name="T"/> to a byte[].</param>
            <param name="context">The most recent known byte[] data type context for this object, to base this operation off of for causality merging.</param>
            <param name="adds">A <see cref="T:System.Collections.Generic.List`1"/> of items to add to the set.</param>
            <param name="removes">A <see cref="T:System.Collections.Generic.List`1"/> of items to remove from the set.</param>
            <param name="options">The <see cref="T:RiakClient.Models.RiakDtUpdateOptions"/> responsible for configuring the semantics of this data type update request.</param>
            <returns>A <see cref="T:RiakClient.Models.RiakDt.RiakDtSetResult"/> detailing the operation result, current context, and set values.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="context"/> cannot be null if removing any item from the set.</exception>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.DtUpdateSet``1(RiakClient.Models.RiakObjectId,RiakClient.Models.SerializeObjectToByteArray{``0},System.Byte[],System.Collections.Generic.List{``0},System.Collections.Generic.List{``0},RiakClient.Models.RiakDtUpdateOptions)">
            <summary>
            Update a Set Data Type object at the provided address.
            </summary>
            <typeparam name="T">The type of the objects being stored in the set.</typeparam>
            <param name="objectId">The <see cref="T:RiakClient.Models.RiakObjectId"/> of the set to update.</param>
            <param name="serialize">A delegate to serialize the <paramref name="adds"/> and <paramref name="removes"/> lists from objects of type <typeparamref name="T"/> to a byte[].</param>
            <param name="context">The most recent known byte[] data type context for this object, to base this operation off of for causality merging.</param>
            <param name="adds">A <see cref="T:System.Collections.Generic.List`1"/> of items to add to the set.</param>
            <param name="removes">A <see cref="T:System.Collections.Generic.List`1"/> of items to remove from the set.</param>
            <param name="options">The <see cref="T:RiakClient.Models.RiakDtUpdateOptions"/> responsible for configuring the semantics of this data type update request.</param>
            <returns>A <see cref="T:RiakClient.Models.RiakDt.RiakDtSetResult"/> detailing the operation result, current context, and set values.</returns>
            <remarks>Removal of any item from the set requires that the <paramref name="context"/> be non-null, or else an <see cref="T:System.ArgumentNullException"/> will be thrown.</remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="context"/> cannot be null if removing any item from the set.</exception>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.DtFetchMap(System.String,System.String,System.String,RiakClient.Models.RiakDtFetchOptions)">
            <summary>
            Fetch a Map Data Type object at the provided address.
            </summary>
            <param name="bucketType">The name of the bucket type containing the <paramref name="bucket"/>.</param>
            <param name="bucket">The name of the bucket containing the <paramref name="key"/>.</param>
            <param name="key">The key of the data type object.</param>
            <param name="options">The <see cref="T:RiakClient.Models.RiakDtFetchOptions"/> responsible for configuring the semantics of this data type fetch request.</param>
            <returns>A <see cref="T:RiakClient.Models.RiakDt.RiakDtMapResult"/> detailing the operation result, current context, and map values.</returns>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.DtFetchMap(RiakClient.Models.RiakObjectId,RiakClient.Models.RiakDtFetchOptions)">
            <summary>
            Fetch a Map Data Type object at the provided address.
            </summary>
            <param name="objectId">The <see cref="T:RiakClient.Models.RiakObjectId"/> of the map to fetch.</param>
            <param name="options">The <see cref="T:RiakClient.Models.RiakDtFetchOptions"/> responsible for configuring the semantics of this data type fetch request.</param>
            <returns>A <see cref="T:RiakClient.Models.RiakDt.RiakDtMapResult"/> detailing the operation result, current context, and map values.</returns>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.DtUpdateMap``1(System.String,System.String,System.String,RiakClient.Models.SerializeObjectToByteArray{``0},System.Byte[],System.Collections.Generic.List{RiakClient.Models.RiakDt.RiakDtMapField},System.Collections.Generic.List{RiakClient.Messages.MapUpdate},RiakClient.Models.RiakDtUpdateOptions)">
            <summary>
            Update a Map Data Type object at the provided address.
            </summary>
            <typeparam name="T">The type of the objects being stored in the map.</typeparam>
            <param name="bucketType">The name of the bucket type containing the <paramref name="bucket"/>.</param>
            <param name="bucket">The name of the bucket containing the <paramref name="key"/>.</param>
            <param name="key">The key of the data type object.</param>
            <param name="serialize">A delegate to serialize the <paramref name="updates"/> and <paramref name="removes"/> operation lists from objects of type <typeparamref name="T"/> to a byte[].</param>
            <param name="context">The most recent known byte[] data type context for this object, to base this operation off of for causality merging.</param>
            <param name="removes">A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:RiakClient.Models.RiakDt.RiakDtMapField"/> to specify which fields to remove.</param>
            <param name="updates">A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:RiakClient.Messages.MapUpdate"/> to specify what updates to perform on the map.</param>
            <param name="options">The <see cref="T:RiakClient.Models.RiakDtUpdateOptions"/> responsible for configuring the semantics of this data type update request.</param>
            <returns>A <see cref="T:RiakClient.Models.RiakDt.RiakDtMapResult"/> detailing the operation result, current context, and map values.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="context"/> cannot be null if removing any field from the map, nested maps, or removing any item from nested sets.</exception>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.DtUpdateMap``1(RiakClient.Models.RiakObjectId,RiakClient.Models.SerializeObjectToByteArray{``0},System.Byte[],System.Collections.Generic.List{RiakClient.Models.RiakDt.RiakDtMapField},System.Collections.Generic.List{RiakClient.Messages.MapUpdate},RiakClient.Models.RiakDtUpdateOptions)">
            <summary>
            Update a Map Data Type object at the provided address.
            </summary>
            <typeparam name="T">The type of the objects being stored in the map.</typeparam>
            <param name="objectId">The <see cref="T:RiakClient.Models.RiakObjectId"/> of the map to update.</param>
            <param name="serialize">A delegate to serialize the <paramref name="updates"/> and <paramref name="removes"/> operation lists from objects of type <typeparamref name="T"/> to a byte[].</param>
            <param name="context">The most recent known byte[] data type context for this object, to base this operation off of for causality merging.</param>
            <param name="removes">A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:RiakClient.Models.RiakDt.RiakDtMapField"/> to specify which fields to remove.</param>
            <param name="updates">A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:RiakClient.Messages.MapUpdate"/> to specify what updates to perform on the map.</param>
            <param name="options">The <see cref="T:RiakClient.Models.RiakDtUpdateOptions"/> responsible for configuring the semantics of this data type update request.</param>
            <returns>A <see cref="T:RiakClient.Models.RiakDt.RiakDtMapResult"/> detailing the operation result, current context, and map values.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="context"/> cannot be null if removing any field from the map, nested maps, or removing any item from nested sets.</exception>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.GetSearchIndex(System.String)">
            <summary>
            Fetches the specified search index from Riak. 
            </summary>
            <param name="indexName">The name of the index to retrieve.</param>
            <returns>A <see cref="T:RiakClient.RiakResult`1"/> containing a <see cref="T:RiakClient.Models.Search.SearchIndexResult"/>.</returns>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.PutSearchIndex(RiakClient.Models.Search.SearchIndex)">
            <summary>
            Saves the specified <see cref="T:RiakClient.Models.Search.SearchIndex"/> to Riak.
            </summary>
            <param name="index">The <see cref="T:RiakClient.Models.Search.SearchIndex"/> to save.</param>
            <returns>A <see cref="T:RiakClient.RiakResult"/> detailing the success or failure of the operation.</returns>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.DeleteSearchIndex(System.String)">
            <summary>
            Deletes the specified <see cref="T:RiakClient.Models.Search.SearchIndex"/> from Riak.
            </summary>
            <param name="indexName">THe name of the search index to delete.</param>
            <returns>A <see cref="T:RiakClient.RiakResult"/> detailing the success or failure of the operation.</returns>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.GetSearchSchema(System.String)">
            <summary>
            Fetches the specified <see cref="T:RiakClient.Models.Search.SearchSchema"/> from Riak.
            </summary>
            <param name="schemaName">The name of the schema to fetch.</param>
            <returns>A <see cref="T:RiakClient.RiakResult`1"/> containing a <see cref="T:RiakClient.Models.Search.SearchSchema"/>.</returns>
        </member>
        <member name="M:RiakClient.IRiakBatchClient.PutSearchSchema(RiakClient.Models.Search.SearchSchema)">
            <summary>
            Stores the provided <see cref="T:RiakClient.Models.Search.SearchSchema"/> in Riak. 
            </summary>
            <param name="schema">The schema to store.</param>
            <returns>A <see cref="T:RiakClient.RiakResult"/> detailing the success or failure of the operation.</returns>
        </member>
        <member name="P:RiakClient.IRiakBatchClient.RetryCount">
            <summary>
            Gets or sets the retry count for operations.
            </summary>
            <value>The retry count.</value>
        </member>
        <member name="M:RiakClient.IRiakClient.Batch(System.Action{RiakClient.IRiakBatchClient})">
            <summary>
            Used to create a batched set of actions to be sent to a Riak cluster.
            </summary>
            <param name="batchAction">An action that wraps all the operations to batch together.</param>
        </member>
        <member name="M:RiakClient.IRiakClient.Batch``1(System.Func{RiakClient.IRiakBatchClient,``0})">
            <summary>
            Used to create a batched set of actions to be sent to a Riak cluster.
            </summary>
            <typeparam name="T">The <paramref name="batchFun"/>'s return type.</typeparam>
            <param name="batchFunction">A func that wraps all the operations to batch together.</param>
            <returns>The return value of <paramref name="batchFun"/>.</returns>
        </member>
        <member name="M:RiakClient.IRiakClient.Execute(RiakClient.Commands.IRiakCommand)">
            <summary>
            Used to execute a command against a Riak cluster.
            </summary>
            <param name="command">The command to execute.</param>
            <returns>
            A <see cref="T:RiakClient.RiakResult"/>, which will indicate success. The passed in command will contain the response.
            </returns>
        </member>
        <member name="P:RiakClient.IRiakClient.Async">
            <summary>
            Fetches an asynchronous version of the client. 
            </summary>
            <value>The Async version of the client. See <see cref="T:RiakClient.IRiakAsyncClient"/>.</value>
        </member>
        <member name="T:RiakClient.Models.CommitHook.IRiakCommitHook">
            <summary>
            Represents an interface for commit hooks.
            </summary>
        </member>
        <member name="M:RiakClient.Models.CommitHook.IRiakCommitHook.ToJsonString">
            <summary>
            Convert the commit hook to a JSON-encoded string.
            </summary>
            <returns>
            A JSON-encoded string.
            </returns>
        </member>
        <member name="M:RiakClient.Models.CommitHook.IRiakCommitHook.ToRpbCommitHook">
            <summary>
            Converts the commit hook to a protobuf message.
            </summary>
            <returns>
            A new instance of a <see cref="T:RiakClient.Messages.RpbCommitHook"/> class.
            </returns>
        </member>
        <member name="M:RiakClient.Models.CommitHook.IRiakCommitHook.WriteJson(Newtonsoft.Json.JsonWriter)">
            <summary>
            Write the commit hook to a <see cref="T:Newtonsoft.Json.JsonWriter"/>.
            </summary>
            <param name="writer">The writer to use.</param>
        </member>
        <member name="T:RiakClient.RiakString">
            <summary>
            Represents a string that encapsulates conversion to/from <see cref="T:System.String"/> and <see cref="T:System.Byte"/>[]
            values
            </summary>
        </member>
        <member name="M:RiakClient.RiakString.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.RiakString"/> class.
            </summary>
            <param name="value">The string from which to construct this instance.</param>
        </member>
        <member name="M:RiakClient.RiakString.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.RiakString"/> class.
            </summary>
            <param name="value">The UTF8 byte array from which to construct this instance.</param>
        </member>
        <member name="M:RiakClient.RiakString.FromBytes(System.Byte[])">
            <summary>
            Returns a <see cref="T:RiakClient.RiakString"/> from the byte array of UTF8-encoded characters.
            </summary>
            <param name="value">The <see cref="T:System.Byte"/>[] value from which to construct a <see cref="T:RiakClient.RiakString"/>.</param>
            <returns>
            A <see cref="T:RiakClient.RiakString"/>.
            </returns>
        </member>
        <member name="M:RiakClient.RiakString.ToBytes(System.String)">
            <summary>
            Returns a <see cref="T:System.Byte"/>[] from the string, encoded in UTF8.
            </summary>
            <param name="value">The <see cref="T:System.String"/> value from which to construct a <see cref="T:System.Byte"/>[].</param>
            <returns>
            A <see cref="T:System.Byte"/>[].
            </returns>
        </member>
        <member name="M:RiakClient.RiakString.ToBytes(RiakClient.RiakString)">
            <summary>
            Returns a <see cref="T:System.Byte"/>[] from the string, encoded in UTF8.
            </summary>
            <param name="value">The <see cref="T:RiakClient.RiakString"/> value from which to construct a <see cref="T:System.Byte"/>[].</param>
            <returns>
            A <see cref="T:System.Byte"/>[].
            </returns>
        </member>
        <member name="M:RiakClient.RiakString.op_Implicit(RiakClient.RiakString)~System.String">
            <summary>
            Cast the value of this <see cref="T:RiakClient.RiakString"/> to an <see cref="T:System.String"/>.
            </summary>
            <param name="value">The <see cref="T:RiakClient.RiakString"/> value to cast to an <see cref="T:System.String"/>.</param>
            <returns>An <see cref="T:System.String"/> based on the value of the this <see cref="T:RiakClient.RiakString"/>.</returns>
        </member>
        <member name="M:RiakClient.RiakString.op_Implicit(System.String)~RiakClient.RiakString">
            <summary>
            Cast the value of this <see cref="T:System.String"/> to a <see cref="T:RiakClient.RiakString"/>.
            </summary>
            <param name="value">The <see cref="T:System.String"/> value to cast to a <see cref="T:RiakClient.RiakString"/>.</param>
            <returns>A <see cref="T:RiakClient.RiakString"/> based on the value of the this <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:RiakClient.RiakString.op_Implicit(RiakClient.RiakString)~System.Boolean">
            <summary>
            Cast the value of this <see cref="T:RiakClient.RiakString"/> to an <see cref="T:System.Boolean"/>.
            </summary>
            <param name="value">The <see cref="T:RiakClient.RiakString"/> value to cast to an <see cref="T:System.Boolean"/>.</param>
            <returns>An <see cref="T:System.Boolean"/> indicating if this <see cref="T:RiakClient.RiakString"/> is null or not-null.</returns>
        </member>
        <member name="M:RiakClient.RiakString.op_Implicit(RiakClient.RiakString)~System.Byte[]">
            <summary>
            Cast the value of this <see cref="T:RiakClient.RiakString"/> to an <see cref="T:System.Byte"/>[].
            </summary>
            <param name="value">The <see cref="T:RiakClient.RiakString"/> value to cast to an <see cref="T:System.Byte"/>[].</param>
            <returns>A UTF8-encoded <see cref="T:System.Byte"/>[] based on the value of the this <see cref="T:RiakClient.RiakString"/>.</returns>
        </member>
        <member name="M:RiakClient.RiakString.op_Implicit(System.Byte[])~RiakClient.RiakString">
            <summary>
            Cast the value of a <see cref="T:System.Byte"/>[] to a <see cref="T:RiakClient.RiakString"/>.
            </summary>
            <param name="value">The <see cref="T:System.Byte"/>[] value to cast to an <see cref="T:RiakClient.RiakString"/>.</param>
            <returns>A new <see cref="T:RiakClient.RiakString"/>.</returns>
        </member>
        <member name="M:RiakClient.RiakString.ToString">
            <summary>
            Returns a string that represents the RiakString value.
            </summary>
            <returns>
            A string that represents the RiakString value. 
            </returns>
        </member>
        <member name="M:RiakClient.RiakString.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><b>true</b> if the specified object is equal to the current object, otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:RiakClient.RiakString.Equals(RiakClient.RiakString)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="other">The object to compare with the current object.</param>
            <returns><b>true</b> if the specified object is equal to the current object, otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:RiakClient.RiakString.GetHashCode">
            <summary>
            Returns a hash code for the current object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="P:RiakClient.RiakString.HasValue">
            <summary>
            Returns a <see cref="T:System.Boolean"/> that indicates a non-null value.
            </summary>
            <returns>
            A <see cref="T:System.Boolean"/> that indicates a non-null value.
            </returns>
        </member>
        <member name="T:RiakClient.Timeout">
            <summary>
            Represents a wall-clock timeout for Riak operations. 
            </summary>
        </member>
        <member name="M:RiakClient.Timeout.#ctor(System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Timeout"/> struct.
            </summary>
            <param name="timeout">The <see cref="T:System.TimeSpan"/> to base this <see cref="T:RiakClient.Timeout"/> off of.</param>
        </member>
        <member name="M:RiakClient.Timeout.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Timeout"/> struct.
            </summary>
            <param name="milliseconds">The number of milliseconds to base this <see cref="T:RiakClient.Timeout"/> off of.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="milliseconds"/> must be greater than or equal to zero.</exception>
        </member>
        <member name="M:RiakClient.Timeout.op_Equality(RiakClient.Timeout,RiakClient.Timeout)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="a">The first value.</param>
            <param name="b">The second value.</param>
            <returns><b>true</b> if the values are equal.</returns>
        </member>
        <member name="M:RiakClient.Timeout.op_Inequality(RiakClient.Timeout,RiakClient.Timeout)">
            <summary>
            Determines whether the specified object is not equal to the current object.
            </summary>
            <param name="a">The first value.</param>
            <param name="b">The second value.</param>
            <returns><b>true</b> if the values are not equal.</returns>
        </member>
        <member name="M:RiakClient.Timeout.op_Explicit(System.Int32)~RiakClient.Timeout">
            <summary>
            Cast the value of this <see cref="T:System.Int32"/> to a <see cref="T:RiakClient.Timeout"/>.
            </summary>
            <param name="timeout">The <see cref="T:System.Int32"/> value to cast to a <see cref="T:RiakClient.Timeout"/>.</param>
            <returns>A <see cref="T:RiakClient.Timeout"/> based on the value of the this <see cref="T:System.Int32"/>.</returns>
        </member>
        <member name="M:RiakClient.Timeout.op_Explicit(RiakClient.Timeout)~System.Int32">
            <summary>
            Cast the value of this <see cref="T:RiakClient.Timeout"/> to an <see cref="T:System.Int32"/>.
            </summary>
            <param name="timeout">The <see cref="T:RiakClient.Timeout"/> value to cast to an <see cref="T:System.Int32"/>.</param>
            <returns>An <see cref="T:System.Int32"/> based on the value of the this <see cref="T:RiakClient.Timeout"/>.</returns>
        </member>
        <member name="M:RiakClient.Timeout.op_Implicit(System.TimeSpan)~RiakClient.Timeout">
            <summary>
            Cast the value of this <see cref="T:System.TimeSpan"/> to a <see cref="T:RiakClient.Timeout"/>.
            </summary>
            <param name="timespan">The <see cref="T:System.TimeSpan"/> value to cast to a <see cref="T:RiakClient.Timeout"/>.</param>
            <returns>A <see cref="T:RiakClient.Timeout"/> based on the value of the this <see cref="T:System.TimeSpan"/>.</returns>
        </member>
        <member name="M:RiakClient.Timeout.op_Implicit(RiakClient.Timeout)~System.TimeSpan">
            <summary>
            Cast the value of this <see cref="T:RiakClient.Timeout"/> to a <see cref="T:System.TimeSpan"/>.
            </summary>
            <param name="timeout">The <see cref="T:RiakClient.Timeout"/> value to cast to a <see cref="T:System.TimeSpan"/>.</param>
            <returns>A <see cref="T:System.TimeSpan"/> based on the value of the this <see cref="T:RiakClient.Timeout"/>.</returns>
        </member>
        <member name="M:RiakClient.Timeout.op_Implicit(RiakClient.Timeout)~System.String">
            <summary>
            Cast the value of this <see cref="T:RiakClient.Timeout"/> to a <see cref="T:System.String"/>.
            </summary>
            <param name="timeout">The <see cref="T:RiakClient.Timeout"/> value to cast to a <see cref="T:System.String"/>.</param>
            <returns>A <see cref="T:System.String"/> based on the value of the this <see cref="T:RiakClient.Timeout"/>.</returns>
        </member>
        <member name="M:RiakClient.Timeout.op_Explicit(RiakClient.Timeout)~System.UInt32">
            <summary>
            Cast the value of this <see cref="T:RiakClient.Timeout"/> to a <see cref="T:System.UInt32"/>.
            </summary>
            <param name="timeout">The <see cref="T:RiakClient.Timeout"/> value to cast to a <see cref="T:System.UInt32"/>.</param>
            <returns>A <see cref="T:System.UInt32"/> based on the value of the this <see cref="T:RiakClient.Timeout"/>.</returns>
        </member>
        <member name="M:RiakClient.Timeout.ToString">
            <summary>
            Returns a string that represents the total milliseconds of the timeout.
            </summary>
            <returns>A string that represents the total milliseconds of the timeout.</returns>
        </member>
        <member name="M:RiakClient.Timeout.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><b>true</b> if the specified object is equal to the current object, otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:RiakClient.Timeout.Equals(RiakClient.Timeout)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="other">The object to compare with the current object.</param>
            <returns><b>true</b> if the specified object is equal to the current object, otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:RiakClient.Timeout.GetHashCode">
            <summary>
            Returns a hash code for the current object.
            Uses the HashCode of the internal <see cref="T:System.TimeSpan"/> value.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="T:RiakClient.NVal">
            <summary>
            Represents the possible values for the NVal Riak operation parameter.
            </summary>
        </member>
        <member name="M:RiakClient.NVal.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.NVal"/> class.
            </summary>
            <param name="nval">The positive int value to use for NVal option.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="nval"/> must be greater than zero.</exception>
        </member>
        <member name="M:RiakClient.NVal.op_Explicit(System.Int32)~RiakClient.NVal">
            <summary>
            Cast the value of this <see cref="T:System.UInt32"/> to a <see cref="T:RiakClient.NVal"/>.
            </summary>
            <param name="nval">The <see cref="T:System.UInt32"/> value to cast to a <see cref="T:RiakClient.NVal"/>.</param>
            <returns>A <see cref="T:RiakClient.NVal"/> based on the value of the this <see cref="T:System.Int32"/>.</returns>
        </member>
        <member name="M:RiakClient.NVal.op_Explicit(RiakClient.NVal)~System.Int32">
            <summary>
            Cast the value of this <see cref="T:RiakClient.NVal"/> to an <see cref="T:System.Int32"/>.
            </summary>
            <param name="nval">The <see cref="T:RiakClient.NVal"/> to cast to an <see cref="T:System.Int32"/>.</param>
            <returns>An <see cref="T:System.Int32"/> based on the value of this <see cref="T:RiakClient.NVal"/>.</returns>
        </member>
        <member name="M:RiakClient.NVal.op_Implicit(RiakClient.NVal)~System.UInt32">
            <summary>
            Cast the value of this <see cref="T:RiakClient.NVal"/> to an <see cref="T:System.UInt32"/>.
            </summary>
            <param name="nval">The <see cref="T:RiakClient.NVal"/> to cast to a <see cref="T:System.UInt32"/>.</param>
            <returns>A <see cref="T:System.UInt32"/> based on the value of this <see cref="T:RiakClient.NVal"/>.</returns>
        </member>
        <member name="M:RiakClient.NVal.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><b>true</b> if the specified object is equal to the current object, otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:RiakClient.NVal.Equals(RiakClient.NVal)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="other">The object to compare with the current object.</param>
            <returns><b>true</b> if the specified object is equal to the current object, otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:RiakClient.NVal.GetHashCode">
            <summary>
            Returns a hash code for the current object.
            Uses the HashCode of the internal <see cref="T:System.UInt32"/> nval value.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="T:RiakClient.Quorum">
            <summary>
            Represents the possible values for Riak operation parameters such as R, W, PR, PW, DW, and RW. 
            </summary>
        </member>
        <member name="M:RiakClient.Quorum.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Quorum"/> class.
            </summary>
            <param name="quorum">A well known quorum value string, such as "one", "quorum", "all", or "default".</param>
            <exception cref="T:System.ArgumentNullException">
            The value of <paramref name="quorum"/> cannot be null, empty, or whitespace.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The value of <paramref name="quorum"/> must be well known quorum value. 
            Valid values are "one", "quorum", "all", and "default".
            </exception>
        </member>
        <member name="M:RiakClient.Quorum.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Quorum"/> class.
            </summary>
            <param name="quorum">An integer, representing the number of nodes to use for the quorum.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The quorum value must be either a positive integer, 0, or between [-5,-2] for special cases.
            </exception>
        </member>
        <member name="M:RiakClient.Quorum.op_Implicit(RiakClient.Quorum)~System.Int32">
            <summary>
            Cast the value of this <see cref="T:RiakClient.Quorum"/> to an <see cref="T:System.Int32"/>.
            </summary>
            <param name="quorum">The <see cref="T:RiakClient.Quorum"/> value to cast to an <see cref="T:System.Int32"/>.</param>
            <returns>An <see cref="T:System.Int32"/> based on the value of the this <see cref="T:RiakClient.Quorum"/>.</returns>
        </member>
        <member name="M:RiakClient.Quorum.op_Explicit(System.Int32)~RiakClient.Quorum">
            <summary>
            Cast the value of this <see cref="T:System.Int32"/> to a <see cref="T:RiakClient.Quorum"/>.
            </summary>
            <param name="quorum">The <see cref="T:System.Int32"/> value to cast to a <see cref="T:RiakClient.Quorum"/>.</param>
            <returns>A <see cref="T:RiakClient.Quorum"/> based on the value of the this <see cref="T:System.Int32"/>.</returns>
        </member>
        <member name="M:RiakClient.Quorum.op_Implicit(RiakClient.Quorum)~System.String">
            <summary>
            Cast the value of this <see cref="T:RiakClient.Quorum"/> to a <see cref="T:System.String"/>.
            </summary>
            <param name="quorum">The <see cref="T:RiakClient.Quorum"/> value to cast to a <see cref="T:System.String"/>.</param>
            <returns>A <see cref="T:System.String"/> based on the value of the this <see cref="T:RiakClient.Quorum"/>.</returns>
        </member>
        <member name="M:RiakClient.Quorum.op_Explicit(System.String)~RiakClient.Quorum">
            <summary>
            Cast the value of this <see cref="T:System.String"/> to a <see cref="T:RiakClient.Quorum"/>.
            </summary>
            <param name="quorum">The <see cref="T:System.String"/> value to cast to a <see cref="T:RiakClient.Quorum"/>.</param>
            <returns>A <see cref="T:RiakClient.Quorum"/> based on the value of the this <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:RiakClient.Quorum.op_Implicit(RiakClient.Quorum)~System.UInt32">
            <summary>
            Cast the value of this <see cref="T:RiakClient.Quorum"/> to a <see cref="T:System.UInt32"/>.
            </summary>
            <param name="quorum">The <see cref="T:RiakClient.Quorum"/> value to cast to a <see cref="T:System.UInt32"/>.</param>
            <returns>A <see cref="T:System.UInt32"/> based on the value of the this <see cref="T:RiakClient.Quorum"/>.</returns>
        </member>
        <member name="M:RiakClient.Quorum.op_Explicit(System.UInt32)~RiakClient.Quorum">
            <summary>
            Cast the value of this <see cref="T:System.UInt32"/> to a <see cref="T:RiakClient.Quorum"/>.
            </summary>
            <param name="quorum">The <see cref="T:System.UInt32"/> value to cast to a <see cref="T:RiakClient.Quorum"/>.</param>
            <returns>A <see cref="T:RiakClient.Quorum"/> based on the value of the this <see cref="T:System.UInt32"/>.</returns>
        </member>
        <member name="M:RiakClient.Quorum.ToString">
            <summary>
            Returns a string that represents the Quorum value.
            </summary>
            <returns>
            A string that represents the Quorum value. 
            Well known strings such as "one", "quorum", "all", and "default" are returned if possible.
            If value is not a well known string, it's <see cref="M:System.Int32.ToString"/> value will be used.
            </returns>
        </member>
        <member name="M:RiakClient.Quorum.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><b>true</b> if the specified object is equal to the current object, otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:RiakClient.Quorum.Equals(RiakClient.Quorum)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="other">The object to compare with the current object.</param>
            <returns><b>true</b> if the specified object is equal to the current object, otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:RiakClient.Quorum.GetHashCode">
            <summary>
            Returns a hash code for the current object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="T:RiakClient.Quorum.WellKnown">
            <summary>
            A collection of well known static quorum values, pre-initialized for use.
            </summary>
        </member>
        <member name="P:RiakClient.Quorum.WellKnown.One">
            <summary>
            The "one" Quorum instance.
            Only one replica must respond to a read or write request before it is considered successful.
            </summary>
        </member>
        <member name="P:RiakClient.Quorum.WellKnown.Quorum">
            <summary>
            The "quorum" Quorum instance.
            A majority of replicas must respond to a read or write request before it is considered successful.
            </summary>
        </member>
        <member name="P:RiakClient.Quorum.WellKnown.All">
            <summary>
            The "all" Quorum instance.
            All replicas that must respond to a read or write request before it is considered successful.
            </summary>
        </member>
        <member name="P:RiakClient.Quorum.WellKnown.Default">
            <summary>
            The "default" Quorum instance.
            The default number of replicas must respond to a read or write request before it is considered successful.
            Riak will use the bucket (or global) default value if this <see cref="P:RiakClient.Quorum.WellKnown.Quorum"/> is used.
            The true default value can be found in a bucket's properties, and varies for different parameters.
            </summary>
        </member>
        <member name="T:RiakClient.Models.RiakIndexId">
            <summary>
            An Id that specifies a specific index in Riak. Immutable once created. 
            </summary>
        </member>
        <member name="M:RiakClient.Models.RiakIndexId.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.RiakIndexId"/> class.
            </summary>
            <param name="bucketName">The bucket name to use.</param>
            <param name="indexName">The index name to use.</param>
        </member>
        <member name="M:RiakClient.Models.RiakIndexId.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.RiakIndexId"/> class.
            </summary>
            <param name="bucketType">The bucket type to use.</param>
            <param name="bucketName">The bucket name to use.</param>
            <param name="indexName">The index name to use.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="bucketName"/> cannot be null, empty, or whitespace.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="indexName"/> cannot be null, empty, or whitespace.</exception>
        </member>
        <member name="M:RiakClient.Models.RiakIndexId.op_Equality(RiakClient.Models.RiakIndexId,RiakClient.Models.RiakIndexId)">
            <summary>
            Determines whether the one object is equal to another object.
            </summary>
            <param name="left">The first <see cref="T:RiakClient.Models.RiakIndexId"/> to compare.</param>
            <param name="right">The other <see cref="T:RiakClient.Models.RiakIndexId"/> to compare.</param>
            <returns><b>true</b> if the specified object is equal to the current object, otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:RiakClient.Models.RiakIndexId.op_Inequality(RiakClient.Models.RiakIndexId,RiakClient.Models.RiakIndexId)">
            <summary>
            Determines whether the one object is <b>not</b> equal to another object.
            </summary>
            <param name="left">The first <see cref="T:RiakClient.Models.RiakObjectId"/> to compare.</param>
            <param name="right">The other <see cref="T:RiakClient.Models.RiakObjectId"/> to compare.</param>
            <returns><b>true</b> if the specified object is <b>not</b> equal to the current object, otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:RiakClient.Models.RiakIndexId.Equals(RiakClient.Models.RiakIndexId)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="other">The object to compare with the current object.</param>
            <returns><b>true</b> if the specified object is equal to the current object, otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:RiakClient.Models.RiakIndexId.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><b>true</b> if the specified object is equal to the current object, otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:RiakClient.Models.RiakIndexId.GetHashCode">
            <summary>
            Returns a hash code for the current object.
            Uses a combination of the public properties to generate a unique hash code.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="P:RiakClient.Models.RiakIndexId.BucketType">
            <summary>
            Get the Bucket Type of the Index Id.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakIndexId.BucketName">
            <summary>
            Get the Bucket Name of the Index Id.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakIndexId.IndexName">
            <summary>
            Get the Index Name of the Index Id.
            </summary>
        </member>
        <member name="T:RiakClient.Models.RiakDt.CounterOperation">
            <summary>
            Represents an operation on a Riak Counter data type.
            </summary>
        </member>
        <member name="T:RiakClient.Models.RiakDt.IDtOp">
            <summary>
            An interface representing a Riak datatype operation.
            </summary>
        </member>
        <member name="M:RiakClient.Models.RiakDt.IDtOp.ToDtOp">
            <summary>
            Convert the current instance to a <see cref="T:RiakClient.Messages.DtOp"/>.
            </summary>
            <returns>A new <see cref="T:RiakClient.Messages.DtOp"/>.</returns>
        </member>
        <member name="M:RiakClient.Models.RiakDt.CounterOperation.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.RiakDt.CounterOperation"/> class.
            </summary>
            <param name="value">The value to initialize the counter to.</param>
        </member>
        <member name="M:RiakClient.Models.RiakDt.CounterOperation.ToDtOp">
            <inheritdoc/>
        </member>
        <member name="P:RiakClient.Models.RiakDt.CounterOperation.Value">
            <summary>
            The value of the counter.
            </summary>
        </member>
        <member name="T:RiakClient.Models.RiakDt.MapOperation">
            <summary>
            Represents an operation on a Riak Map data type.
            </summary>
        </member>
        <member name="M:RiakClient.Models.RiakDt.MapOperation.ToDtOp">
            <inheritdoc/>
        </member>
        <member name="T:RiakClient.Models.RiakOptions`1">
            <summary>
            A collection of common options for most Riak operations.
            </summary>
            <typeparam name="T">The concrete subclass type.</typeparam>
        </member>
        <member name="M:RiakClient.Models.RiakOptions`1.SetR(RiakClient.Quorum)">
            <summary>
            A fluent setter for the <see cref="P:RiakClient.Models.RiakOptions`1.R"/> property.
            </summary>
            <param name="value">The value to set the property to.</param>
            <returns>A reference to the current options object.</returns>
        </member>
        <member name="M:RiakClient.Models.RiakOptions`1.SetR(System.Int32)">
            <summary>
            A fluent setter for the <see cref="P:RiakClient.Models.RiakOptions`1.R"/> property.
            </summary>
            <param name="value">The value to set the property to.</param>
            <returns>A reference to the current options object.</returns>
        </member>
        <member name="M:RiakClient.Models.RiakOptions`1.SetW(RiakClient.Quorum)">
            <summary>
            A fluent setter for the <see cref="P:RiakClient.Models.RiakOptions`1.W"/> property.
            </summary>
            <param name="value">The value to set the property to.</param>
            <returns>A reference to the current options object.</returns>
        </member>
        <member name="M:RiakClient.Models.RiakOptions`1.SetW(System.Int32)">
            <summary>
            A fluent setter for the <see cref="P:RiakClient.Models.RiakOptions`1.W"/> property.
            </summary>
            <param name="value">The value to set the property to.</param>
            <returns>A reference to the current options object.</returns>
        </member>
        <member name="M:RiakClient.Models.RiakOptions`1.SetPr(RiakClient.Quorum)">
            <summary>
            A fluent setter for the <see cref="P:RiakClient.Models.RiakOptions`1.Pr"/> property.
            </summary>
            <param name="value">The value to set the property to.</param>
            <returns>A reference to the current options object.</returns>
        </member>
        <member name="M:RiakClient.Models.RiakOptions`1.SetPr(System.Int32)">
            <summary>
            A fluent setter for the <see cref="P:RiakClient.Models.RiakOptions`1.Pr"/> property.
            </summary>
            <param name="value">The value to set the property to.</param>
            <returns>A reference to the current options object.</returns>
        </member>
        <member name="M:RiakClient.Models.RiakOptions`1.SetPw(RiakClient.Quorum)">
            <summary>
            A fluent setter for the <see cref="P:RiakClient.Models.RiakOptions`1.Pw"/> property.
            </summary>
            <param name="value">The value to set the property to.</param>
            <returns>A reference to the current options object.</returns>
        </member>
        <member name="M:RiakClient.Models.RiakOptions`1.SetPw(System.Int32)">
            <summary>
            A fluent setter for the <see cref="P:RiakClient.Models.RiakOptions`1.Pw"/> property.
            </summary>
            <param name="value">The value to set the property to.</param>
            <returns>A reference to the current options object.</returns>
        </member>
        <member name="M:RiakClient.Models.RiakOptions`1.SetDw(RiakClient.Quorum)">
            <summary>
            A fluent setter for the <see cref="P:RiakClient.Models.RiakOptions`1.Dw"/> property.
            </summary>
            <param name="value">The value to set the property to.</param>
            <returns>A reference to the current options object.</returns>
        </member>
        <member name="M:RiakClient.Models.RiakOptions`1.SetDw(System.Int32)">
            <summary>
            A fluent setter for the <see cref="P:RiakClient.Models.RiakOptions`1.Dw"/> property.
            </summary>
            <param name="value">The value to set the property to.</param>
            <returns>A reference to the current options object.</returns>
        </member>
        <member name="M:RiakClient.Models.RiakOptions`1.SetRw(RiakClient.Quorum)">
            <summary>
            A fluent setter for the <see cref="P:RiakClient.Models.RiakOptions`1.Rw"/> property.
            </summary>
            <param name="value">The value to set the property to.</param>
            <returns>A reference to the current options object.</returns>
        </member>
        <member name="M:RiakClient.Models.RiakOptions`1.SetRw(System.Int32)">
            <summary>
            A fluent setter for the <see cref="P:RiakClient.Models.RiakOptions`1.Rw"/> property.
            </summary>
            <param name="value">The value to set the property to.</param>
            <returns>A reference to the current options object.</returns>
        </member>
        <member name="M:RiakClient.Models.RiakOptions`1.SetTimeout(RiakClient.Timeout)">
            <summary>
            A fluent setter for the <see cref="P:RiakClient.Models.RiakOptions`1.Timeout"/> property.
            </summary>
            <param name="value">The value to set the property to.</param>
            <returns>A reference to the current options object.</returns>
        </member>
        <member name="P:RiakClient.Models.RiakOptions`1.R">
            <summary>
            The number of replicas that must return before a delete is considered a succes.
            </summary>
            <value>
            The R value. Possible values include 'default', 'one', 'quorum', 'all', or any integer.
            </value>
            <remarks>Developers looking for an easy way to set this can look at <see cref="T:RiakClient.Quorum.WellKnown"/></remarks>
        </member>
        <member name="P:RiakClient.Models.RiakOptions`1.W">
            <summary>
            The number of replicas that must respond before a write is considered a success.
            </summary>
            <value>The W value. Possible values include 'default', 'one', 'quorum', 'all', or any integer.</value>
            <remarks>Developers looking for an easy way to set this can look at <see cref="T:RiakClient.Quorum.WellKnown"/></remarks>
        </member>
        <member name="P:RiakClient.Models.RiakOptions`1.Pr">
            <summary>
            Primary Read Quorum - the number of replicas that need to be available when retrieving the object.
            </summary>
            <value>
            The primary read quorum. Possible values include 'default', 'one', 'quorum', 'all', or any integer.
            </value>
            <remarks>Developers looking for an easy way to set this can look at <see cref="T:RiakClient.Quorum.WellKnown"/></remarks>
        </member>
        <member name="P:RiakClient.Models.RiakOptions`1.Pw">
            <summary>
            Primary Write Quorum - the number of replicas need to be available when the write is attempted.
            </summary>
            <value>
            The primary write quorum. Possible values include 'default', 'one', 'quorum', 'all', or any integer.
            </value>
            <remarks>Developers looking for an easy way to set this can look at <see cref="T:RiakClient.Quorum.WellKnown"/></remarks>
        </member>
        <member name="P:RiakClient.Models.RiakOptions`1.Dw">
            <summary>
            Durable writes - the number of replicas that must commit to durable storage before returning a successful response.
            </summary>
            <value>
            The durable write value. Possible values include 'default', 'one', 'quorum', 'all', or any integer.
            </value>
            <remarks>Developers looking for an easy way to set this can look at <see cref="T:RiakClient.Quorum.WellKnown"/></remarks>
        </member>
        <member name="P:RiakClient.Models.RiakOptions`1.Rw">
            <summary>
            The number of replicas that need to agree when retrieving the object.
            </summary>
            <value>The RW Value. Possible values include 'default', 'one', 'quorum', 'all', or any integer.</value>
            <remarks>Developers looking for an easy way to set this can look at <see cref="T:RiakClient.Quorum.WellKnown"/></remarks>
        </member>
        <member name="P:RiakClient.Models.RiakOptions`1.Timeout">
            <summary>
            The <see cref="P:RiakClient.Models.RiakOptions`1.Timeout"/> period for an operation.
            </summary>
            <remarks>Developers can leave this unset by default.</remarks>
        </member>
        <member name="T:RiakClient.Models.Search.SearchIndex">
            <summary>
            Represents a Lucene search index.
            </summary>
        </member>
        <member name="M:RiakClient.Models.Search.SearchIndex.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.Search.SearchIndex"/> class.
            </summary>
            <param name="indexName">The name of the index.</param>
            <remarks>
            Uses the default schema name (<see cref="F:RiakClient.RiakConstants.Defaults.YokozunaIndex.DefaultSchemaName"/>), 
            and NVal value (<see cref="F:RiakClient.RiakConstants.Defaults.YokozunaIndex.NVal"/>).
            </remarks>
        </member>
        <member name="M:RiakClient.Models.Search.SearchIndex.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.Search.SearchIndex"/> class.
            </summary>
            <param name="indexName">The name of the index.</param>
            <param name="schemaName">The name of the schema for the index.</param>
            <remarks>
            Uses the provided schema name and default NVal value (<see cref="F:RiakClient.RiakConstants.Defaults.YokozunaIndex.NVal"/>).
            </remarks>
        </member>
        <member name="M:RiakClient.Models.Search.SearchIndex.#ctor(System.String,System.String,RiakClient.NVal)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.Search.SearchIndex"/> class.
            </summary>
            <param name="indexName">The name of the index.</param>
            <param name="schemaName">The name of the schema for the index.</param>
            <param name="nval">The <see cref="P:RiakClient.Models.Search.SearchIndex.NVal"/> value for storing index entries.</param>
            <exception cref="T:System.ArgumentException"><paramref name="indexName"/> cannot be null, zero length, or whitespace</exception>
            <exception cref="T:System.ArgumentException"><paramref name="schemaName"/> cannot be null, zero length, or whitespace</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The value of <paramref name="nval"/> must not be null.</exception>
        </member>
        <member name="P:RiakClient.Models.Search.SearchIndex.Name">
            <summary>
            The name of the index.
            </summary>
        </member>
        <member name="P:RiakClient.Models.Search.SearchIndex.SchemaName">
            <summary>
            The name of the index's schema.
            </summary>
        </member>
        <member name="P:RiakClient.Models.Search.SearchIndex.NVal">
            <summary>
            The <see cref="P:RiakClient.Models.Search.SearchIndex.NVal"/> value for storing index entries.
            I.e. - the number of copies to store the index to.
            </summary>
        </member>
        <member name="P:RiakClient.Models.Search.SearchIndex.Timeout">
            <summary>
            The <see cref="P:RiakClient.Models.Search.SearchIndex.Timeout"/> value for storing index entries.
            </summary>
        </member>
        <member name="T:RiakClient.Models.Search.SearchSchema">
            <summary>
            Represents a Lucene search schema.
            </summary>
        </member>
        <member name="M:RiakClient.Models.Search.SearchSchema.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.Search.SearchSchema"/> class.
            </summary>
            <param name="name">The name of the schema.</param>
            <param name="content">A string containing the schema.</param>
        </member>
        <member name="P:RiakClient.Models.Search.SearchSchema.Name">
            <summary>
            The name of the search schema.
            </summary>
        </member>
        <member name="P:RiakClient.Models.Search.SearchSchema.Content">
            <summary>
            A string containing the schema.
            </summary>
        </member>
        <member name="T:RiakClient.ResultCode">
            <summary>
            Riak operation result codes.
            </summary>
        </member>
        <member name="F:RiakClient.ResultCode.Success">
            <summary>
            The operation was successful.
            </summary>
        </member>
        <member name="F:RiakClient.ResultCode.ShuttingDown">
            <summary>
            Cluster was shutting down.
            </summary>
        </member>
        <member name="F:RiakClient.ResultCode.NotFound">
            <summary>
            The requested riak object was not found.
            </summary>
        </member>
        <member name="F:RiakClient.ResultCode.CommunicationError">
            <summary>
            Communication error with the cluster.
            </summary>
        </member>
        <member name="F:RiakClient.ResultCode.InvalidResponse">
            <summary>
            An invalid response was received.
            </summary>
        </member>
        <member name="F:RiakClient.ResultCode.ClusterOffline">
            <summary>
            The cluster is offline.
            </summary>
        </member>
        <member name="F:RiakClient.ResultCode.NoConnections">
            <summary>
            No available connections to make a request.
            </summary>
        </member>
        <member name="F:RiakClient.ResultCode.BatchException">
            <summary>
            An exception occurred during a batch operation.
            </summary>
        </member>
        <member name="F:RiakClient.ResultCode.NoRetries">
            <summary>
            The client ran out of retry attempts while trying to process the request.
            </summary>
        </member>
        <member name="F:RiakClient.ResultCode.HttpError">
            <summary>
            An HTTP error occurred.
            </summary>
        </member>
        <member name="F:RiakClient.ResultCode.InvalidRequest">
            <summary>
            An invalid request was performed.
            </summary>
        </member>
        <member name="T:RiakClient.RiakResult`1">
            <summary>
            Represents the collection of result information for a Riak operation that 
            returns a <typeparamref name="TResult"/>-typed value.     
            </summary>
            <typeparam name="TResult">The type of the Riak operation's return value.</typeparam>
        </member>
        <member name="T:RiakClient.RiakResult">
            <summary>
            Represents the collection of result information for a Riak operation that has no specific return value.
            </summary>
        </member>
        <member name="M:RiakClient.RiakResult.#ctor(System.Boolean,System.String,RiakClient.ResultCode)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.RiakResult"/> class.
            </summary>
            <param name="isSuccess"><b>true</b> if the result represents Success, <b>false</b> otherwise. Defaults to <b>true</b>.</param>
            <param name="errorMessage">The error message, if any. Defaults to <b>null</b>.</param>
            <param name="resultCode">The <see cref="P:RiakClient.RiakResult.ResultCode"/>. Defaults to <b>ResultCode.Success</b>.</param>
        </member>
        <member name="M:RiakClient.RiakResult.#ctor(RiakClient.ResultCode,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.RiakResult"/> class.
            </summary>
            <param name="resultCode">The <see cref="P:RiakClient.RiakResult.ResultCode"/>.</param>
            <param name="exception">The <see cref="T:System.Exception"/>. Required.</param>
        </member>
        <member name="P:RiakClient.RiakResult.IsSuccess">
            <summary>
            <b>true</b> if the Riak operation was a success, otherwise, <b>false</b>.
            </summary>
        </member>
        <member name="P:RiakClient.RiakResult.ErrorMessage">
            <summary>
            The error message returned from the Riak operation, in the case that the operation was not a success.
            </summary>
        </member>
        <member name="P:RiakClient.RiakResult.Exception">
            <summary>
            The <see cref="T:System.Exception"/> returned from the Riak operation.
            </summary>
        </member>
        <member name="P:RiakClient.RiakResult.ResultCode">
            <summary>
            The <see cref="P:RiakClient.RiakResult.ResultCode"/> returned from the operation.
            </summary>
        </member>
        <member name="M:RiakClient.RiakResult`1.GetHashCode">
            <summary>
            Returns a hash code for the current object.
            Uses a combination of the public properties to calculate the hash.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:RiakClient.RiakResult`1.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><b>true</b> if the specified object is equal to the current object, otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:RiakClient.RiakResult`1.Equals(RiakClient.RiakResult{`0})">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="other">The object to compare with the current object.</param>
            <returns><b>true</b> if the specified object is equal to the current object, otherwise, <b>false</b>.</returns>
        </member>
        <member name="P:RiakClient.RiakResult`1.Value">
            <summary>
            The return value from the Riak operation.
            </summary>
        </member>
        <member name="P:RiakClient.RiakResult`1.Done">
            <summary>Is the current paginated query / streaming query done?</summary>
            <remarks>Valid for Riak 1.4+ only.</remarks>
        </member>
        <member name="P:RiakClient.RiakResult`1.Continuation">
            <summary>
            An opaque continuation returned if there are still additional 
            results to be returned in a paginated query. This value should
            be supplied to the next query issued to Riak.
            </summary>
            <remarks>Valid for Riak 1.4 and newer only.</remarks>
        </member>
        <member name="T:RiakClient.Exceptions.RiakInvalidDataException">
            <summary>
            Represents an error that occurs when an invalid message code is read from a Riak response.
            </summary>
        </member>
        <member name="M:RiakClient.Exceptions.RiakInvalidDataException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Exceptions.RiakInvalidDataException"/> class.
            </summary>
        </member>
        <member name="M:RiakClient.Exceptions.RiakInvalidDataException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Exceptions.RiakInvalidDataException"/> class.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:RiakClient.Exceptions.RiakInvalidDataException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Exceptions.RiakInvalidDataException"/> class.
            </summary>
            <param name="message">A message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:RiakClient.Exceptions.RiakInvalidDataException.#ctor(System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Exceptions.RiakInvalidDataException"/> class.
            </summary>
            <param name="messageCode">The invalid message code that was read from the Riak response.</param>
        </member>
        <member name="M:RiakClient.Exceptions.RiakInvalidDataException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc/>
            <exception cref="T:System.ArgumentNullException">The value of '<paramref name="info"/>' cannot be null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">A value has already been associated with '<paramref name="name"/>'.</exception>
        </member>
        <member name="P:RiakClient.Exceptions.RiakInvalidDataException.MessageCode">
            <summary>
            The invalid message code that was read from the Riak response.
            </summary>
        </member>
        <member name="T:RiakClient.IRiakEndPoint">
            <summary>
            Represents a connection to a Riak node, and allows operations to be performed with that connection.
            </summary>
        </member>
        <member name="M:RiakClient.IRiakEndPoint.CreateClient">
            <summary>
            Creates a new <see cref="T:RiakClient.IRiakClient"/> instance.
            </summary>
            <returns>The new <see cref="T:RiakClient.IRiakClient"/> instance.</returns>
        </member>
        <member name="M:RiakClient.IRiakEndPoint.UseConnection``1(System.Func{RiakClient.Comms.IRiakConnection,RiakClient.RiakResult{``0}},System.Int32)">
            <summary>
            Executes a delegate function using a <see cref="T:RiakClient.Comms.IRiakConnection"/>, and returns the results. 
            Retries if possible for certain error states.
            </summary>
            <typeparam name="TResult">The type of the result from the <paramref name="useFun"/> parameter.</typeparam>
            <param name="useFun">
            The delegate function to execute. Takes an <see cref="T:RiakClient.Comms.IRiakConnection"/> as input, and returns a 
            <see cref="T:RiakClient.RiakResult`1"/> as the result of the operation.
            </param>
            <param name="retryAttempts">The number of times to retry an operation.</param>
            <returns>The result of the <paramref name="useFun"/> delegate.</returns>
        </member>
        <member name="M:RiakClient.IRiakEndPoint.UseConnection(System.Func{RiakClient.Comms.IRiakConnection,RiakClient.RiakResult},System.Int32)">
            <summary>
            Executes a delegate function using a <see cref="T:RiakClient.Comms.IRiakConnection"/>, and returns the results.
            Retries if possible for certain error states.
            </summary>
            <param name="useFun">
            The delegate function to execute. Takes an <see cref="T:RiakClient.Comms.IRiakConnection"/> as input, and returns a 
            <see cref="T:RiakClient.RiakResult"/> as the result of the operation.
            </param>
            <param name="retryAttempts">The number of times to retry an operation.</param>
            <returns>The result of the <paramref name="useFun"/> delegate.</returns>
        </member>
        <member name="M:RiakClient.IRiakEndPoint.UseDelayedConnection``1(System.Func{RiakClient.Comms.IRiakConnection,System.Action,RiakClient.RiakResult{System.Collections.Generic.IEnumerable{``0}}},System.Int32)">
            <summary>
            Executes a delegate function using a <see cref="T:RiakClient.Comms.IRiakConnection"/>, and returns the results.
            Retries if possible for certain error states.
            This method is used over <see cref="M:RiakClient.IRiakEndPoint.UseConnection(System.Func{RiakClient.Comms.IRiakConnection,RiakClient.RiakResult},System.Int32)"/> to keep a connection open to receive streaming results.
            </summary>
            <typeparam name="TResult">The type of the result from the <paramref name="useFun"/> parameter.</typeparam>
            <param name="useFun">
            The delegate function to execute. Takes an <see cref="T:RiakClient.Comms.IRiakConnection"/> and an <see cref="T:System.Action"/> continuation as input, and returns a 
            <see cref="T:RiakClient.RiakResult`1"/> containing an <see cref="T:System.Collections.Generic.IEnumerable`1"/> as the results of the operation.
            </param>
            <param name="retryAttempts">The number of times to retry an operation.</param>
            <returns>The results of the <paramref name="useFun"/> delegate.</returns>
        </member>
        <member name="P:RiakClient.IRiakEndPoint.RetryWaitTime">
            <summary>
            Represents the <see cref="T:System.TimeSpan"/> to wait inbetween retry attempts.
            </summary>
        </member>
        <member name="T:RiakClient.Messages.MessageCode">
            <summary>
            An enumeration of the different protocol buffer message codes.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbErrorResp">
            <summary>
            Generic Error Response.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbPingReq">
            <summary>
            Ping Request.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbPingResp">
            <summary>
            Ping Response.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbGetClientIdReq">
            <summary>
            Get Client Id Request.
            </summary>
            <remarks>Not used anymore.</remarks>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbGetClientIdResp">
            <summary>
            Get Client Id Response.
            </summary>
            <remarks>Not used anymore.</remarks>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbSetClientIdReq">
            <summary>
            Set Client Id Request.
            </summary>
            <remarks>Not used anymore.</remarks>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbSetClientIdResp">
            <summary>
            Set Client Id Response.
            </summary>
            <remarks>Not used anymore.</remarks>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbGetServerInfoReq">
            <summary>
            Get Server Info Request.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbGetServerInfoResp">
            <summary>
            Get Server Info Response.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbGetReq">
            <summary>
            Get Riak Object Request.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbGetResp">
            <summary>
            Get Riak Object Response.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbPutReq">
            <summary>
            Put Riak Object Request.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbPutResp">
            <summary>
            Put Riak Object Response.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbDelReq">
            <summary>
            Delete Riak Object Request.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbDelResp">
            <summary>
            Delete Riak Object Response.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbListBucketsReq">
            <summary>
            List Buckets Request.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbListBucketsResp">
            <summary>
            List Buckets Response.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbListKeysReq">
            <summary>
            List Keys Request.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbListKeysResp">
            <summary>
            List Keys Response.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbGetBucketReq">
            <summary>
            Get Bucket Properties Request.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbGetBucketResp">
            <summary>
            Get Bucket Properties Response.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbSetBucketReq">
            <summary>
            Set Bucket Properties Request.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbSetBucketResp">
            <summary>
            Set Bucket Properties Response.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbMapRedReq">
            <summary>
            MapReduce Query Request.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbMapRedResp">
            <summary>
            MapReduce Query Response.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbIndexReq">
            <summary>
            Secondary Index Query Request.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbIndexResp">
            <summary>
            Secondary Index Query Response.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbSearchQueryReq">
            <summary>
            Search Query Request.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbSearchQueryResp">
            <summary>
            Search Query Response.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbResetBucketReq">
            <summary>
            Reset Bucket Properties Request.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbResetBucketResp">
            <summary>
            Reset Bucket Properties Response.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbGetBucketTypeReq">
            <summary>
            Get Bucket Type Request.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbSetBucketTypeReq">
            <summary>
            Set Bucket Type Request.
            </summary>
            <remarks>Not used.</remarks>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbGetBucketKeyPreflistReq">
            <summary>
            Get bucket key preflist request.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbGetBucketKeyPreflistResp">
            <summary>
            Get bucket key preflist response.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbCSBucketReq">
            <summary>
            Riak CS Bucket Request.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbCSBucketResp">
            <summary>
            Riak CS Bucket Response.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbIndexBodyResp">
            <summary>
            Riak Index Body Response.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbCounterUpdateReq">
            <summary>
            Riak 1.4 Counter Update Request.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbCounterUpdateResp">
            <summary>
            Riak 1.4 Counter Update Response.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbCounterGetReq">
            <summary>
            Riak 1.4 Counter Get Request.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbCounterGetResp">
            <summary>
            Riak 1.4 Counter Get Response.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbYokozunaIndexGetReq">
            <summary>
            Yokozuna Index Get Request.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbYokozunaIndexGetResp">
            <summary>
            Yokozuna Index Get Response.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbYokozunaIndexPutReq">
            <summary>
            Yokozuna Index Put Request.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbYokozunaIndexDeleteReq">
            <summary>
            Yokozuna Index Delete Request.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbYokozunaSchemaGetReq">
            <summary>
            Yokozuna Schema Get Request.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbYokozunaSchemaGetResp">
            <summary>
            Yokozuna Schema Get Response.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbYokozunaSchemaPutReq">
            <summary>
            Yokozuna Schema Put Request.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbCoverageReq">
            <summary>
            Coverage Request.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbCoverageResp">
            <summary>
            Coverage Response
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.DtFetchReq">
            <summary>
            DataType Fetch Request.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.DtFetchResp">
            <summary>
            DataType Fetch Response.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.DtUpdateReq">
            <summary>
            DataType Update Request.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.DtUpdateResp">
            <summary>
            DataType Update Response.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.TsQueryReq">
            <summary>
            TS Query Request
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.TsQueryResp">
            <summary>
            TS Query Response
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.TsPutReq">
            <summary>
            TS Put Request
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.TsPutResp">
            <summary>
            TS Put Response
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.TsDelReq">
            <summary>
            TS Delete Request
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.TsDelResp">
            <summary>
            TS Delete Response
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.TsGetReq">
            <summary>
            TS Get Request
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.TsGetResp">
            <summary>
            TS Get Response
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.TsListKeysReq">
            <summary>
            TS List Keys Request
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.TsListKeysResp">
            <summary>
            TS List Keys Response
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.TsCoverageReq">
            <summary>
            TS Coverage Request
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.TsCoverageResp">
            <summary>
            TS Coverage Response
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.TsCoverageEntry">
            <summary>
            TS Coverage Entry
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.TsRange">
            <summary>
            TS Range
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.TsTtbMsg">
            <summary>
            TTB Message
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbAuthReq">
            <summary>
            Authentication Request.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbAuthResp">
            <summary>
            Authentication Response.
            </summary>
        </member>
        <member name="F:RiakClient.Messages.MessageCode.RpbStartTls">
            <summary>
            Start TLS Session Request.
            </summary>
        </member>
        <member name="T:RiakClient.Models.Index.IRiakIndexResult">
            <summary>
            Represents the interface to an index query result.
            </summary>
        </member>
        <member name="P:RiakClient.Models.Index.IRiakIndexResult.IndexKeyTerms">
            <summary>
            The collection of result <see cref="T:RiakClient.Models.Index.RiakIndexKeyTerm"/>s.
            </summary>
        </member>
        <member name="T:RiakClient.Models.Index.BinIndex">
            <summary>
            A binary secondary index for a <see cref="T:RiakClient.Models.RiakObject"/>.
            </summary>
        </member>
        <member name="T:RiakClient.Models.Index.SecondaryIndex`2">
            <summary>
            Represents an abstract secondary index for a <see cref="T:RiakClient.Models.RiakObject"/>.
            </summary>
            <typeparam name="TClass">The concrete type of the implementing class.</typeparam>
            <typeparam name="TIndex">The type of the index (<see cref="T:System.Numerics.BigInteger"/> or <see cref="T:System.String"/>).</typeparam>
        </member>
        <member name="M:RiakClient.Models.Index.SecondaryIndex`2.Clear">
            <summary>
            Clear the terms for this index instance.
            </summary>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.Index.SecondaryIndex`2.Add(System.Collections.Generic.IEnumerable{`1})">
            <summary>
            Add the <see cref="T:System.Collections.Generic.IEnumerable`1"/> collection of term values to the index.
            </summary>
            <param name="valuesToAdd">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of new terms to add.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.Index.SecondaryIndex`2.Add(`1[])">
            <summary>
            Adds the params array collection of term values to the index.
            </summary>
            <param name="valuesToAdd">A params array of term values to add.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.Index.SecondaryIndex`2.Remove(System.Collections.Generic.IEnumerable{`1})">
            <summary>
            Removes the params array <paramref name="valuesToRemove"/> of term values from the index.
            </summary>
            <param name="valuesToRemove">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of terms values to remove.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.Index.SecondaryIndex`2.Remove(`1[])">
            <summary>
            Removes the collection <paramref name="valuesToRemove"/> of term values from the index.
            </summary>
            <param name="valuesToRemove">A params array of term values to remove.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.Index.SecondaryIndex`2.Set(System.Collections.Generic.IEnumerable{`1})">
            <summary>
            Sets the term collection to those terms in <paramref name="values"/> collection.
            Deletes any existing terms in the collection.
            Similar to an overwriting assignment.
            </summary>
            <param name="values">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of new term values to add.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.Index.SecondaryIndex`2.Set(`1[])">
            <summary>
            Sets the term collection to those terms in <paramref name="values"/> params array.
            Deletes any existing terms in the collection.
            Similar to an overwriting assignment.
            </summary>
            <param name="values">A params array of new term values to add.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.Index.SecondaryIndex`2.HasValue(`1)">
            <summary>
            Determines whether an element is in the terms collection.
            </summary>
            <param name="value">The element to check membership for.</param>
            <returns><b>true</b> if the terms collection contains <paramref name="value"/>, <b>false</b>, otherwise.</returns>
        </member>
        <member name="P:RiakClient.Models.Index.SecondaryIndex`2.Values">
            <summary>
            The term values for the index.
            </summary>
        </member>
        <member name="P:RiakClient.Models.Index.SecondaryIndex`2.Name">
            <summary>
            The name of the index.
            </summary>
        </member>
        <member name="M:RiakClient.Models.Index.BinIndex.Delete">
            <summary>
            Delete this index from it's parent <see cref="T:RiakClient.Models.RiakObject"/>.
            </summary>
            <returns>
            A reference to the updated parent <see cref="T:RiakClient.Models.RiakObject"/>.
            </returns>
        </member>
        <member name="M:RiakClient.Models.Index.BinIndex.Add(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Add the <see cref="T:System.Collections.Generic.IEnumerable`1"/> collection of term values to the index.
            </summary>
            <param name="values">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of new terms to add.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.Index.BinIndex.Add(System.String[])">
            <summary>
            Adds the params array collection of term values to the index.
            </summary>
            <param name="values">A params array of term values to add.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="T:RiakClient.Models.CommitHook.IRiakPostCommitHook">
            <summary>
            Represents an interface for post-commit hooks.
            </summary>
        </member>
        <member name="T:RiakClient.Models.CommitHook.IRiakPreCommitHook">
            <summary>
            Represents an interface for pre-commit hooks.
            </summary>
        </member>
        <member name="T:RiakClient.Models.CommitHook.RiakCommitHook">
            <summary>
            Represents an abstract implementation for Riak commit hooks.
            </summary>
        </member>
        <member name="M:RiakClient.Models.CommitHook.RiakCommitHook.ToJsonString">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.Models.CommitHook.RiakCommitHook.WriteJson(Newtonsoft.Json.JsonWriter)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.Models.CommitHook.RiakCommitHook.ToRpbCommitHook">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.Models.CommitHook.RiakCommitHook.Equals(RiakClient.Models.CommitHook.RiakCommitHook)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="other">The object to compare with the current object.</param>
            <returns><b>true</b> if the specified object is equal to the current object, otherwise, <b>false</b>.</returns>
        </member>
        <member name="T:RiakClient.Models.CommitHook.RiakErlangCommitHook">
            <summary>
            Represents an Erlang-based commit hook.
            </summary>
        </member>
        <member name="M:RiakClient.Models.CommitHook.RiakErlangCommitHook.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.CommitHook.RiakErlangCommitHook"/> class.
            </summary>
            <param name="module">The Erlang module that contains the hook function.</param>
            <param name="function">The Erlang function to execute for the hook.</param>
        </member>
        <member name="M:RiakClient.Models.CommitHook.RiakErlangCommitHook.op_Equality(RiakClient.Models.CommitHook.RiakErlangCommitHook,RiakClient.Models.CommitHook.RiakErlangCommitHook)">
            <summary>
            Determines whether the one object is equal to another object.
            </summary>
            <param name="left">The first <see cref="T:RiakClient.Models.RiakIndexId"/> to compare.</param>
            <param name="right">The other <see cref="T:RiakClient.Models.RiakIndexId"/> to compare.</param>
            <returns><b>true</b> if the specified object is equal to the current object, otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:RiakClient.Models.CommitHook.RiakErlangCommitHook.op_Inequality(RiakClient.Models.CommitHook.RiakErlangCommitHook,RiakClient.Models.CommitHook.RiakErlangCommitHook)">
            <summary>
            Determines whether the one object is <b>not</b> equal to another object.
            </summary>
            <param name="left">The first <see cref="T:RiakClient.Models.RiakObjectId"/> to compare.</param>
            <param name="right">The other <see cref="T:RiakClient.Models.RiakObjectId"/> to compare.</param>
            <returns><b>true</b> if the specified object is <b>not</b> equal to the current object, otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:RiakClient.Models.CommitHook.RiakErlangCommitHook.WriteJson(Newtonsoft.Json.JsonWriter)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.Models.CommitHook.RiakErlangCommitHook.ToRpbCommitHook">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.Models.CommitHook.RiakErlangCommitHook.Equals(RiakClient.Models.CommitHook.RiakCommitHook)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="other">The object to compare with the current object.</param>
            <returns><b>true</b> if the specified object is equal to the current object, otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:RiakClient.Models.CommitHook.RiakErlangCommitHook.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><b>true</b> if the specified object is equal to the current object, otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:RiakClient.Models.CommitHook.RiakErlangCommitHook.GetHashCode">
            <summary>
            Returns a hash code for the current object.
            Uses a combination of the public properties to generate a unique hash code.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:RiakClient.Models.CommitHook.RiakErlangCommitHook.Equals(RiakClient.Models.CommitHook.RiakErlangCommitHook)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="other">The object to compare with the current object.</param>
            <returns><b>true</b> if the specified object is equal to the current object, otherwise, <b>false</b>.</returns>
        </member>
        <member name="P:RiakClient.Models.CommitHook.RiakErlangCommitHook.Module">
            <summary>
            The Erlang module that contains the hook function.
            </summary>
        </member>
        <member name="P:RiakClient.Models.CommitHook.RiakErlangCommitHook.Function">
            <summary>
            The Erlang function to execute for the hook.
            </summary>
        </member>
        <member name="T:RiakClient.Models.CommitHook.RiakJavascriptCommitHook">
            <summary>
            Represents a JavaScript-based commit hook.
            </summary>
        </member>
        <member name="M:RiakClient.Models.CommitHook.RiakJavascriptCommitHook.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.CommitHook.RiakJavascriptCommitHook"/> class.
            </summary>
            <param name="name">The name of the JavaScript function to use for this hook.s</param>
        </member>
        <member name="M:RiakClient.Models.CommitHook.RiakJavascriptCommitHook.op_Equality(RiakClient.Models.CommitHook.RiakJavascriptCommitHook,RiakClient.Models.CommitHook.RiakJavascriptCommitHook)">
            <summary>
            Determines whether the one object is equal to another object.
            </summary>
            <param name="left">The first <see cref="T:RiakClient.Models.RiakIndexId"/> to compare.</param>
            <param name="right">The other <see cref="T:RiakClient.Models.RiakIndexId"/> to compare.</param>
            <returns><b>true</b> if the specified object is equal to the current object, otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:RiakClient.Models.CommitHook.RiakJavascriptCommitHook.op_Inequality(RiakClient.Models.CommitHook.RiakJavascriptCommitHook,RiakClient.Models.CommitHook.RiakJavascriptCommitHook)">
            <summary>
            Determines whether the one object is <b>not</b> equal to another object.
            </summary>
            <param name="left">The first <see cref="T:RiakClient.Models.RiakObjectId"/> to compare.</param>
            <param name="right">The other <see cref="T:RiakClient.Models.RiakObjectId"/> to compare.</param>
            <returns><b>true</b> if the specified object is <b>not</b> equal to the current object, otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:RiakClient.Models.CommitHook.RiakJavascriptCommitHook.Equals(RiakClient.Models.CommitHook.RiakCommitHook)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="other">The object to compare with the current object.</param>
            <returns><b>true</b> if the specified object is equal to the current object, otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:RiakClient.Models.CommitHook.RiakJavascriptCommitHook.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><b>true</b> if the specified object is equal to the current object, otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:RiakClient.Models.CommitHook.RiakJavascriptCommitHook.GetHashCode">
            <summary>
            Returns a hash code for the current object.
            Uses a combination of the public properties to generate a unique hash code.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:RiakClient.Models.CommitHook.RiakJavascriptCommitHook.WriteJson(Newtonsoft.Json.JsonWriter)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.Models.CommitHook.RiakJavascriptCommitHook.ToRpbCommitHook">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.Models.CommitHook.RiakJavascriptCommitHook.Equals(RiakClient.Models.CommitHook.RiakJavascriptCommitHook)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="other">The object to compare with the current object.</param>
            <returns><b>true</b> if the specified object is equal to the current object, otherwise, <b>false</b>.</returns>
        </member>
        <member name="P:RiakClient.Models.CommitHook.RiakJavascriptCommitHook.Name">
            <summary>
            The name of the JavaScript function to execute for the hook.
            </summary>
        </member>
        <member name="T:RiakClient.Models.Index.IntIndex">
            <summary>
            An integer secondary index for a <see cref="T:RiakClient.Models.RiakObject"/>.
            </summary>
        </member>
        <member name="M:RiakClient.Models.Index.IntIndex.Set(System.String[])">
            <summary>
            Sets the term collection to those term values in param string[] <paramref name="values"/>.
            Deletes any existing terms in the collection.
            Similar to an overwriting assignment.
            </summary>
            <param name="values">The new terms to add.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.Index.IntIndex.Set(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Sets the term collection to those term values in the <see cref="T:System.Collections.Generic.IEnumerable`1"/> collection <paramref name="values"/>.
            Deletes any existing terms in the collection.
            Similar to an overwriting assignment.
            </summary>
            <param name="values">The new terms to add.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.Index.IntIndex.Add(System.String[])">
            <summary>
            Adds the term values collection in param string[] <paramref name="values"/> to the index.
            </summary>
            <param name="values">The term values to add.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.Index.IntIndex.Add(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds the term values in the <see cref="T:System.Collections.Generic.IEnumerable`1"/> collection <paramref name="values"/> to the index.
            </summary>
            <param name="values">The term values to add.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.Index.IntIndex.Remove(System.String[])">
            <summary>
            Removes the term values in param string[] <paramref name="values"/> from the index.
            </summary>
            <param name="values">The term values to remove.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.Index.IntIndex.Remove(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Removes the term values in the <see cref="T:System.Collections.Generic.IEnumerable`1"/> collection <paramref name="values"/> from the index.
            </summary>
            <param name="values">The term values to remove.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.Index.IntIndex.Delete">
            <summary>
            Delete this index from it's parent <see cref="T:RiakClient.Models.RiakObject"/>.
            </summary>
            <returns>
            A reference to the updated parent <see cref="T:RiakClient.Models.RiakObject"/>.
            </returns>
        </member>
        <member name="T:RiakClient.Models.Index.RiakIndexKeyTerm">
            <summary>
            Represents an index result Key-Term pair.
            </summary>
        </member>
        <member name="M:RiakClient.Models.Index.RiakIndexKeyTerm.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.Index.RiakIndexKeyTerm"/> class.
            </summary>
            <param name="key">The result key to use.</param>
        </member>
        <member name="M:RiakClient.Models.Index.RiakIndexKeyTerm.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.Index.RiakIndexKeyTerm"/> class.
            </summary>
            <param name="key">The result key to use.</param>
            <param name="term">The matchint term to use.</param>
        </member>
        <member name="P:RiakClient.Models.Index.RiakIndexKeyTerm.Key">
            <summary>
            The result key.
            </summary>
        </member>
        <member name="P:RiakClient.Models.Index.RiakIndexKeyTerm.Term">
            <summary>
            The matching term.
            </summary>
        </member>
        <member name="T:RiakClient.Models.Index.RiakIndexResult">
            <summary>
            Represents a result to an index query.
            </summary>
        </member>
        <member name="P:RiakClient.Models.Index.RiakIndexResult.IndexKeyTerms">
            <inheritdoc/>
        </member>
        <member name="T:RiakClient.Models.Index.RiakStreamedIndexResult">
            <summary>
            Represents a result to a streaming index query.
            </summary>
        </member>
        <member name="M:RiakClient.Models.Index.RiakStreamedIndexResult.#ctor(System.Boolean,System.Collections.Generic.IEnumerable{RiakClient.RiakResult{RiakClient.Messages.RpbIndexResp}})">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.Index.RiakStreamedIndexResult"/> class.
            </summary>
            <param name="includeTerms">The option to include the terms in the results.</param>
            <param name="responseReader">The <see cref="T:System.Collections.Generic.IEnumerable`1"/> to read results from.</param>
        </member>
        <member name="P:RiakClient.Models.Index.RiakStreamedIndexResult.IndexKeyTerms">
            <inheritdoc/>
        </member>
        <member name="T:RiakClient.Models.IWriteableVClock">
            <summary>
            <para>Implements a writeable vector clock interface. Callers must explicitly use the
            IWriteableVClock interface to set the vector clock value. This is by design and
            is implemented in an attempt to prevent developers new to Riak from causing themselves
            more pain. This trade off should present developers with a reliable way to explicitly
            drop down to mucking about with vector clocks - it becomes apparent to a casual 
            observer that something out of the ordinary is happening.</para>
            <para>A better understanding of the usefulness of vector clocks can be found in 
            John Daily's Understanding Riak’s Configurable Behaviors: Part 2
            (http://basho.com/riaks-config-behaviors-part-2/).
            </para>
            </summary>
        </member>
        <member name="M:RiakClient.Models.IWriteableVClock.SetVClock(System.Byte[])">
            <summary>
            Sets the VClock.
            </summary>
            <param name="vclock">The value to set the VClock to.</param>
        </member>
        <member name="T:RiakClient.Models.MapReduce.Fluent.RiakFluentKeyFilter">
            <summary>
            A fluent builder class for defining input key filters.
            Please see http://docs.basho.com/riak/latest/dev/using/keyfilters/ and
            http://docs.basho.com/riak/latest/dev/references/keyfilters/ for more information
            on using Key Filters.
            </summary>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Fluent.RiakFluentKeyFilter.And(System.Action{RiakClient.Models.MapReduce.Fluent.RiakFluentKeyFilter},System.Action{RiakClient.Models.MapReduce.Fluent.RiakFluentKeyFilter})">
            <summary>
            Joins two key-filter operations with a logical AND operation.
            </summary>
            <param name="left">The left <see cref="T:RiakClient.Models.MapReduce.Fluent.RiakFluentKeyFilter"/> operand to AND together.</param>
            <param name="right">The right <see cref="T:RiakClient.Models.MapReduce.Fluent.RiakFluentKeyFilter"/> operand to AND together.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Fluent.RiakFluentKeyFilter.Between``1(``0,``0,System.Boolean)">
            <summary>
            Tests that the input is between the <paramref name="first"/> and <paramref name="second"/> parameters. 
            </summary>
            <typeparam name="T">
            The type of the <paramref name="first"/> and <paramref name="second"/> objects.
            </typeparam>
            <param name="first">The lower boundary object to compare the keys against.</param>
            <param name="second">The upper boundary object to compare the keys against.</param>
            <param name="inclusive">
            If <b>true</b>, the query will include the parameters in the range.
            If <b>false</b>, it will exclude them from the range.
            </param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
            <remarks>
            This function follows Erlang's precedence rules for comparisons. 
            Generally this means that numbers will be compared by value (including appropriate coercions) and strings will be compared lexically.
            </remarks>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Fluent.RiakFluentKeyFilter.EndsWith(System.String)">
            <summary>
            Tests that the input ends with the <paramref name="arg"/> parameter (a string).
            </summary>
            <param name="arg">The string to compare against the end of the key.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Fluent.RiakFluentKeyFilter.Equal``1(``0)">
            <summary>
            Tests that the input is equal to the argument.
            </summary>
            <typeparam name="T">The type of the <paramref name="arg"/> object.</typeparam>
            <param name="arg">The other object to compare the key against.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Fluent.RiakFluentKeyFilter.FloatToString">
            <summary>
            Turns a floating point number (previously extracted with <see cref="M:RiakClient.Models.MapReduce.Fluent.RiakFluentKeyFilter.StringToFloat"/>), into a string.
            </summary>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Fluent.RiakFluentKeyFilter.GreaterThan``1(``0)">
            <summary>
            Tests that the input is greater than the <paramref name="arg"/> parameter.
            </summary>
            <typeparam name="T">The type of the <paramref name="arg"/> object.</typeparam>
            <param name="arg">The string or number to compare the key against.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
            <remarks>
            This function follows Erlang's precedence rules for comparisons. 
            Generally this means that numbers will be compared by value (including appropriate coercions) and strings will be compared lexically.
            </remarks>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Fluent.RiakFluentKeyFilter.GreaterThanOrEqualTo``1(``0)">
            <summary>
            Tests that the input is greater than or equal to the <paramref name="arg"/> parameter.
            </summary>
            <typeparam name="T">The type of the <paramref name="arg"/> object.</typeparam>
            <param name="arg">The string or number to compare the key against.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
            <remarks>
            This function follows Erlang's precedence rules for comparisons. 
            Generally this means that numbers will be compared by value (including appropriate coercions) and strings will be compared lexically.
            </remarks>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Fluent.RiakFluentKeyFilter.IntToString">
            <summary>
            Turns an integer (previously extracted with <see cref="M:RiakClient.Models.MapReduce.Fluent.RiakFluentKeyFilter.StringToInt"/>), into a string.
            </summary>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Fluent.RiakFluentKeyFilter.LessThan``1(``0)">
            <summary>
            Tests that the input is less than the <paramref name="arg"/> parameter.
            </summary>
            <typeparam name="T">The type of the <paramref name="arg"/> object.</typeparam>
            <param name="arg">The string or number to compare the key against.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
            <remarks>
            This function follows Erlang's precedence rules for comparisons. 
            Generally this means that numbers will be compared by value (including appropriate coercions) and strings will be compared lexically.
            </remarks>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Fluent.RiakFluentKeyFilter.LessThanOrEqualTo``1(``0)">
            <summary>
            Tests that the input is less than or equal to the <paramref name="arg"/> parameter.
            </summary>
            <typeparam name="T">The type of the <paramref name="arg"/> object.</typeparam>
            <param name="arg">The string or number to compare the key against.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
            <remarks>
            This function follows Erlang's precedence rules for comparisons. 
            Generally this means that numbers will be compared by value (including appropriate coercions) and strings will be compared lexically.
            </remarks>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Fluent.RiakFluentKeyFilter.Matches(System.String)">
            <summary>
            Tests that the input matches the regular expression given in the <paramref name="regex"/> parameter.
            </summary>
            <param name="regex">The regular expression string to match the keys against.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Fluent.RiakFluentKeyFilter.Not(System.Action{RiakClient.Models.MapReduce.Fluent.RiakFluentKeyFilter})">
            <summary>
            Negates the result of key-filter operations.
            </summary>
            <param name="setup">
            An <see cref="T:System.Action`1"/> that accepts a <see cref="T:RiakClient.Models.MapReduce.Fluent.RiakFluentKeyFilter"/>,
            which the <see cref="M:RiakClient.Models.MapReduce.Fluent.RiakFluentKeyFilter.Not(System.Action{RiakClient.Models.MapReduce.Fluent.RiakFluentKeyFilter})"/> function will logically negate it's output. 
            </param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
            <remarks>
            Configure the phase with a lambda similar to:
            <code>.Not(kf =&gt; kf.EndsWith("foo"))</code>
            The above filter will return all input keys that don't end in "foo".
            </remarks>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Fluent.RiakFluentKeyFilter.NotEqual``1(``0)">
            <summary>
            Tests that the input is not equal to the argument.
            </summary>
            <typeparam name="T">The type of the <paramref name="arg"/> object.</typeparam>
            <param name="arg">The other object to compare the key against.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Fluent.RiakFluentKeyFilter.Or(System.Action{RiakClient.Models.MapReduce.Fluent.RiakFluentKeyFilter},System.Action{RiakClient.Models.MapReduce.Fluent.RiakFluentKeyFilter})">
            <summary>
            Joins two or more key-filter operations with a logical OR operation.
            </summary>
            <param name="left">The left <see cref="T:RiakClient.Models.MapReduce.Fluent.RiakFluentKeyFilter"/> operand to OR together.</param>
            <param name="right">The right <see cref="T:RiakClient.Models.MapReduce.Fluent.RiakFluentKeyFilter"/> operand to OR together.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Fluent.RiakFluentKeyFilter.SetMember``1(System.Collections.Generic.List{``0})">
            <summary>
            Tests that the input is contained in the set given as the arguments.
            </summary>
            <typeparam name="T">The type of the <paramref name="arg"/> object.</typeparam>
            <param name="arg">The set of members to test the keys for membership against.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Fluent.RiakFluentKeyFilter.SimilarTo``1(``0,System.Int32)">
            <summary>
            Tests that input is within the Levenshtein distance of the first argument given by the <paramref name="distance"/> argument.
            </summary>
            <typeparam name="T">The type of the <paramref name="arg"/> object.</typeparam>
            <param name="arg">The string to calculate the distance of the key against.</param>
            <param name="distance">The maximum Levenshtein distance to accept.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
            <remarks>See http://en.wikipedia.org/wiki/Levenshtein_distance for more information.</remarks>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Fluent.RiakFluentKeyFilter.StartsWith(System.String)">
            <summary>
            Tests that the input begins with the <paramref name="arg"/> string.
            </summary>
            <param name="arg">The string to compare against the beginning of the key.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Fluent.RiakFluentKeyFilter.StringToFloat">
            <summary>
            Turns a string into a floating point number.
            </summary>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Fluent.RiakFluentKeyFilter.StringToInt">
            <summary>
            Turns a string into an integer.
            </summary>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Fluent.RiakFluentKeyFilter.Tokenize(System.String,System.Int32)">
            <summary>
            Splits the input on the string given as the <paramref name="token"/> argument and returns the 
            nth token specified by the <paramref name="position"/> argument.
            </summary>
            <param name="token">The token to split the string with.</param>
            <param name="position">The n-th token to return from the filter.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Fluent.RiakFluentKeyFilter.ToLower">
            <summary>
            Changes all letters to lowercase.
            </summary>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Fluent.RiakFluentKeyFilter.ToUpper">
            <summary>
            Changes all letters to uppercase.
            </summary>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Fluent.RiakFluentKeyFilter.UrlDecode">
            <summary>
            URL-decodes the string.
            </summary>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="T:RiakClient.Models.MapReduce.Fluent.RiakFluentLinkPhase">
            <summary>
            A fluent builder class for defining input linkwalking phases.
            </summary>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Fluent.RiakFluentLinkPhase.Keep(System.Boolean)">
            <summary>
            The option to keep the results of this phase, or just pass them onto the next phase.
            </summary>
            <param name="keep"><b>true</b> to keep the phase results for the final result set, <b>false</b> to omit them. </param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Fluent.RiakFluentLinkPhase.Bucket(System.String)">
            <summary>
            Configure this Link phase to follow only links that go to a certain <paramref name="bucket"/>.
            </summary>
            <param name="bucket">The bucket to limit linkwalking to.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Fluent.RiakFluentLinkPhase.Tag(System.String)">
            <summary>
            Configure this Link phase to follow only links with a certain <paramref name="tag"/>.
            </summary>
            <param name="tag">The tag to limit linkwalking to.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Fluent.RiakFluentLinkPhase.FromRiakLink(RiakClient.Models.RiakLink)">
            <summary>
            Configure this Link phase to follow only links with buckets and tags that match those in <paramref name="link"/>.
            </summary>
            <param name="link">
            The <see cref="T:RiakClient.Models.RiakLink"/> containing a bucket and tag to limit linkwalking to.
            If the <see cref="T:RiakClient.Models.RiakLink"/>'s Bucket, Key, and Tag are all null or whitespace, then this phase will follow all links.
            </param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Fluent.RiakFluentLinkPhase.AllLinks">
            <summary>
            Configure this Link phase to follow all Links found on input objects.
            </summary>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="T:RiakClient.Models.MapReduce.Fluent.RiakFluentActionPhaseErlang">
            <summary>
            A fluent builder class for defining Erlang Map and Reduce phases.
            </summary>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Fluent.RiakFluentActionPhaseErlang.Keep(System.Boolean)">
            <summary>
            The option to keep the results of this phase, or just pass them onto the next phase.
            </summary>
            <param name="keep"><b>true</b> to keep the phase results for the final result set, <b>false</b> to omit them. </param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Fluent.RiakFluentActionPhaseErlang.Argument``1(``0)">
            <summary>
            The arguments to pass to the Erlang function that's defined in the <paramref name="ModFun"/> argument.
            </summary>
            <typeparam name="T">The type of the argument.</typeparam>
            <param name="argument">The Erlang ModFun argument.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Fluent.RiakFluentActionPhaseErlang.ModFun(System.String,System.String)">
            <summary>
            The Erlang function to execute for this phase.
            </summary>
            <param name="module">The module containing the <paramref name="function"/> to execute.</param>
            <param name="function">The function to execute for this mapreduce phase.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="T:RiakClient.Models.MapReduce.Fluent.RiakFluentActionPhaseJavascript">
            <summary>
            A fluent builder class for defining JavaScript Map and Reduce phases.
            </summary>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Fluent.RiakFluentActionPhaseJavascript.Keep(System.Boolean)">
            <summary>
            The option to keep the results of this phase, or just pass them onto the next phase.
            </summary>
            <param name="keep"><b>true</b> to keep the phase results for the final result set, <b>false</b> to omit them. </param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Fluent.RiakFluentActionPhaseJavascript.Argument``1(``0)">
            <summary>
            The arguments to pass to the Javascript function that's defined in the <see name="Source"/> parameter, 
            or the one listed in the <see name="Name"/> parameter.
            </summary>
            <typeparam name="T">The type of the argument.</typeparam>
            <param name="argument">The argument.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Fluent.RiakFluentActionPhaseJavascript.Name(System.String)">
            <summary>
            Specify a name of the known JavaScript function to execute for this phase.
            </summary>
            <param name="name">The name of the function to execute.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Fluent.RiakFluentActionPhaseJavascript.Source(System.String)">
            <summary>
            Specify the source code of the JavaScript function to dynamically load and execute for this phase.
            </summary>
            <param name="source">The source code of the function to execute.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Fluent.RiakFluentActionPhaseJavascript.BucketKey(System.String,System.String)">
            <summary>
            Specify a bucket and key where a stored JavaScript function can be dynamically loaded from Riak and executed for this phase.
            </summary>
            <param name="bucket">The bucket name of the JavaScript function's address.</param>
            <param name="key">The key of the JavaScript function's address.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="T:RiakClient.Models.MapReduce.Inputs.IRiakPhaseInput">
            <summary>
            Interface for mapreduce phase inputs.
            </summary>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.IRiakPhaseInput.WriteJson(Newtonsoft.Json.JsonWriter)">
            <summary>
            Serialize the phase input to JSON and write it using the <paramref name="writer"/>.
            </summary>
            <param name="writer">The writer to use.</param>
            <returns>The original JsonWriter, not modified but useful for call chaining.</returns>
        </member>
        <member name="T:RiakClient.Models.MapReduce.Inputs.RiakPhaseInput">
            <summary>
            Abstract implementation of <see cref="T:RiakClient.Models.MapReduce.Inputs.IRiakPhaseInput"/>. 
            </summary>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakPhaseInput.WriteJson(Newtonsoft.Json.JsonWriter)">
            <inheritdoc/>
        </member>
        <member name="P:RiakClient.Models.MapReduce.Inputs.RiakPhaseInput.Filters">
            <summary>
            A list of key filters represented as <see cref="T:RiakClient.Models.MapReduce.KeyFilters.IRiakKeyFilterToken"/>s.
            </summary>
        </member>
        <member name="T:RiakClient.Models.MapReduce.Inputs.RiakBinIndexEqualityInput">
            <summary>
            Represents a string secondary index match query mapreduce input.
            </summary>
        </member>
        <member name="T:RiakClient.Models.MapReduce.Inputs.RiakIndexInput">
            <summary>
            Represents an abstract secondary index query mapreduce input.
            </summary>
        </member>
        <member name="P:RiakClient.Models.MapReduce.Inputs.RiakIndexInput.IndexId">
            <summary>
            The <see cref="T:RiakClient.Models.RiakIndexId"/> of the index to query.
            </summary>
        </member>
        <member name="P:RiakClient.Models.MapReduce.Inputs.RiakIndexInput.Bucket">
            <summary>
            The bucket containing the index to query.
            </summary>
        </member>
        <member name="P:RiakClient.Models.MapReduce.Inputs.RiakIndexInput.Index">
            <summary>
            The name of the index to query.
            </summary>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakBinIndexEqualityInput.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.MapReduce.Inputs.RiakBinIndexEqualityInput"/> class.
            </summary>
            <param name="bucket">The bucket that contains the <paramref name="index"/> to query.</param>
            <param name="index">
            The index to query. The output of that query will be used as input for the mapreduce job.
            </param>
            <param name="key">The index key to query for.</param>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakBinIndexEqualityInput.#ctor(RiakClient.Models.RiakIndexId,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.MapReduce.Inputs.RiakBinIndexEqualityInput"/> class.
            </summary>
            <param name="indexId">
            The <see cref="T:RiakClient.Models.RiakIndexId"/> that specifies which index to query.
            The output of that query will be used as input for the mapreduce job.
            </param>
            <param name="key">The index key to query for.</param>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakBinIndexEqualityInput.WriteJson(Newtonsoft.Json.JsonWriter)">
            <inheritdoc/>
        </member>
        <member name="P:RiakClient.Models.MapReduce.Inputs.RiakBinIndexEqualityInput.Key">
            <summary>
            The index key to query for.
            </summary>
        </member>
        <member name="T:RiakClient.Models.MapReduce.Inputs.RiakBinIndexRangeInput">
            <summary>
            Represents a string secondary index range query mapreduce input.
            </summary>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakBinIndexRangeInput.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.MapReduce.Inputs.RiakBinIndexRangeInput"/> class.
            </summary>
            <param name="bucket">The bucket that contains the <paramref name="index"/> to query.</param>
            <param name="index">
            The index to query. The output of that query will be used as input for the mapreduce job.
            </param>
            <param name="start">The inclusive lower bound of the string range to query for.</param>
            <param name="end">The inclusive upper bound of the string range to query for.</param>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakBinIndexRangeInput.#ctor(RiakClient.Models.RiakIndexId,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.MapReduce.Inputs.RiakBinIndexRangeInput"/> class.
            </summary>
            <param name="indexId">
            The <see cref="T:RiakClient.Models.RiakIndexId"/> that specifies which index to query.
            The output of that query will be used as input for the mapreduce job.
            </param>
            <param name="start">The inclusive lower bound of the string range to query for.</param>
            <param name="end">The inclusive upper bound of the string range to query for.</param>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakBinIndexRangeInput.WriteJson(Newtonsoft.Json.JsonWriter)">
            <inheritdoc/>
        </member>
        <member name="P:RiakClient.Models.MapReduce.Inputs.RiakBinIndexRangeInput.Start">
            <summary>
            The inclusive lower bound of the string range to query for.
            </summary>
        </member>
        <member name="P:RiakClient.Models.MapReduce.Inputs.RiakBinIndexRangeInput.End">
            <summary>
            The inclusive upper bound of the string range to query for.
            </summary>
        </member>
        <member name="T:RiakClient.Models.MapReduce.Inputs.RiakBucketInput">
            <summary>
            Represents a bucket based mapreduce input.
            </summary>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakBucketInput.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.MapReduce.Inputs.RiakBucketInput"/> class.
            </summary>
            <param name="bucket">The bucket to use as input for the mapreduce job.</param>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakBucketInput.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.MapReduce.Inputs.RiakBucketInput"/> class.
            </summary>
            <param name="bucketType">The bucket type containing the <paramref name="bucket"/>.</param>
            <param name="bucket">The bucket to use as input for the mapreduce job.</param>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakBucketInput.WriteJson(Newtonsoft.Json.JsonWriter)">
            <inheritdoc/>
        </member>
        <member name="T:RiakClient.Models.MapReduce.Inputs.RiakBucketKeyKeyDataInput">
            <summary>
            Represents a Bucket/Key/KeyData collection based mapreduce input.
            </summary>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakBucketKeyKeyDataInput.Add(System.String,System.String,System.Object)">
            <summary>
            Adds a (bucket, key, keyData) tuple to the mapreduce inputs collection.
            </summary>
            <param name="bucket">The bucket of the object address to add to the inputs collection.</param>
            <param name="key">The key of the object address to add to the inputs collection.</param>
            <param name="keyData">
            The keyData that goes with the <paramref name="bucket"/> and 
            <paramref name="key"/> to add to the inputs collection. 
            </param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakBucketKeyKeyDataInput.Add(System.Tuple{System.String,System.String,System.Object}[])">
            <summary>
            Adds a collection of (bucket, key, keyData) tuples to the mapreduce inputs collection.
            </summary>
            <param name="pairs">
            The (bucket, key, keyData) tuple params array to add to the inputs collection.
            </param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakBucketKeyKeyDataInput.Add(System.Collections.Generic.IEnumerable{System.Tuple{System.String,System.String,System.Object}})">
            <summary>
            Adds a collection of (bucket, key, keyData) tuples to the mapreduce inputs collection.
            </summary>
            <param name="pairs">
            The (bucket, key, keyData) tuple collection to add to the inputs collection.
            </param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakBucketKeyKeyDataInput.Add(RiakClient.Models.RiakObjectId,System.Object)">
            <summary>
            Adds a (<see cref="T:RiakClient.Models.RiakObjectId"/>, keyData) pair to the mapreduce inputs collection.
            </summary>
            <param name="objectId">The <see cref="T:RiakClient.Models.RiakObjectId"/> to add to the inputs collection.</param>
            <param name="keyData">
            The keyData that goes with the <paramref name="objectId"/> to add to the inputs collection.
            </param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakBucketKeyKeyDataInput.Add(System.Tuple{RiakClient.Models.RiakObjectId,System.Object}[])">
            <summary>
            Adds a collection of (<see cref="T:RiakClient.Models.RiakObjectId"/>, keyData) tuples to the mapreduce inputs collection.
            </summary>
            <param name="pairs">
            The (<see cref="T:RiakClient.Models.RiakObjectId"/>, keyData) tuple params array to add to the inputs collection.
            </param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakBucketKeyKeyDataInput.Add(System.Collections.Generic.IEnumerable{System.Tuple{RiakClient.Models.RiakObjectId,System.Object}})">
            <summary>
            Adds a collection of (<see cref="T:RiakClient.Models.RiakObjectId"/>, keyData) tuples to the mapreduce inputs collection.
            </summary>
            <param name="pairs">
            The (<see cref="T:RiakClient.Models.RiakObjectId"/>, keyData) tuple collection to add to the inputs collection.
            </param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakBucketKeyKeyDataInput.WriteJson(Newtonsoft.Json.JsonWriter)">
            <inheritdoc/>
        </member>
        <member name="T:RiakClient.Models.MapReduce.Inputs.RiakBucketKeyInput">
            <summary>
            Represents a Bucket/Key collection based mapreduce input.
            </summary>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakBucketKeyInput.FromRiakObjectIds(System.Collections.Generic.IEnumerable{RiakClient.Models.RiakObjectId})">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.MapReduce.Inputs.RiakBucketKeyInput"/> class, 
            and adds the attached <paramref name="riakObjectIds"/> to the collection of inputs.
            </summary>
            <param name="riakObjectIds">The object ids to add to the input collection.</param>
            <returns>The newly created <see cref="T:RiakClient.Models.MapReduce.Inputs.RiakBucketKeyInput"/>.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakBucketKeyInput.Add(System.String,System.String)">
            <summary>
            Adds a (bucket, key) pair to the mapreduce inputs collection.
            </summary>
            <param name="bucket">The bucket of the object address to add to the input collection.</param>
            <param name="key">The key of the object address to add to the input collection.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakBucketKeyInput.Add(RiakClient.Models.RiakObjectId)">
            <summary>
            Adds a <see cref="T:RiakClient.Models.RiakObjectId"/> to the mapreduce inputs collection
            </summary>
            <param name="objectId">The <see cref="T:RiakClient.Models.RiakObjectId"/> to add to the input collection.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakBucketKeyInput.Add(RiakClient.Models.RiakObjectId[])">
            <summary>
            Adds a collection of <see cref="T:RiakClient.Models.RiakObjectId"/> to the mapreduce inputs collection.
            </summary>
            <param name="objectIds">The <see cref="T:RiakClient.Models.RiakObjectId"/> params array to add to the input collection.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakBucketKeyInput.Add(System.Collections.Generic.IEnumerable{RiakClient.Models.RiakObjectId})">
            <summary>
            Adds a collection of <see cref="T:RiakClient.Models.RiakObjectId"/> to the mapreduce inputs collection.
            </summary>
            <param name="objectIds">The <see cref="T:RiakClient.Models.RiakObjectId"/> collection to add to the input collection.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakBucketKeyInput.Add(System.Tuple{System.String,System.String}[])">
            <summary>
            Adds a collection of (bucket, key) pairs to the mapreduce inputs collection.
            </summary>
            <param name="pairs">The (bucket, key) pairs to add to the input collection.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakBucketKeyInput.Add(System.Collections.Generic.IEnumerable{System.Tuple{System.String,System.String}})">
            <summary>
            Adds a collection of (bucket, key) pairs to the mapreduce inputs collection.
            </summary>
            <param name="pairs">The (bucket, key) pairs to add to the input collection.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakBucketKeyInput.WriteJson(Newtonsoft.Json.JsonWriter)">
            <inheritdoc/>
        </member>
        <member name="T:RiakClient.Models.MapReduce.Inputs.RiakBucketSearchInput">
            <summary>
            Represents a legacy search based mapreduce input.
            </summary>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakBucketSearchInput.#ctor(RiakClient.Models.Search.RiakFluentSearch)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.MapReduce.Inputs.RiakBucketSearchInput"/> class.
            </summary>
            <param name="query">The <see cref="T:RiakClient.Models.Search.RiakFluentSearch"/> to run, whose results will be used as inputs for the mapreduce job. </param>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakBucketSearchInput.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.MapReduce.Inputs.RiakBucketSearchInput"/> class.
            </summary>
            <param name="bucket">The bucket to run the legacy search <paramref name="query"/> against.</param>
            <param name="query">The query to run, whose results will be used as inputs for the mapreduce job.</param>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakBucketSearchInput.Filter(RiakClient.Models.Search.RiakFluentSearch)">
            <summary>
            Filter the main query with a secondary <see cref="T:RiakClient.Models.Search.RiakFluentSearch"/> query.
            </summary>
            <param name="filter">The secondary filter query.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakBucketSearchInput.Filter(System.String)">
            <summary>
            Filter the main query with a secondary query.
            </summary>
            <param name="filter">The secondary filter query.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakBucketSearchInput.WriteJson(Newtonsoft.Json.JsonWriter)">
            <inheritdoc/>
        </member>
        <member name="T:RiakClient.Models.MapReduce.Inputs.RiakIndex">
            <summary>
            Helps create secondary index mapreduce input queries. 
            </summary>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakIndex.Match(System.String,System.String,System.String)">
            <summary>
            Create a mapreduce input from a string secondary index match query.
            </summary>
            <param name="bucket">The bucket containing the <paramref name="index"/> to query.</param>
            <param name="index">The index to query.</param>
            <param name="key">The index key to match for the query.</param>
            <returns>A newly initialized and configured <see cref="T:RiakClient.Models.MapReduce.Inputs.RiakIndexInput"/>.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakIndex.Range(System.String,System.String,System.String,System.String)">
            <summary>
            Create a mapreduce input from a string secondary index range query.
            </summary>
            <param name="bucket">The bucket containing the <paramref name="index"/> to query.</param>
            <param name="index">The index to query.</param>
            <param name="start">The lower bound of the key range for the query.</param>
            <param name="end">The upper bound of the key range for the query.</param>
            <returns>A newly initialized and configured <see cref="T:RiakClient.Models.MapReduce.Inputs.RiakIndexInput"/>.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakIndex.Match(System.String,System.String,System.Numerics.BigInteger)">
            <summary>
            Create a mapreduce input from an integer secondary index match query.
            </summary>
            <param name="bucket">The bucket containing the <paramref name="index"/> to query.</param>
            <param name="index">The index to query.</param>
            <param name="key">The index key to match for the query.</param>
            <returns>A newly initialized and configured <see cref="T:RiakClient.Models.MapReduce.Inputs.RiakIndexInput"/>.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakIndex.Range(System.String,System.String,System.Numerics.BigInteger,System.Numerics.BigInteger)">
            <summary>
            Create a mapreduce input from an integer secondary index range query.
            </summary>
            <param name="bucket">The bucket containing the <paramref name="index"/> to query.</param>
            <param name="index">The index to query.</param>
            <param name="start">The lower bound of the key range for the query.</param>
            <param name="end">The upper bound of the key range for the query.</param>
            <returns>A newly initialized and configured <see cref="T:RiakClient.Models.MapReduce.Inputs.RiakIndexInput"/>.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakIndex.Match(RiakClient.Models.RiakIndexId,System.String)">
            <summary>
            Create a mapreduce input from a string secondary index match query.
            </summary>
            <param name="indexId">The <see cref="T:RiakClient.Models.RiakIndexId"/> identifying the index to query.</param>
            <param name="key">The index key to match for the query.</param>
            <returns>A newly initialized and configured <see cref="T:RiakClient.Models.MapReduce.Inputs.RiakIndexInput"/>.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakIndex.Range(RiakClient.Models.RiakIndexId,System.String,System.String)">
            <summary>
            Create a mapreduce input from a string secondary index range query.
            </summary>
            <param name="indexId">The <see cref="T:RiakClient.Models.RiakIndexId"/> identifying the index to query.</param>
            <param name="start">The lower bound of the key range for the query.</param>
            <param name="end">The upper bound of the key range for the query.</param>
            <returns>A newly initialized and configured <see cref="T:RiakClient.Models.MapReduce.Inputs.RiakIndexInput"/>.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakIndex.Match(RiakClient.Models.RiakIndexId,System.Numerics.BigInteger)">
            <summary>
            Create a mapreduce input from an integer secondary index match query.
            </summary>
            <param name="indexId">The <see cref="T:RiakClient.Models.RiakIndexId"/> identifying the index to query.</param>
            <param name="key">The index key to match for the query.</param>
            <returns>A newly initialized and configured <see cref="T:RiakClient.Models.MapReduce.Inputs.RiakIndexInput"/>.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakIndex.Range(RiakClient.Models.RiakIndexId,System.Numerics.BigInteger,System.Numerics.BigInteger)">
            <summary>
            Create a mapreduce input from an integer secondary index range query.
            </summary>
            <param name="indexId">The <see cref="T:RiakClient.Models.RiakIndexId"/> identifying the index to query.</param>
            <param name="start">The lower bound of the key range for the query.</param>
            <param name="end">The upper bound of the key range for the query.</param>
            <returns>A newly initialized and configured <see cref="T:RiakClient.Models.MapReduce.Inputs.RiakIndexInput"/>.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakIndex.AllKeys(System.String)">
            <summary>
            Create a Map reduce input phase to retrieve all keys from a bucket
            </summary>
            <returns>The keys.</returns>
            <param name="bucket">Bucket Name</param>
            <remarks><para>This is a wrapper around a range query on the $key index
            in Riak. Working with secondary indexes requires that users enable
            the LevelDB backend and restart their cluster.</para>
            <para>This makes the assumption that all keys fall between the Unicode
            characters \u000000 and \u10FFFF (16-bit Unicode). This would typically
            be used in a stand alone Map phase to return all keys as a List&lt;RiakObjectId&gt;.
            See https://gist.github.com/peschkaj/4772825 for a working example.
            </para></remarks>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakIndex.AllKeys(System.String,System.String)">
            <summary>
            Create a Map reduce input phase to retrieve all keys from a bucket
            </summary>
            <returns>The keys.</returns>
            <param name="bucketType">Bucket Type.</param>
            <param name="bucket">Bucket Name.</param>
            <remarks><para>This is a wrapper around a range query on the $key index
            in Riak. Working with secondary indexes requires that users enable
            the LevelDB backend and restart their cluster.</para>
            <para>This makes the assumption that all keys fall between the Unicode
            characters \u000000 and \u10FFFF (16-bit Unicode). This would typically
            be used in a stand alone Map phase to return all keys as a List&lt;RiakObjectId&gt;.
            See https://gist.github.com/peschkaj/4772825 for a working example.
            </para></remarks>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakIndex.Keys(System.String,System.String,System.String)">
            <summary>
            Retrieve a list of keys between the start and end values
            </summary>
            <param name="bucket">Bucket Name.</param>
            <param name="start">Beginning of key range to be retrieved</param>
            <param name="end">End of key range being retrieved</param>
            <remarks>This is a wrapper around a range query on the $key index
            in Riak. Working with secondary indexes requires that users enable
            the LevelDB backend and restart their cluster.</remarks>
            <returns>List of keys between start and end values</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakIndex.Keys(System.String,System.String,System.String,System.String)">
            <summary>
            Retrieve a list of keys between the start and end values
            </summary>
            <param name="bucketType">Bucket Type.</param>
            <param name="bucket">Bucket Name.</param>
            <param name="start">Beginning of key range to be retrieved</param>
            <param name="end">End of key range being retrieved</param>
            <remarks>This is a wrapper around a range query on the $key index
            in Riak. Working with secondary indexes requires that users enable
            the LevelDB backend and restart their cluster.</remarks>
            <returns>List of keys between the start and end values</returns>
        </member>
        <member name="T:RiakClient.Models.MapReduce.Inputs.RiakIntIndexEqualityInput">
            <summary>
            Represents an integer secondary index match query mapreduce input.
            </summary>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakIntIndexEqualityInput.#ctor(System.String,System.String,System.Numerics.BigInteger)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.MapReduce.Inputs.RiakIntIndexEqualityInput"/> class.
            </summary>
            <param name="bucket">The bucket that contains the <paramref name="index"/> to query.</param>
            <param name="index">
            The index to query. The output of that query will be used as input for the mapreduce job.
            </param>
            <param name="key">The index key to query for.</param>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakIntIndexEqualityInput.#ctor(RiakClient.Models.RiakIndexId,System.Numerics.BigInteger)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.MapReduce.Inputs.RiakIntIndexEqualityInput"/> class.
            </summary>
            <param name="indexId">
            The <see cref="T:RiakClient.Models.RiakIndexId"/> that specifies which index to query.
            The output of that query will be used as input for the mapreduce job.
            </param>
            <param name="key">The index key to query for.</param>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakIntIndexEqualityInput.WriteJson(Newtonsoft.Json.JsonWriter)">
            <inheritdoc/>
        </member>
        <member name="P:RiakClient.Models.MapReduce.Inputs.RiakIntIndexEqualityInput.Key">
            <summary>
            The index key to query for.
            </summary>
        </member>
        <member name="T:RiakClient.Models.MapReduce.Inputs.RiakIntIndexRangeInput">
            <summary>
            Represents an integer secondary index range query mapreduce input.
            </summary>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakIntIndexRangeInput.#ctor(System.String,System.String,System.Numerics.BigInteger,System.Numerics.BigInteger)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.MapReduce.Inputs.RiakIntIndexRangeInput"/> class.
            </summary>
            <param name="bucket">The bucket that contains the <paramref name="index"/> to query.</param>
            <param name="index">
            The index to query. The output of that query will be used as input for the mapreduce job.
            </param>
            <param name="start">The inclusive lower bound of the integer range to query for.</param>
            <param name="end">The inclusive upper bound of the integer range to query for.</param>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakIntIndexRangeInput.#ctor(RiakClient.Models.RiakIndexId,System.Numerics.BigInteger,System.Numerics.BigInteger)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.MapReduce.Inputs.RiakIntIndexRangeInput"/> class.
            </summary>
            <param name="indexId">
            The <see cref="T:RiakClient.Models.RiakIndexId"/> that specifies which index to query.
            The output of that query will be used as input for the mapreduce job.
            </param>
            <param name="start">The inclusive lower bound of the integer range to query for.</param>
            <param name="end">The inclusive upper bound of the integer range to query for.</param>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakIntIndexRangeInput.WriteJson(Newtonsoft.Json.JsonWriter)">
            <inheritdoc/>
        </member>
        <member name="P:RiakClient.Models.MapReduce.Inputs.RiakIntIndexRangeInput.Start">
            <summary>
            The inclusive lower bound of the integer range to query for.
            </summary>
        </member>
        <member name="P:RiakClient.Models.MapReduce.Inputs.RiakIntIndexRangeInput.End">
            <summary>
            The inclusive upper bound of the integer range to query for.
            </summary>
        </member>
        <member name="T:RiakClient.Models.MapReduce.Inputs.RiakSearchInput">
            <summary>
            Represents a search based mapreduce input.
            </summary>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakSearchInput.#ctor(RiakClient.Models.Search.RiakFluentSearch)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.MapReduce.Inputs.RiakSearchInput"/> class.
            </summary>
            <param name="query">The <see cref="T:RiakClient.Models.Search.RiakFluentSearch"/> to run, whose results will be used as inputs for the mapreduce job. </param>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakSearchInput.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.MapReduce.Inputs.RiakSearchInput"/> class.
            </summary>
            <param name="index">The index to run the <paramref name="query"/> against.</param>
            <param name="query">The query to run, whose results will be used as inputs for the mapreduce job.</param>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakSearchInput.WriteJson(Newtonsoft.Json.JsonWriter)">
            <inheritdoc/>
        </member>
        <member name="T:RiakClient.Models.MapReduce.IRiakMapReduceResult">
            <summary>
            Represents an interface for mapreduce results.
            </summary>
        </member>
        <member name="P:RiakClient.Models.MapReduce.IRiakMapReduceResult.PhaseResults">
            <summary>
            The collection of <see cref="T:RiakClient.Models.MapReduce.RiakMapReduceResultPhase"/> results, 
            one for each phase where the results of the phase were kept.
            </summary>
        </member>
        <member name="T:RiakClient.Models.MapReduce.KeyFilters.And">
            <summary>
            Joins two or more key-filter operations with a logical AND operation.
            </summary>
        </member>
        <member name="T:RiakClient.Models.MapReduce.KeyFilters.IRiakKeyFilterToken">
            <summary>
            Represents the interface for Riak Key Filter tokens.
            </summary>
        </member>
        <member name="M:RiakClient.Models.MapReduce.KeyFilters.IRiakKeyFilterToken.ToJsonString">
            <summary>
            Converts the Key Filter Token to a Json-encoded string.
            </summary>
            <returns>A Json string.</returns>
        </member>
        <member name="F:RiakClient.Models.MapReduce.KeyFilters.And.keyFilterDefinition">
            <summary>
             Collection of key filter definitions.
            </summary>
        </member>
        <member name="M:RiakClient.Models.MapReduce.KeyFilters.And.#ctor(System.Collections.Generic.List{RiakClient.Models.MapReduce.KeyFilters.IRiakKeyFilterToken},System.Collections.Generic.List{RiakClient.Models.MapReduce.KeyFilters.IRiakKeyFilterToken})">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.MapReduce.KeyFilters.And"/> class.
            </summary>
            <param name="left">left hand token</param>
            <param name="right">right hand token</param>
        </member>
        <member name="M:RiakClient.Models.MapReduce.KeyFilters.And.ToString">
            <summary>
            Converts the current token to JSON
            </summary>
            <returns>JSON representation of the <see cref="T:RiakClient.Models.MapReduce.KeyFilters.And"/> class</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.KeyFilters.And.ToJsonString">
            <summary>
            Converts the current token to JSON
            </summary>
            <returns>JSON representation of the <see cref="T:RiakClient.Models.MapReduce.KeyFilters.And"/> class</returns>
        </member>
        <member name="P:RiakClient.Models.MapReduce.KeyFilters.And.FunctionName">
            <summary>
            Gets the function name
            </summary>
        </member>
        <member name="P:RiakClient.Models.MapReduce.KeyFilters.And.Left">
            <summary>
            Gets the left hand token
            </summary>
        </member>
        <member name="P:RiakClient.Models.MapReduce.KeyFilters.And.Right">
            <summary>
            Gets the right hand token
            </summary>
        </member>
        <member name="T:RiakClient.Models.MapReduce.KeyFilters.Between`1">
            <summary>
            Tests that the input is between the first two arguments. 
            If the third argument is given, it is whether to treat the range as inclusive. 
            If the third argument is omitted, the range is treated as inclusive.
            </summary>
            <typeparam name="T">Entity type</typeparam>
            <remarks>It is assumed that left and right supply their own JSON conversion.</remarks>
        </member>
        <member name="T:RiakClient.Models.MapReduce.KeyFilters.EndsWith">
            <summary>
            Tests that the input ends with the argument (a string).
            </summary>
        </member>
        <member name="T:RiakClient.Models.MapReduce.KeyFilters.Equal`1">
            <summary>
            Tests that the input is equal to the argument.
            </summary>
            <typeparam name="T">Type of key filter token</typeparam>
        </member>
        <member name="T:RiakClient.Models.MapReduce.KeyFilters.FloatToString">
            <summary>
            Turns a floating point number (previously extracted with string_to_float), into a string.
            </summary>
        </member>
        <member name="T:RiakClient.Models.MapReduce.KeyFilters.GreaterThan`1">
            <summary>
            Tests that the input is greater than the argument.
            </summary>
            <typeparam name="T">Key filter token type</typeparam>
        </member>
        <member name="T:RiakClient.Models.MapReduce.KeyFilters.GreaterThanOrEqualTo`1">
            <summary>
            Tests that the input is greater than or equal to the argument.
            </summary>
            <typeparam name="T">Type of key filter token</typeparam>
        </member>
        <member name="T:RiakClient.Models.MapReduce.KeyFilters.IntToString">
            <summary>
            Turns an integer (previously extracted with string_to_int), into a string.
            </summary>
        </member>
        <member name="T:RiakClient.Models.MapReduce.KeyFilters.LessThan`1">
            <summary>
            Tests that the input is less than the argument.
            </summary>
            <typeparam name="T">Type of key filter token</typeparam>
        </member>
        <member name="T:RiakClient.Models.MapReduce.KeyFilters.LessThanOrEqualTo`1">
            <summary>
            Tests that the input is less than or equal to the argument.
            </summary>
            <typeparam name="T">Type of key filter token</typeparam>
        </member>
        <member name="T:RiakClient.Models.MapReduce.KeyFilters.Matches">
            <summary>
            Tests that the input matches the regular expression given in the argument.
            </summary>
        </member>
        <member name="T:RiakClient.Models.MapReduce.KeyFilters.Not">
            <summary>
            Negates the result of key-filter operations.
            </summary>
        </member>
        <member name="T:RiakClient.Models.MapReduce.KeyFilters.NotEqual`1">
            <summary>
            Tests that the input is not equal to the argument.
            </summary>
            <typeparam name="T">Type of key filter token</typeparam>
        </member>
        <member name="T:RiakClient.Models.MapReduce.KeyFilters.Or">
            <summary>
            Joins two or more key-filter operations with a logical OR operation.
            </summary>
        </member>
        <member name="T:RiakClient.Models.MapReduce.KeyFilters.SetMember`1">
            <summary>
            Tests that the input is contained in the set given as the arguments.
            </summary>
            <typeparam name="T">Type of key filter token</typeparam>
        </member>
        <member name="T:RiakClient.Models.MapReduce.KeyFilters.SimilarTo`1">
            <summary>
            Tests that input is within the Levenshtein distance of the first argument given by the second argument.
            </summary>
            <typeparam name="T">Type of key filter token</typeparam>
        </member>
        <member name="T:RiakClient.Models.MapReduce.KeyFilters.StartsWith">
            <summary>
            Tests that the input begins with the argument (a string).
            </summary>
        </member>
        <member name="T:RiakClient.Models.MapReduce.KeyFilters.StringToFloat">
            <summary>
            Turns a string into a floating point number.
            </summary>
        </member>
        <member name="T:RiakClient.Models.MapReduce.KeyFilters.StringToInt">
            <summary>
            Turns a string into an integer.
            </summary>
        </member>
        <member name="T:RiakClient.Models.MapReduce.KeyFilters.Tokenize">
            <summary>
            Splits the input on the string given as the first argument and returns the nth
            token specified by the second argument.
            </summary>
        </member>
        <member name="T:RiakClient.Models.MapReduce.KeyFilters.ToLower">
            <summary>
            Changes all letters to lowercase.
            </summary>
        </member>
        <member name="T:RiakClient.Models.MapReduce.KeyFilters.ToUpper">
            <summary>
            Changes all letters to uppercase.
            </summary>
        </member>
        <member name="T:RiakClient.Models.MapReduce.KeyFilters.UrlDecode">
            <summary>
            URL-decodes the string.
            </summary>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Languages.IRiakPhaseLanguage.WriteJson(Newtonsoft.Json.JsonWriter)">
            <summary>
            Serialize the phase to JSON and write it using the <paramref name="writer"/>.
            </summary>
            <param name="writer">The writer to use.</param>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Languages.RiakPhaseLanguageErlang.ModFun(System.String,System.String)">
            <summary>
            The Erlang Module:Function to execute for this phase.
            </summary>
            <param name="module">The module containing the <paramref name="function"/> to execute.</param>
            <param name="function">The function to execute for this phase.</param>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Languages.RiakPhaseLanguageErlang.WriteJson(Newtonsoft.Json.JsonWriter)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Languages.RiakPhaseLanguageJavascript.Name(System.String)">
            <summary>
            Specify a name of the known JavaScript function to execute for this phase.
            </summary>
            <param name="name">The name of the function to execute.</param>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Languages.RiakPhaseLanguageJavascript.Source(System.String)">
            <summary>
            Specify the source code of the JavaScript function to dynamically load and execute for this phase.
            </summary>
            <param name="source">The source code of the function to execute.</param>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Languages.RiakPhaseLanguageJavascript.BucketKey(System.String,System.String)">
            <summary>
            Specify a bucket and key where a stored JavaScript function can be dynamically loaded from Riak and executed for this phase
            </summary>
            <param name="bucket">The bucket name of the JavaScript function's address.</param>
            <param name="key">The key of the JavaScript function's address.</param>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Languages.RiakPhaseLanguageJavascript.WriteJson(Newtonsoft.Json.JsonWriter)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Phases.RiakPhase.ToString">
            <summary>
            Returns a JSON string that represents the RiakPhase.
            </summary>
            <returns>A JSON string representation of the phase.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Phases.RiakPhase.Keep(System.Boolean)">
            <summary>
            The option to keep the results of this phase, or just pass them onto the next phase.
            </summary>
            <param name="keep"><b>true</b> to keep the phase results for the final result set, <b>false</b> to omit them. </param>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Phases.RiakPhase.ToJsonString">
            <summary>
            Serialize this phase to JSON.
            </summary>
            <returns>The phase as a JSON string.</returns>
        </member>
        <member name="P:RiakClient.Models.MapReduce.Phases.RiakPhase.PhaseType">
            <summary>
            Property to hold this phase's type string.
            </summary>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Phases.RiakActionPhase`1.Argument``1(``0)">
            <summary>
            The optional arguments to pass onto the phase function.
            </summary>
            <typeparam name="T">The type of the <paramref name="argument"/> parameter.</typeparam>
            <param name="argument">The argument to pass on.</param>
        </member>
        <member name="P:RiakClient.Models.MapReduce.Phases.RiakActionPhase`1.Language">
            <summary>
            The language type of the phase.
            (<see cref="T:RiakClient.Models.MapReduce.Languages.RiakPhaseLanguageErlang"/> or <see cref="T:RiakClient.Models.MapReduce.Languages.RiakPhaseLanguageJavascript"/>).
            </summary>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Phases.RiakLinkPhase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.MapReduce.Phases.RiakLinkPhase"/> class.
            </summary>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Phases.RiakLinkPhase.#ctor(RiakClient.Models.RiakLink)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.MapReduce.Phases.RiakLinkPhase"/> class.
            </summary>
            <param name="riakLink">
            The <see cref="T:RiakClient.Models.RiakLink"/> containing a bucket and tag to limit linkwalking to.
            If the <see cref="T:RiakClient.Models.RiakLink"/>'s Bucket, Key, and Tag are all null or whitespace, then this phase will follow all links.
            </param>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Phases.RiakLinkPhase.FromRiakLink(RiakClient.Models.RiakLink)">
            <summary>
            Configure this Link phase to follow only links with buckets and tags that match those in <paramref name="link"/>.
            </summary>
            <param name="riakLink">
            The <see cref="T:RiakClient.Models.RiakLink"/> containing a bucket and tag to limit linkwalking to.
            If the <see cref="T:RiakClient.Models.RiakLink"/>'s Bucket, Key, and Tag are all null or whitespace, then this phase will follow all links.
            </param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Phases.RiakLinkPhase.Bucket(System.String)">
            <summary>
            Configure this Link phase to follow only links that go to a certain <paramref name="bucket"/>.
            </summary>
            <param name="bucket">The bucket to limit linkwalking to.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Phases.RiakLinkPhase.Tag(System.String)">
            <summary>
            Configure this Link phase to follow only links with a certain <paramref name="tag"/>.
            </summary>
            <param name="tag">The tag to limit linkwalking to.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Phases.RiakLinkPhase.AllLinks">
            <summary>
            Configure this Link phase to follow all Links found on input objects.
            </summary>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="P:RiakClient.Models.MapReduce.Phases.RiakLinkPhase.PhaseType">
            <inheritdoc/>
        </member>
        <member name="P:RiakClient.Models.MapReduce.Phases.RiakMapPhase`1.PhaseType">
            <inheritdoc/>
        </member>
        <member name="T:RiakClient.Models.MapReduce.RiakMapReduceQuery">
            <summary>
            A fluent builder class for Riak MapReduce queries.
            </summary>
        </member>
        <member name="M:RiakClient.Models.MapReduce.RiakMapReduceQuery.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.MapReduce.RiakMapReduceQuery"/> class.
            </summary>
            <remarks>
            This overload defaults the content-type to "application/json", with the default timeout.
            </remarks>
        </member>
        <member name="M:RiakClient.Models.MapReduce.RiakMapReduceQuery.#ctor(System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.MapReduce.RiakMapReduceQuery"/> class.
            </summary>
            <param name="timeout">The timeout period for the query, in milliseconds.</param>
            <remarks>
            This overload defaults the content-type to "application/json".
            </remarks>
        </member>
        <member name="M:RiakClient.Models.MapReduce.RiakMapReduceQuery.#ctor(System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.MapReduce.RiakMapReduceQuery"/> class.
            </summary>
            <param name="contentType">The query's return content-type.</param>
            <param name="timeout">The timeout period for the query, in milliseconds.</param>
            <exception cref="T:System.ArgumentException">The value of 'contentType' cannot be null, empty, or whitespace.</exception>
        </member>
        <member name="M:RiakClient.Models.MapReduce.RiakMapReduceQuery.Inputs(System.String)">
            <summary>
            Add a bucket to the list of inputs.
            </summary>
            <param name="bucket">The Bucket to add to the list of inputs.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.RiakMapReduceQuery.Inputs(System.String,System.String)">
            <summary>
            Add a bucket to the list of inputs.
            </summary>
            <param name="bucketType">The bucket type containing the bucket to use as input.</param>
            <param name="bucket">The BucketType/Bucket to add to the list of inputs.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.RiakMapReduceQuery.Inputs(RiakClient.Models.MapReduce.Inputs.RiakBucketSearchInput)">
            <summary>
            Add a bucket-based legacy search input to the list of inputs.
            </summary>
            <param name="riakBucketSearchInput">The <see cref="T:RiakClient.Models.MapReduce.Inputs.RiakBucketSearchInput"/> to add to the list of inputs.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.RiakMapReduceQuery.Inputs(RiakClient.Models.MapReduce.Inputs.RiakSearchInput)">
            <summary>
            Add an index-based search input to the list of inputs.
            </summary>
            <param name="riakSearchInput">The <see cref="T:RiakClient.Models.MapReduce.Inputs.RiakSearchInput"/> to add to the list of inputs.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
            <remarks>Riak 2.0+ only.</remarks>
        </member>
        <member name="M:RiakClient.Models.MapReduce.RiakMapReduceQuery.Inputs(RiakClient.Models.MapReduce.Inputs.RiakBucketKeyInput)">
            <summary>
            Add a collection of <see cref="T:RiakClient.Models.RiakObjectId"/>'s to the list of inputs.
            </summary>
            <param name="riakBucketKeyInputs">The <see cref="T:RiakClient.Models.MapReduce.Inputs.RiakBucketKeyInput"/> to add to the list of inputs.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.RiakMapReduceQuery.Inputs(RiakClient.Models.MapReduce.Inputs.RiakBucketKeyKeyDataInput)">
            <summary>
            Add a collection of <see cref="T:RiakClient.Models.RiakObjectId"/> / KeyData sets to the list of inputs.
            </summary>
            <param name="riakBucketKeyKeyDataInputs">The <see cref="T:RiakClient.Models.MapReduce.Inputs.RiakBucketKeyKeyDataInput"/> to add to the list of inputs.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.RiakMapReduceQuery.Inputs(RiakClient.Models.MapReduce.Inputs.RiakModuleFunctionArgInput)">
            <summary>
            Add an Erlang Module/Function/Arg combo to the list of inputs.
            </summary>
            <param name="riakModFunArgsInput">The <see cref="T:RiakClient.Models.MapReduce.Inputs.RiakModuleFunctionArgInput"/> to add to the list of inputs.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.RiakMapReduceQuery.Inputs(RiakClient.Models.MapReduce.Inputs.RiakIndexInput)">
            <summary>
            Add a secondary index query to the list of inputs.
            </summary>
            <param name="riakIndexPhaseInput">The <see cref="T:RiakClient.Models.MapReduce.Inputs.RiakIndexInput"/> to add to the list of inputs.</param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.RiakMapReduceQuery.MapErlang(System.Action{RiakClient.Models.MapReduce.Fluent.RiakFluentActionPhaseErlang})">
            <summary>
            Add an Erlang map phase to the list of phases.
            </summary>
            <param name="setup">
            An <see cref="T:System.Action`1"/> that accepts a <see cref="T:RiakClient.Models.MapReduce.Fluent.RiakFluentActionPhaseJavascript"/>,
            and configures the map phase with it.
            </param>        
            <returns>A reference to this updated instance, for fluent chaining.</returns>
            <remarks>
            Configure the phase with a lambda similar to:
            <code>.MapErlang(m =&gt; m.ModFun("riak_kv_mapreduce", "map_object_value"))</code>
            The above code will run the "riak_kv_mapreduce:map_object_value" Erlang function on each input in the phase.. 
            </remarks>
        </member>
        <member name="M:RiakClient.Models.MapReduce.RiakMapReduceQuery.MapJs(System.Action{RiakClient.Models.MapReduce.Fluent.RiakFluentActionPhaseJavascript})">
            <summary>
            Add a JavaScript map phase to the list of phases.
            </summary>
            <param name="setup">
            An <see cref="T:System.Action`1"/> that accepts a <see cref="T:RiakClient.Models.MapReduce.Fluent.RiakFluentActionPhaseJavascript"/>,
            and configures the map phase with it.
            </param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
            <remarks>
            Configure the phase with a lambda similar to:
            <code>.MapJs(m =&gt; m.Source(@"function(o) {return [ 1 ];}"))</code>
            The above code will run a custom JavaScript function that returns "[1]" for each input in the phase.
            </remarks>
        </member>
        <member name="M:RiakClient.Models.MapReduce.RiakMapReduceQuery.ReduceErlang(System.Action{RiakClient.Models.MapReduce.Fluent.RiakFluentActionPhaseErlang})">
            <summary>
            Add an Erlang reduce phase to the list of phases.
            </summary>
            <param name="setup">
            An <see cref="T:System.Action`1"/> that accepts a <see cref="T:RiakClient.Models.MapReduce.Fluent.RiakFluentActionPhaseErlang"/>,
            and configures the reduce phase with it.
            </param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
            <remarks>
            Configure the phase with a lambda similar to:
            <code>.ReduceErlang(r =&gt; r.ModFun("riak_kv_mapreduce", "reduce_set_union")</code>
            The code above will run the "riak_kv_mapreduce:reduce_set_union" Erlang function on the phase inputs.
            </remarks>
        </member>
        <member name="M:RiakClient.Models.MapReduce.RiakMapReduceQuery.ReduceJs(System.Action{RiakClient.Models.MapReduce.Fluent.RiakFluentActionPhaseJavascript})">
            <summary>
            Add a JavaScript reduce phase to the list of phases.
            </summary>
            <param name="setup">
            An <see cref="T:System.Action`1"/> that accepts a <see cref="T:RiakClient.Models.MapReduce.Fluent.RiakFluentActionPhaseJavascript"/>,
            and configures the reduce phase with it.
            </param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
            <remarks>
            Configure the phase with a lambda similar to:
            <code>.ReduceJs(r =&gt; r.Name(@"Riak.reduceSum");</code>
            The code above will run the built-in JavaScript function "Riak.reduceSum" on the phase inputs.
            </remarks>
        </member>
        <member name="M:RiakClient.Models.MapReduce.RiakMapReduceQuery.Link(System.Action{RiakClient.Models.MapReduce.Fluent.RiakFluentLinkPhase})">
            <summary>
            Add a link phase to the list of phases.
            </summary>
            <param name="setup">
            An <see cref="T:System.Action`1"/> that accepts a <see cref="T:RiakClient.Models.MapReduce.Fluent.RiakFluentLinkPhase"/>,
            and configures the link phase with it.
            </param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
            <remarks>
            Configure the phase with a lambda similar to:
            <code>.Link(l =&gt; l.Tag("friends");</code>
            The code above will walk links with a tag of "friends".
            </remarks>
        </member>
        <member name="M:RiakClient.Models.MapReduce.RiakMapReduceQuery.Filter(System.Action{RiakClient.Models.MapReduce.Fluent.RiakFluentKeyFilter})">
            <summary>
            Add a key filter input to the inputs.
            </summary>
            <param name="setup">
            An <see cref="T:System.Action`1"/> that accepts a <see cref="T:RiakClient.Models.MapReduce.Fluent.RiakFluentKeyFilter"/>,
            and configures the input filter with it.
            </param>
            <returns>A reference to this updated instance, for fluent chaining.</returns>
            <remarks>
            Configure the phase with a lambda similar to:
            <code>new RiakMapReduceQuery().Inputs("Bucketname").Filter(f =&gt; f.StartsWith("time"));</code>
            The example above will filter out all keys that don't start with the string "time".
            Please see the <see cref="T:RiakClient.Models.MapReduce.Fluent.RiakFluentKeyFilter"/> for
            more built-in filters.
            </remarks>
        </member>
        <member name="M:RiakClient.Models.MapReduce.RiakMapReduceQuery.Compile">
            <summary>
            Compile the mapreduce query.
            </summary>
        </member>
        <member name="P:RiakClient.Models.MapReduce.RiakMapReduceQuery.ContentType">
            <summary>
            The content-type of the mapreduce query.
            </summary>
        </member>
        <member name="P:RiakClient.Models.MapReduce.RiakMapReduceQuery.Timeout">
            <summary>
            The optional timeout for the mapreduce query.
            </summary>
        </member>
        <member name="T:RiakClient.Models.MapReduce.RiakMapReduceResultPhase">
            <summary>
            The collection of results for a single mapreduce phase.
            </summary>
        </member>
        <member name="M:RiakClient.Models.MapReduce.RiakMapReduceResultPhase.GetObjects``1">
            <summary>
            Deserialize a List of <typeparam name="T">T</typeparam> from the phase results
            </summary>
            <typeparam name="T">Entity type</typeparam>
            <returns>IList<typeparam name="T">T</typeparam></returns>
        </member>
        <member name="M:RiakClient.Models.MapReduce.RiakMapReduceResultPhase.GetObjectIds">
            <summary>
            Deserialize a List of <see cref="T:RiakClient.Models.RiakObjectId"/> from $key query
            </summary>
            <returns>IList of <see cref="T:RiakClient.Models.RiakObjectId"/></returns>
            <remarks>This is designed specifically to deal with the data structure that is returned from
            Riak when querying the $key index. This should be used when querying $key directly or through
            one of the convenience methods.</remarks>
        </member>
        <member name="P:RiakClient.Models.MapReduce.RiakMapReduceResultPhase.Success">
            <summary>
            Indicates whether the phase was a success or not.
            <b>true</b> if the phase was a success, <b>false</b>, otherwise.
            </summary>
        </member>
        <member name="P:RiakClient.Models.MapReduce.RiakMapReduceResultPhase.Phase">
            <summary>
            The phase number.
            </summary>
        </member>
        <member name="P:RiakClient.Models.MapReduce.RiakMapReduceResultPhase.Values">
            <summary>
            The collection of raw result values for this phase.
            </summary>
        </member>
        <member name="P:RiakClient.Models.MapReduce.Phases.RiakReducePhase`1.PhaseType">
            <inheritdoc/>
        </member>
        <member name="T:RiakClient.Models.MapReduce.RiakStreamedMapReduceResult">
            <summary>
            Represents a Riak streaming mapreduce result.
            </summary>
        </member>
        <member name="P:RiakClient.Models.MapReduce.RiakStreamedMapReduceResult.PhaseResults">
            <inheritdoc/>
        </member>
        <member name="T:RiakClient.Models.RiakCounterGetOptions">
            <summary>
            A collection of optional settings for fetching a 1.4-style counter from Riak.
            </summary>
        </member>
        <member name="M:RiakClient.Models.RiakCounterGetOptions.SetBasicQuorum(System.Boolean)">
            <summary>
            A fluent setter for the <see cref="P:RiakClient.Models.RiakCounterGetOptions.BasicQuorum"/> property.
            </summary>
            <param name="value">The value to set the property to.</param>
            <returns>A reference to the current properties object.</returns>
            <remarks>
            This property is not typically modified.
            See http://docs.basho.com/riak/latest/dev/advanced/replication-properties/#Early-Failure-Return-with-code-basic_quorum-code-
            for more information.
            </remarks>
        </member>
        <member name="M:RiakClient.Models.RiakCounterGetOptions.SetNotFoundOk(System.Boolean)">
            <summary>
            A fluent setter for the <see cref="P:RiakClient.Models.RiakCounterGetOptions.NotFoundOk"/> property.
            </summary>
            <param name="value">The value to set <see cref="P:RiakClient.Models.RiakCounterGetOptions.NotFoundOk"/> to.</param>
            <returns>A reference to the current properties object.</returns>
            <remarks>
            This property is not typically modified.
            See http://docs.basho.com/riak/latest/dev/advanced/replication-properties/#The-Implications-of-code-notfound_ok-code-
            for more information.
            </remarks>
        </member>
        <member name="P:RiakClient.Models.RiakCounterGetOptions.BasicQuorum">
            <summary>
            Gets or sets basic quorum semantics.
            When set to true, Riak will return early in some failure cases.
            (eg. when r=1 and you get 2 errors and a success basic_quorum=true would return an error).
            Can be used in conjunction when <see cref="P:RiakClient.Models.RiakCounterGetOptions.NotFoundOk"/>=<b>false</b> to speed up the case a counter 
            does not exist, thereby only reading a "quorum" of not-founds instead of "N" not-founds.
            </summary>
            <value>
            Whether basic quorum semantics will be used.
            </value>
            <remarks>
            This property is not typically modified.
            See http://docs.basho.com/riak/latest/dev/advanced/replication-properties/#Early-Failure-Return-with-code-basic_quorum-code-
            for more information.
            </remarks>
        </member>
        <member name="P:RiakClient.Models.RiakCounterGetOptions.NotFoundOk">
            <summary>
            Gets or sets notfound_ok semantics.
            When set to true, an object not being found on a Riak node will count towards the R count.
            </summary>
            <value>
            The notfound_ok value.
            </value>
            <remarks>
            This property is not typically modified.
            See http://docs.basho.com/riak/latest/dev/advanced/replication-properties/#The-Implications-of-code-notfound_ok-code-
            for more information.
            </remarks>
        </member>
        <member name="T:RiakClient.Models.RiakCounterResult">
            <summary>
            Represents the data returned from a counter operation.
            </summary>
        </member>
        <member name="M:RiakClient.Models.RiakCounterResult.#ctor(RiakClient.RiakResult{RiakClient.Models.RiakObject})">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.RiakCounterResult"/> class.
            </summary>
            <param name="result">The <see cref="T:RiakClient.RiakResult`1"/> to populate the new <see cref="T:RiakClient.Models.RiakCounterResult"/> from.</param>
        </member>
        <member name="M:RiakClient.Models.RiakCounterResult.#ctor(RiakClient.RiakResult{RiakClient.Models.RiakObject},System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.RiakCounterResult"/> class.
            </summary>
            <param name="result">The <see cref="T:RiakClient.RiakResult`1"/> to populate the new <see cref="T:RiakClient.Models.RiakCounterResult"/> from.</param>
            <param name="value">The current value of the counter.</param>
        </member>
        <member name="P:RiakClient.Models.RiakCounterResult.Result">
            <summary>
            The <see cref="T:RiakClient.RiakResult`1"/> of the counter operation.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakCounterResult.Value">
            <summary>
            The value of the counter (if the operation returned it).
            </summary>
        </member>
        <member name="T:RiakClient.Models.RiakDtFetchOptions">
            <summary>
            Represents a collection of optional properties when fetching Riak Data Types. 
            Each property changes the semantics of the operation slightly. 
            </summary>
        </member>
        <member name="M:RiakClient.Models.RiakDtFetchOptions.SetBasicQuorum(System.Boolean)">
            <summary>
            Fluent setter for the <see cref="P:RiakClient.Models.RiakDtFetchOptions.BasicQuorum"/> property.
            When set to true, Riak will return early in some failure cases.
            (eg. when r=1 and you get 2 errors and a success basic_quorum=true would return an error).
            Can be used in conjunction when <see cref="P:RiakClient.Models.RiakDtFetchOptions.NotFoundOk"/>=<b>false</b> to speed up the case an object 
            does not exist, thereby only reading a "quorum" of not-founds instead of "N" not-founds.
            </summary>
            <param name="value">The value to set the property to.</param>
            <returns>A reference to the current properties object.</returns>
            <remarks>
            This property is not typically modified.
            </remarks>
        </member>
        <member name="M:RiakClient.Models.RiakDtFetchOptions.SetNotFoundOk(System.Boolean)">
            <summary>
            Fluent setter for the <see cref="P:RiakClient.Models.RiakDtFetchOptions.NotFoundOk"/> property.
            Should not found responses from Riak be treated as an OK result for a find operation. 
            </summary>
            <param name="value">The value to set the property to.</param>
            <returns>A reference to the current properties object.</returns>
            <remarks>
            This property is not typically modified.
            </remarks>
        </member>
        <member name="M:RiakClient.Models.RiakDtFetchOptions.SetSloppyQuorum(System.Boolean)">
            <summary>
            Fluent setter for the <see cref="P:RiakClient.Models.RiakDtFetchOptions.SloppyQuorum"/> property.
            Whether a sloppy quorum should be used.
            </summary>
            <param name="value">The value to set the property to.</param>
            <returns>A reference to the current properties object.</returns>
            <remarks>
            This property is not typically modified.
            </remarks>
        </member>
        <member name="M:RiakClient.Models.RiakDtFetchOptions.SetNVal(RiakClient.NVal)">
            <summary>
            Fluent setter for the <see cref="P:RiakClient.Models.RiakDtFetchOptions.NVal"/> property.
            The number of replicas to create when storing data.
            </summary>
            <param name="value">The value to set the property to.</param>
            <returns>A reference to the current properties object.</returns>
            <remarks>
            This property is not typically modified.
            </remarks>
        </member>
        <member name="M:RiakClient.Models.RiakDtFetchOptions.SetIncludeContext(System.Boolean)">
            <summary>
            Fluent setter for the <see cref="P:RiakClient.Models.RiakDtFetchOptions.IncludeContext"/> property.
            Determines whether or not the context will be returned. 
            </summary>
            <param name="value">The value to set the property to.</param>
            <returns>A reference to the current properties object.</returns>
            <remarks>
            This property is not typically modified.
            </remarks>
        </member>
        <member name="P:RiakClient.Models.RiakDtFetchOptions.BasicQuorum">
            <summary>
            Basic Quorum semantics - whether to return early in some failure cases (eg. when r=1 and you get 2 errors and a success basic_quorum=true would return an error)
            </summary>
            <value>
            Whether basic quorum semantics will be used.
            </value>
        </member>
        <member name="P:RiakClient.Models.RiakDtFetchOptions.NotFoundOk">
            <summary>
            Should not found responses from Riak be treated as an OK result for a find operation. 
            </summary>
            <value>
            The notfound_ok value.
            </value>
        </member>
        <member name="P:RiakClient.Models.RiakDtFetchOptions.SloppyQuorum">
            <summary>
            Whether a sloppy quorum should be used.
            </summary>
            <remarks><para>Sloppy quorum defers to the first N healthy nodes from the pref list,
            which may not always be the first N nodes encountered in the consistent hash ring.
            In effect - sloppy quorum allows us to trust hand off nodes in the event of a network
            partition or other similarly amusing event.</para>
            <para>Specifying PR will override Sloppy Quorum settings.</para>
            <para>Refer to http://lists.basho.com/pipermail/riak-users_lists.basho.com/2012-January/007157.html for additional details.</para></remarks>
        </member>
        <member name="P:RiakClient.Models.RiakDtFetchOptions.NVal">
            <summary>
            The number of replicas to read when fetching data.
            </summary>
            <remarks>
            Riak will default this property to an <see cref="P:RiakClient.Models.RiakDtFetchOptions.NVal"/> equivalent of <b>3</b>.
            See http://docs.basho.com/riak/latest/theory/concepts/Replication/ for more information.
            </remarks>
        </member>
        <member name="P:RiakClient.Models.RiakDtFetchOptions.IncludeContext">
            <summary>
            Determines whether or not the context will be returned. 
            For read-only requests or context-free operations, you can set this to false to reduce the size of the response payload.
            </summary>
        </member>
        <member name="T:RiakClient.Models.RiakDt.IRiakDtType`1">
            <summary>
            Generic interface for a Riak data type.
            </summary>
            <typeparam name="T">The type of the data type.</typeparam>
            <remarks>Not used.</remarks>
        </member>
        <member name="M:RiakClient.Models.RiakDt.IRiakDtType`1.ToMapEntry(System.String)">
            <summary>
            Convert this object to a new <see cref="T:RiakClient.Messages.MapEntry"/>.
            </summary>
            <param name="fieldName">The field name for the map entry.</param>
            <returns>A newly initialized and configured <see cref="T:RiakClient.Messages.MapEntry"/>.</returns>
        </member>
        <member name="P:RiakClient.Models.RiakDt.IRiakDtType`1.Bucket">
            <summary>
            The bucket name of the data type object.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakDt.IRiakDtType`1.BucketType">
            <summary>
            The bucket type of the data type object.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakDt.IRiakDtType`1.Key">
            <summary>
            The key of the data type object.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakDt.IRiakDtType`1.Operations">
            <summary>
            A collection of operations for the data type object.
            </summary>
        </member>
        <member name="T:RiakClient.Models.RiakDt.RiakDtMapEntry">
            <summary>
            Represents a Riak Map DataType Entry
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakDt.RiakDtMapEntry.Field">
            <summary>
            The <see cref="T:RiakClient.Models.RiakDt.RiakDtMapField"/> field summary. 
            Contains the field name and type.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakDt.RiakDtMapEntry.Counter">
            <summary>
            Contains the counter value if this field is a counter type.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakDt.RiakDtMapEntry.SetValue">
            <summary>
            Contains the set value if this field is a set type.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakDt.RiakDtMapEntry.RegisterValue">
            <summary>
            Contains the register value if this field is a register type.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakDt.RiakDtMapEntry.FlagValue">
            <summary>
            Contains the flag value if this field is a flag type.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakDt.RiakDtMapEntry.MapValue">
            <summary>
            Contains the sub-map value if this field is a map type.
            </summary>
        </member>
        <member name="T:RiakClient.Models.RiakDt.RiakDtMapField">
            <summary>
            Represents a Map field in a Riak Map data type.
            </summary>
        </member>
        <member name="M:RiakClient.Models.RiakDt.RiakDtMapField.ToMapField">
            <summary>
            Convert this object to a <see cref="T:RiakClient.Messages.MapField"/>.
            </summary>
            <returns>A newly instantiated and configured <see cref="T:RiakClient.Messages.MapField"/>.</returns>
        </member>
        <member name="P:RiakClient.Models.RiakDt.RiakDtMapField.Name">
            <summary>
            The name of the Map field.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakDt.RiakDtMapField.Type">
            <summary>
            The field type of the Map field.
            </summary>
        </member>
        <member name="T:RiakClient.Models.RiakDt.RiakDtMapField.RiakDtMapFieldType">
            <summary>
            An enumeration of different map field types.
            </summary>
        </member>
        <member name="F:RiakClient.Models.RiakDt.RiakDtMapField.RiakDtMapFieldType.Counter">
            <summary>
            The Counter field type.
            </summary>
        </member>
        <member name="F:RiakClient.Models.RiakDt.RiakDtMapField.RiakDtMapFieldType.Set">
            <summary>
            The Set field type.
            </summary>
        </member>
        <member name="F:RiakClient.Models.RiakDt.RiakDtMapField.RiakDtMapFieldType.Register">
            <summary>
            The Register field type.
            </summary>
        </member>
        <member name="F:RiakClient.Models.RiakDt.RiakDtMapField.RiakDtMapFieldType.Flag">
            <summary>
            The Flag field type.
            </summary>
        </member>
        <member name="F:RiakClient.Models.RiakDt.RiakDtMapField.RiakDtMapFieldType.Map">
            <summary>
            The Map field type.
            </summary>
        </member>
        <member name="T:RiakClient.Models.RiakDt.RiakDtMapResult">
            <summary>
            Represents an operation result for a Riak Map data type.
            </summary>
        </member>
        <member name="M:RiakClient.Models.RiakDt.RiakDtMapResult.#ctor(RiakClient.RiakResult{RiakClient.Models.RiakObject},System.Byte[],System.Collections.Generic.List{RiakClient.Models.RiakDt.RiakDtMapEntry})">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.RiakDt.RiakDtMapResult"/> class.
            </summary>
            <param name="result">The operation result.</param>
            <param name="context">The current context, if one was returned with the operation result.</param>
            <param name="values">The current collection of <see cref="T:RiakClient.Models.RiakDt.RiakDtMapEntry"/>s, if they were returned with the operation result.</param>
        </member>
        <member name="P:RiakClient.Models.RiakDt.RiakDtMapResult.Result">
            <summary>
            The operation result.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakDt.RiakDtMapResult.Context">
            <summary>
            The updated data type context.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakDt.RiakDtMapResult.Values">
            <summary>
            A collection of <see cref="T:RiakClient.Models.RiakDt.RiakDtMapEntry"/>, which represent the updated map fields.
            </summary>
        </member>
        <member name="T:RiakClient.Models.RiakDt.RiakDtSetResult">
            <summary>
            Represents an operation result for a Riak Set data type.
            </summary>
        </member>
        <member name="M:RiakClient.Models.RiakDt.RiakDtSetResult.#ctor(RiakClient.RiakResult{RiakClient.Models.RiakObject},System.Byte[],System.Collections.Generic.List{System.Byte[]})">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.RiakDt.RiakDtSetResult"/> class.
            </summary>
            <param name="result">The operation result.</param>
            <param name="context">The current context, if one was returned with the operation result.</param>
            <param name="values">The current collection of <see cref="T:RiakClient.Models.RiakDt.RiakDtMapEntry"/>s, if they were returned with the operation result.</param>
        </member>
        <member name="M:RiakClient.Models.RiakDt.RiakDtSetResult.GetObjects``1(RiakClient.Models.DeserializeObject{``0})">
            <summary>
            Deserialize the <see cref="P:RiakClient.Models.RiakDt.RiakDtSetResult.Values"/> collection into a 
            </summary>
            <typeparam name="T">The set members target type.</typeparam>
            <param name="deserializeObject">
            A delegate to handle deserialization of an byte[] serialized object to it's original type.
            </param>
            <returns>
            A newly initialized <see cref="T:System.Collections.Generic.ISet`1"/> collection, 
            populated with the deserialized objects from <see cref="P:RiakClient.Models.RiakDt.RiakDtSetResult.Values"/>.
            </returns>
            <exception cref="T:System.ArgumentException">The <paramref name="deserializeObject"/> parameter must not be null.</exception>
        </member>
        <member name="P:RiakClient.Models.RiakDt.RiakDtSetResult.Result">
            <summary>
            The operation result.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakDt.RiakDtSetResult.Context">
            <summary>
            The updated data type context.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakDt.RiakDtSetResult.Values">
            <summary>
            The updated collection of raw set values.
            </summary>
        </member>
        <member name="T:RiakClient.Models.RiakDtUpdateOptions">
            <summary>
            Represents a collection of optional properties when updating Riak Data Types. 
            Each property changes the semantics of the operation slightly. 
            </summary>
        </member>
        <member name="M:RiakClient.Models.RiakDtUpdateOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.RiakDtUpdateOptions"/> class.
            </summary>
            <remarks>
            Initializes <see cref="P:RiakClient.Models.RiakDtUpdateOptions.ReturnBody"/> and <see cref="P:RiakClient.Models.RiakDtUpdateOptions.ReturnBody"/> to <b>true</b>.
            Initializes the <see cref="P:RiakClient.Models.RiakOptions`1.W"/>, <see cref="P:RiakClient.Models.RiakOptions`1.Dw"/>, and <see cref="P:RiakClient.Models.RiakOptions`1.Pw"/> properties to 
            <see cref="P:RiakClient.Quorum.WellKnown.Default"/>.
            </remarks>
        </member>
        <member name="M:RiakClient.Models.RiakDtUpdateOptions.SetReturnBody(System.Boolean)">
            <summary>
            Fluent setter for the <see cref="P:RiakClient.Models.RiakDtUpdateOptions.ReturnBody"/> property.
            Whether the updated object should be returned after the operation.
            </summary>
            <param name="value">The value to set the property to.</param>
            <returns>A reference to the current properties object.</returns>
            <remarks>
            This property is not typically modified.
            </remarks>
        </member>
        <member name="M:RiakClient.Models.RiakDtUpdateOptions.SetSloppyQuorum(System.Boolean)">
            <summary>
            Fluent setter for the <see cref="P:RiakClient.Models.RiakDtUpdateOptions.SloppyQuorum"/> property.
            Whether a sloppy quorum should be used.
            </summary>
            <param name="value">The value to set the property to.</param>
            <returns>A reference to the current properties object.</returns>
            <remarks>
            This property is not typically modified.
            </remarks>
        </member>
        <member name="M:RiakClient.Models.RiakDtUpdateOptions.SetNVal(RiakClient.NVal)">
            <summary>
            Fluent setter for the <see cref="P:RiakClient.Models.RiakDtUpdateOptions.NVal"/> property.
            The number of replicas to create when storing data.
            </summary>
            <param name="value">The value to set the property to.</param>
            <returns>A reference to the current properties object.</returns>
            <remarks>
            This property is not typically modified.
            </remarks>
        </member>
        <member name="M:RiakClient.Models.RiakDtUpdateOptions.SetIncludeContext(System.Boolean)">
            <summary>
            Fluent setter for the <see cref="P:RiakClient.Models.RiakDtUpdateOptions.IncludeContext"/> property.
            Whether the updated Context should be returned after the operation.
            </summary>
            <param name="value">The value to set the property to.</param>
            <returns>A reference to the current properties object.</returns>
            <remarks>
            This property is not typically modified.
            </remarks>
        </member>
        <member name="P:RiakClient.Models.RiakDtUpdateOptions.ReturnBody">
            <summary>
            The option to return the updated body to the client after the operation.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakDtUpdateOptions.SloppyQuorum">
            <summary>
            Whether a sloppy quorum should be used.
            </summary>
            <remarks><para>Sloppy quorum defers to the first N healthy nodes from the pref list,
            which may not always be the first N nodes encountered in the consistent hash ring.
            In effect - sloppy quorum allows us to trust hand off nodes in the event of a network
            partition or other similarly amusing event.</para>
            <para>Specifying PR will override Sloppy Quorum settings.</para>
            <para>Refer to http://lists.basho.com/pipermail/riak-users_lists.basho.com/2012-January/007157.html for additional details.</para></remarks>
        </member>
        <member name="P:RiakClient.Models.RiakDtUpdateOptions.NVal">
            <summary>
            The number of replicas to create when storing data.
            </summary>
            <remarks>
            Riak will default this property to an <see cref="P:RiakClient.Models.RiakDtUpdateOptions.NVal"/> equivalent of <b>3</b>.
            See http://docs.basho.com/riak/latest/theory/concepts/Replication/ for more information.
            </remarks>
        </member>
        <member name="P:RiakClient.Models.RiakDtUpdateOptions.IncludeContext">
            <summary>
            The option to return the new context to the client after the operation.
            </summary>
        </member>
        <member name="T:RiakClient.Models.RiakDt.RiakDtCounter">
            <summary>
            Represents a Riak Counter data type.
            </summary>
        </member>
        <member name="M:RiakClient.Models.RiakDt.RiakDtCounter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.RiakDt.RiakDtCounter"/> class.
            </summary>
        </member>
        <member name="M:RiakClient.Models.RiakDt.RiakDtCounter.#ctor(System.String,System.String,System.String,RiakClient.Messages.DtFetchResp)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.RiakDt.RiakDtCounter"/> class.
            </summary>
            <param name="bucket">The bucket name of this counter's object.</param>
            <param name="bucketType">The bucket type of this counter's object.</param>
            <param name="key">The key of this counter's object.</param>
            <param name="response">The response containing the counter's server-side value and context.</param>
            <remarks>Not used.</remarks>
        </member>
        <member name="M:RiakClient.Models.RiakDt.RiakDtCounter.op_Increment(RiakClient.Models.RiakDt.RiakDtCounter)">
            <summary>
            Increment the counter by 1.
            </summary>
            <param name="counter">The <see cref="T:RiakClient.Models.RiakDt.RiakDtCounter"/> to increment.</param>
            <returns>The incremented <see cref="T:RiakClient.Models.RiakDt.RiakDtCounter"/>.</returns>
        </member>
        <member name="M:RiakClient.Models.RiakDt.RiakDtCounter.Increment(System.Int64)">
            <summary>
            Increment the counter.
            </summary>
            <param name="value">The amount (positive or negative) to increment the counter.</param>
            <returns>The updated <see cref="T:RiakClient.Models.RiakDt.RiakDtCounter"/>.</returns>
            <remarks>To decrement the counter, use a negative number for <paramref name="value"/>.</remarks>
        </member>
        <member name="M:RiakClient.Models.RiakDt.RiakDtCounter.ToMapEntry(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.Models.RiakDt.RiakDtCounter.AcceptChanges">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.Models.RiakDt.RiakDtCounter.ToCounterOp">
            <summary>
            Convert this object to a <see cref="T:RiakClient.Messages.CounterOp"/>.
            </summary>
            <returns>A newly initialized and configured <see cref="T:RiakClient.Messages.CounterOp"/>.</returns>
        </member>
        <member name="M:RiakClient.Models.RiakDt.RiakDtCounter.ToDtOp">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.Models.RiakDt.RiakDtCounter.ToDtUpdateRequest(RiakClient.Models.RiakDtUpdateOptions)">
            <summary>
            Compress all operations in a RiakDtCounter into a single DtUpdateReq
            </summary>
            <param name="options">The RiakDtUpdateOptions</param>
            <returns>Returns a valid DtUpdateReq or null.</returns>
            <remarks>A null value will be returned when the net of all counter
            operations will produce no change to the counter value. That is:
            when the sum of all operations is 0, null will be returned. In these
            situations, the caller should not submit any changes to Riak. </remarks>
        </member>
        <member name="P:RiakClient.Models.RiakDt.RiakDtCounter.IsChanged">
            <summary>
            Flag to see if there have been any local changes to the value of this counter.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakDt.RiakDtCounter.Value">
            <summary>
            The current local value of this <see cref="T:RiakClient.Models.RiakDt.RiakDtCounter"/>.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakDt.RiakDtCounter.Bucket">
            <inheritdoc/>
        </member>
        <member name="P:RiakClient.Models.RiakDt.RiakDtCounter.BucketType">
            <inheritdoc/>
        </member>
        <member name="P:RiakClient.Models.RiakDt.RiakDtCounter.Key">
            <inheritdoc/>
        </member>
        <member name="P:RiakClient.Models.RiakDt.RiakDtCounter.Operations">
            <inheritdoc/>
        </member>
        <member name="T:RiakClient.Models.RiakDt.SetOperation">
            <summary>
            Represents an operation on a Riak Set data type.
            </summary>
        </member>
        <member name="M:RiakClient.Models.RiakDt.SetOperation.ToDtOp">
            <inheritdoc/>
        </member>
        <member name="T:RiakClient.Models.RiakIndexGetOptions">
            <summary>
            Represents a collection of optional properties when executing secondary index queries.
            Each property changes the semantics of the operation slightly. 
            </summary>
        </member>
        <member name="M:RiakClient.Models.RiakIndexGetOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.RiakIndexGetOptions"/> class.
            </summary>
        </member>
        <member name="M:RiakClient.Models.RiakIndexGetOptions.SetReturnTerms(System.Boolean)">
            <summary>
            Fluent setter for the <see cref="P:RiakClient.Models.RiakIndexGetOptions.ReturnTerms"/> property.
            The option to return the index keys with the Riak object keys.
            </summary>
            <param name="value">The value to set the property to.</param>
            <returns>A reference to the current options object.</returns>
        </member>
        <member name="M:RiakClient.Models.RiakIndexGetOptions.SetStream(System.Boolean)">
            <summary>
            Fluent setter for the <see cref="P:RiakClient.Models.RiakIndexGetOptions.Stream"/> property.
            The option to stream results back as they are available, instead of letting Riak
            aggregate the entire result set before returning them.
            </summary>
            <param name="value">The value to set the property to.</param>
            <returns>A reference to the current options object.</returns>
            <remarks>
            This property is not typically modified by the end user, 
            please use the "Stream" version of any SecondaryIndex interface to stream queries.
            </remarks>
        </member>
        <member name="M:RiakClient.Models.RiakIndexGetOptions.SetMaxResults(System.Int32)">
            <summary>
            Fluent setter for the <see cref="P:RiakClient.Models.RiakIndexGetOptions.MaxResults"/> property.
            The maximum number of results returned by the query.
            </summary>
            <param name="value">The value to set the property to.</param>
            <returns>A reference to the current options object.</returns>
        </member>
        <member name="M:RiakClient.Models.RiakIndexGetOptions.SetContinuation(System.Numerics.BigInteger)">
            <summary>
            Fluent setter for the <see cref="P:RiakClient.Models.RiakIndexGetOptions.Continuation"/> property.
            The continuation string for this query. 
            Used to page results when combined with <see cref="P:RiakClient.Models.RiakIndexGetOptions.MaxResults"/>.
            </summary>
            <param name="value">The value to set the property to.</param>
            <returns>A reference to the current options object.</returns>
        </member>
        <member name="M:RiakClient.Models.RiakIndexGetOptions.SetContinuation(System.String)">
            <summary>
            Fluent setter for the <see cref="P:RiakClient.Models.RiakIndexGetOptions.Continuation"/> property.
            The continuation string for this query. 
            Used to page results when combined with <see cref="P:RiakClient.Models.RiakIndexGetOptions.MaxResults"/>.
            </summary>
            <param name="value">The value to set the property to.</param>
            <returns>A reference to the current options object.</returns>
        </member>
        <member name="M:RiakClient.Models.RiakIndexGetOptions.SetTermRegex(System.String)">
            <summary>
            Fluent setter for the <see cref="P:RiakClient.Models.RiakIndexGetOptions.TermRegex"/> property.
            The option to filter result terms with a Regex.
            </summary>
            <param name="value">The value to set the property to.</param>
            <returns>A reference to the current options object.</returns>
        </member>
        <member name="M:RiakClient.Models.RiakIndexGetOptions.SetPaginationSort(System.Boolean)">
            <summary>
            Fluent setter for the <see cref="P:RiakClient.Models.RiakIndexGetOptions.PaginationSort"/> property.
            The option to sort, or not sort, the results of a non-paginated secondary index query.
            If <see cref="P:RiakClient.Models.RiakIndexGetOptions.MaxResults"/> is set, this property is ignored.
            By default results are sorted first by index value, then by key value.
            </summary>
            <param name="value">The value to set the property to.</param>
            <returns>A reference to the current options object.</returns>
        </member>
        <member name="P:RiakClient.Models.RiakIndexGetOptions.ReturnTerms">
            <summary>
            The option to return the index keys with the Riak object keys.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakIndexGetOptions.Stream">
            <summary>
            The option to stream results back as they are available, instead of letting Riak
            aggregate the entire result set before returning them.
            </summary>
            <remarks>
            This property is not typically modified, please use the "Stream" version of any 
            SecondaryIndex interface to stream queries.
            </remarks>
        </member>
        <member name="P:RiakClient.Models.RiakIndexGetOptions.MaxResults">
            <summary>
            The maximum number of results returned by the query.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakIndexGetOptions.Continuation">
            <summary>
            The continuation string for this query. 
            Used to page results when combined with <see cref="P:RiakClient.Models.RiakIndexGetOptions.MaxResults"/>.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakIndexGetOptions.PaginationSort">
            <summary>
            The option to sort, or not sort, the results of a non-paginated secondary index query.
            If <see cref="P:RiakClient.Models.RiakIndexGetOptions.MaxResults"/> is set, this property is ignored.
            By default results are sorted first by index value, then by key value.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakIndexGetOptions.TermRegex">
            <summary>
            The option to filter result terms with a Regex.
            </summary>
        </member>
        <member name="T:RiakClient.Models.RiakObjectId">
            <summary>
            An Id that specifies where an object lives in Riak. Immutable once created. 
            </summary>
        </member>
        <member name="M:RiakClient.Models.RiakObjectId.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.RiakObjectId"/> class.
            Build an Id using the default (pre-2.0) Bucket Type, and the specified Bucket and Key.
            </summary>
            <param name="bucket">The bucket name to use.</param>
            <param name="key">The key to use.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">The value of 'bucket' cannot be null, an empty string, or whitespace.</exception>
        </member>
        <member name="M:RiakClient.Models.RiakObjectId.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.RiakObjectId"/> class.
            Build an Id using the specified Bucket Type, Bucket, and Key.
            </summary>
            <param name="bucketType">The bucket type to use.</param>
            <param name="bucket">The bucket name to use.</param>
            <param name="key">The key to use.</param>
        </member>
        <member name="M:RiakClient.Models.RiakObjectId.op_Equality(RiakClient.Models.RiakObjectId,RiakClient.Models.RiakObjectId)">
            <summary>
            Determines whether the one object is equal to another object.
            </summary>
            <param name="left">The first <see cref="T:RiakClient.Models.RiakObjectId"/> to compare.</param>
            <param name="right">The other <see cref="T:RiakClient.Models.RiakObjectId"/> to compare.</param>
            <returns><b>true</b> if the specified object is equal to the current object, otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:RiakClient.Models.RiakObjectId.op_Inequality(RiakClient.Models.RiakObjectId,RiakClient.Models.RiakObjectId)">
            <summary>
            Determines whether the one object is <b>not</b> equal to another object.
            </summary>
            <param name="left">The first <see cref="T:RiakClient.Models.RiakObjectId"/> to compare.</param>
            <param name="right">The other <see cref="T:RiakClient.Models.RiakObjectId"/> to compare.</param>
            <returns><b>true</b> if the specified object is <b>not</b> equal to the current object, otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:RiakClient.Models.RiakObjectId.Equals(RiakClient.Models.RiakObjectId)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="other">The object to compare with the current object.</param>
            <returns><b>true</b> if the specified object is equal to the current object, otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:RiakClient.Models.RiakObjectId.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><b>true</b> if the specified object is equal to the current object, otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:RiakClient.Models.RiakObjectId.GetHashCode">
            <summary>
            Returns a hash code for the current object.
            Uses a combination of the public properties to generate a unique hash code.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:RiakClient.Models.RiakObjectId.ToString">
            <summary>
            Returns a string that represents the RiakObjectId value.
            </summary>
            <returns>A string representation of the Bucket Type, Bucket Name, and Key.</returns>
        </member>
        <member name="P:RiakClient.Models.RiakObjectId.Bucket">
            <summary>
            Get the bucket name.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakObjectId.BucketType">
            <summary>
            Get the bucket type.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakObjectId.Key">
            <summary>
            Get the key.
            </summary>
        </member>
        <member name="T:RiakClient.Models.RiakBucketProperties">
            <summary>
            Represents the collection of properties for a Riak bucket.
            </summary>
            <remarks>
            When creating new objects, any properties not set will default to the server default values upon saving.
            </remarks>
        </member>
        <member name="M:RiakClient.Models.RiakBucketProperties.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.RiakBucketProperties"/> class.
            </summary>
            <remarks>
            This constructor will create a new <see cref="T:RiakClient.Models.RiakBucketProperties"/> instance with no properties set.
            </remarks>
        </member>
        <member name="M:RiakClient.Models.RiakBucketProperties.SetBasicQuorum(System.Boolean)">
            <summary>
            Fluent setter for the <see cref="P:RiakClient.Models.RiakBucketProperties.BasicQuorum"/> property.
            When set to true, Riak will return early in some failure cases.
            (eg. when r=1 and you get 2 errors and a success basic_quorum=true would return an error).
            Can be used in conjunction when <see cref="P:RiakClient.Models.RiakBucketProperties.NotFoundOk"/>=<b>false</b> to speed up the case an object 
            does not exist, thereby only reading a "quorum" of not-founds instead of "N" not-founds.
            </summary>
            <param name="value">The value to set the property to.</param>
            <returns>A reference to the current properties object.</returns>
            <remarks>
            This property is not typically modified.
            See http://docs.basho.com/riak/latest/dev/advanced/replication-properties/#Early-Failure-Return-with-code-basic_quorum-code-
            for more information.
            </remarks>
        </member>
        <member name="M:RiakClient.Models.RiakBucketProperties.SetNotFoundOk(System.Boolean)">
            <summary>
            Fluent setter for the <see cref="P:RiakClient.Models.RiakBucketProperties.NotFoundOk"/> property.
            Enable or disable notfound_ok on a bucket.
            When set to true, an object not being found on a Riak node will count towards the R count. 
            </summary>
            <param name="value">The value to set the property to.</param>
            <returns>A reference to the current properties object.</returns>
            <remarks>
            This property is not typically modified.
            See http://docs.basho.com/riak/latest/dev/advanced/replication-properties/#The-Implications-of-code-notfound_ok-code-
            for more information.
            </remarks>
        </member>
        <member name="M:RiakClient.Models.RiakBucketProperties.SetAllowMultiple(System.Boolean)">
            <summary>
            Fluent setter for the <see cref="P:RiakClient.Models.RiakBucketProperties.AllowMultiple"/> property.
            Enable or disable allow_mult on a bucket.
            </summary>
            <param name="value">The value to set the property to.</param>
            <returns>A reference to the current properties object.</returns>
        </member>
        <member name="M:RiakClient.Models.RiakBucketProperties.SetLastWriteWins(System.Boolean)">
            <summary>
            Fluent setter for the <see cref="P:RiakClient.Models.RiakBucketProperties.LastWriteWins"/> property.
            Enable or disable last_write_wins on a bucket.
            </summary>
            <param name="value">The value to set the property to.</param>
            <returns>A reference to the current properties object.</returns>
        </member>
        <member name="M:RiakClient.Models.RiakBucketProperties.SetSearch(System.Boolean,System.Boolean)">
            <summary>
            Fluent setter for the <see cref="P:RiakClient.Models.RiakBucketProperties.LegacySearch"/> property.
            Enable or disable legacy search on a bucket.
            </summary>
            <param name="enable">
            Set to <i>true</i> to enable legacy search on this bucket, or <i>false</i> to disable it.
            </param>
            <param name="addHooks">Set to <i>true</i> to add pre commit hook.</param>
            <returns>A reference to the current properties object.</returns>
        </member>
        <member name="M:RiakClient.Models.RiakBucketProperties.SetLegacySearch(System.Boolean,System.Boolean)">
            <summary>
            Fluent setter for the <see cref="P:RiakClient.Models.RiakBucketProperties.LegacySearch"/> property.
            Enable or disable legacy search on a bucket.
            </summary>
            <param name="enable">
            Set to <i>true</i> to enable legacy search on this bucket, or <i>false</i> to disable it.
            </param>
            <returns>A reference to the current properties object.</returns>
            <param name="addHooks">Set to <i>true</i> to add pre commit hook.</param>
        </member>
        <member name="M:RiakClient.Models.RiakBucketProperties.SetNVal(RiakClient.NVal)">
            <summary>
            Fluent setter for the <see cref="P:RiakClient.Models.RiakBucketProperties.NVal"/> property.
            The number of replicas to create when storing data.
            </summary>
            <param name="value">The value to set the property to.</param>
            <returns>A reference to the current properties object.</returns>
            <remarks>
            This property is not typically modified.
            </remarks>
        </member>
        <member name="M:RiakClient.Models.RiakBucketProperties.SetBackend(System.String)">
            <summary>
            Fluent setter for the <see cref="P:RiakClient.Models.RiakBucketProperties.Backend"/> property.
            Sets the named backend being used for this bucket when using riak_kv_multi_backend.
            </summary>
            <param name="backend">The backend to set the property to.</param>
            <returns>A reference to the current properties object.</returns>
            <remarks>
            This property is not typically modified.
            </remarks>
        </member>
        <member name="M:RiakClient.Models.RiakBucketProperties.SetBigVclock(System.Nullable{System.Int32})">
            <summary>
            Fluent setter for the <see cref="P:RiakClient.Models.RiakBucketProperties.BigVclock"/> property.
            If the length of the vector clock is larger than BigVclock, vector clocks will be pruned.
            </summary>
            <param name="bigVclock">The value to set the property to.</param>
            <returns>A reference to the current properties object.</returns>
            <remarks>
            This property is not typically modified.
            </remarks>
        </member>
        <member name="M:RiakClient.Models.RiakBucketProperties.SetSmallVclock(System.Nullable{System.Int32})">
            <summary>
            Fluent setter for the <see cref="P:RiakClient.Models.RiakBucketProperties.SmallVclock"/> property.
            If the length of the vector clock is smaller than SmallVclock, vector clocks will not be pruned.
            </summary>
            <param name="smallVclock">The value to set the property to.</param>
            <returns>A reference to the current properties object.</returns>
            <remarks>
            This property is not typically modified.
            </remarks>
        </member>
        <member name="M:RiakClient.Models.RiakBucketProperties.SetSearchIndex(System.String)">
            <summary>
            Fluent setter for the <see cref="P:RiakClient.Models.RiakBucketProperties.SearchIndex"/> property.
            Sets the Search Index to use when indexing data for search.
            </summary>
            <param name="searchIndex">The name of the index to set the property to.</param>
            <returns>A reference to the current properties object.</returns>
        </member>
        <member name="M:RiakClient.Models.RiakBucketProperties.SetHllPrecision(System.Int32)">
            <summary>
            Fluent setter for the <see cref="P:RiakClient.Models.RiakBucketProperties.HllPrecision"/> property.
            Sets the number of bits to use for HyperLogLog precision. 
            Valid values are [4 - 16] inclusive, default is 14 on new buckets.
            <b>NOTE:</b> When changing precision, it may only be reduced from
            it's current value, and never increased.
            </summary>
            <param name="precision">The number of bits to use for hyperloglogs in this bucket.</param>
            <returns>A reference to the current properties object.</returns>
        </member>
        <member name="M:RiakClient.Models.RiakBucketProperties.RemovePreCommitHook(RiakClient.Models.CommitHook.IRiakPreCommitHook)">
            <summary>
            Remove a pre-commit hook from the bucket properties.
            </summary>
            <param name="commitHook">The <see cref="T:RiakClient.Models.CommitHook.IRiakPreCommitHook"/> to remove.</param>
            <returns>A reference to the current properties object.</returns>
            <remarks>
            Pre/Post-commit hooks are not typically modified.
            </remarks>
        </member>
        <member name="M:RiakClient.Models.RiakBucketProperties.RemovePostCommitHook(RiakClient.Models.CommitHook.IRiakPostCommitHook)">
            <summary>
            Remove a post-commit hook from the bucket properties.
            </summary>
            <param name="commitHook">The <see cref="T:RiakClient.Models.CommitHook.IRiakPreCommitHook"/> to remove.</param>
            <returns>A reference to the current properties object.</returns>
            <remarks>
            Pre/Post-commit hooks are not typically modified.
            </remarks>
        </member>
        <member name="M:RiakClient.Models.RiakBucketProperties.AddPreCommitHook(RiakClient.Models.CommitHook.IRiakPreCommitHook,System.Boolean)">
            <summary>
            Add a pre-commit hook to the bucket properties.
            </summary>
            <param name="commitHook">The <see cref="T:RiakClient.Models.CommitHook.IRiakPreCommitHook"/> to add.</param>
            <param name="commitFlags">The option to set <see cref="P:RiakClient.Models.RiakBucketProperties.HasPrecommit"/> to true at the same time.</param>
            <returns>A reference to the current properties object.</returns>
            <remarks>
            Pre/Post-commit hooks are not typically modified.
            </remarks>
        </member>
        <member name="M:RiakClient.Models.RiakBucketProperties.AddPostCommitHook(RiakClient.Models.CommitHook.IRiakPostCommitHook,System.Boolean)">
            <summary>
            Add a post-commit hook to the bucket properties.
            </summary>
            <param name="commitHook">The commit hook to add.</param>
            <param name="commitFlags">The option to set <see cref="P:RiakClient.Models.RiakBucketProperties.HasPostcommit"/> to true at the same time.</param>
            <returns>A reference to the current properties object.</returns>
            <remarks>
            Pre/Post-commit hooks are not typically modified.
            </remarks>
        </member>
        <member name="M:RiakClient.Models.RiakBucketProperties.ClearPreCommitHooks(System.Boolean)">
            <summary>
            Clear any pre-commit hooks from the bucket properties.
            </summary>
            <param name="commitFlags">Not used.</param>
            <returns>A reference to the current properties object.</returns>
            <remarks>
            Pre/Post-commit hooks are not typically modified.
            </remarks>
        </member>
        <member name="M:RiakClient.Models.RiakBucketProperties.ClearPostCommitHooks(System.Boolean)">
            <summary>
            Clear any post-commit hooks from the bucket properties.
            </summary>
            <param name="commitFlags">Not used.</param>
            <returns>A reference to the current properties object.</returns>
            <remarks>
            Pre/Postcommit hooks are not typically modified.
            </remarks>
        </member>
        <member name="P:RiakClient.Models.RiakBucketProperties.LastWriteWins">
            <summary>
            The option to ignore object history (vector clock) when updating an object.
            </summary>
            <remarks>
            Cannot be set to true while <see cref="P:RiakClient.Models.RiakBucketProperties.AllowMultiple"/> is also set to true.
            Riak will default this property to <b>false</b>.
            See http://docs.basho.com/riak/latest/dev/using/conflict-resolution/ for more information.
            </remarks>
        </member>
        <member name="P:RiakClient.Models.RiakBucketProperties.NVal">
            <summary>
            The number of replicas to create when storing data.
            </summary>
            <remarks>
            Riak will default this property to an <see cref="P:RiakClient.Models.RiakBucketProperties.NVal"/> equivalent of <b>3</b>.
            See http://docs.basho.com/riak/latest/theory/concepts/Replication/ for more information.
            </remarks>
        </member>
        <member name="P:RiakClient.Models.RiakBucketProperties.AllowMultiple">
            <summary>
            The option to allow sibling objects to be created (concurrent updates) when updating an object.
            </summary>
            <remarks>
            Cannot be set to true while <see cref="P:RiakClient.Models.RiakBucketProperties.LastWriteWins"/> is also set to true.
            Riak will default this property to <b>true</b> for buckets within a 
            bucket type (other than the default one) in <b>Riak 2.0+</b>.
            Riak will default this property to <b>false</b> for buckets within <b>the default bucket type</b> in <b>Riak 2.0+</b>.
            Riak will default this property to <b>false</b> for all buckets in <b>Riak 1.0</b>.
            See http://docs.basho.com/riak/latest/dev/using/conflict-resolution/ for more information.
            </remarks>
        </member>
        <member name="P:RiakClient.Models.RiakBucketProperties.Backend">
            <summary>
            The named backend being used for this bucket when using riak_kv_multi_backend.
            Can be the named backend <i>to use</i> when creating bucket properties for new buckets,
            or the named backend <i>in use</i> for existing buckets &amp; bucket properties.
            </summary>
            <remarks>
            See http://docs.basho.com/riak/latest/ops/advanced/backends/multi/ for more information.
            </remarks>
        </member>
        <member name="P:RiakClient.Models.RiakBucketProperties.PreCommitHooks">
            <summary>
            A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:RiakClient.Models.CommitHook.IRiakPreCommitHook"/> pre-commit hooks.
            </summary>
            <remarks>
            See http://docs.basho.com/riak/latest/dev/using/commit-hooks/ for more information.
            </remarks>
        </member>
        <member name="P:RiakClient.Models.RiakBucketProperties.PostCommitHooks">
            <summary>
            A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:RiakClient.Models.CommitHook.IRiakPreCommitHook"/> post-commit hooks.
            </summary>
            <remarks>
            See http://docs.basho.com/riak/latest/dev/using/commit-hooks/ for more information.
            </remarks>
        </member>
        <member name="P:RiakClient.Models.RiakBucketProperties.NotFoundOk">
            <summary>
            When set to true, an object not being found on a Riak node will count towards the R count. 
             </summary>
            <remarks>
            Riak will default this property to <b>true</b>.
            See http://docs.basho.com/riak/latest/dev/advanced/replication-properties/#The-Implications-of-code-notfound_ok-code-
            for more information.
            </remarks>
        </member>
        <member name="P:RiakClient.Models.RiakBucketProperties.BasicQuorum">
            <summary>
            When set to true, Riak will return early in some failure cases.
            (eg. when r=1 and you get 2 errors and a success basic_quorum=true would return an error).
            Can be used in conjunction when <see cref="P:RiakClient.Models.RiakBucketProperties.NotFoundOk"/>=<b>false</b> to speed up the case an object 
            does not exist, thereby only reading a "quorum" of not-founds instead of "N" not-founds.
            </summary>
            <remarks>
            Riak will default this property to <b>false</b>.
            See http://docs.basho.com/riak/latest/dev/advanced/replication-properties/#Early-Failure-Return-with-code-basic_quorum-code-
            for more information.
            </remarks>
        </member>
        <member name="P:RiakClient.Models.RiakBucketProperties.BigVclock">
            <summary>
            If the length of the vector clock is larger than BigVclock, vector clocks will be pruned.
            </summary>
            <remarks>See http://docs.basho.com/riak/latest/theory/concepts/Vector-Clocks/#Vector-Clock-Pruning </remarks>
        </member>
        <member name="P:RiakClient.Models.RiakBucketProperties.SmallVclock">
            <summary>
            If the length of the vector clock is smaller than SmallVclock, vector clocks will not be pruned.
            </summary>
            <remarks>See http://docs.basho.com/riak/latest/theory/concepts/Vector-Clocks/#Vector-Clock-Pruning </remarks>
        </member>
        <member name="P:RiakClient.Models.RiakBucketProperties.HasPrecommit">
            <summary>
            Indicates whether the bucket properties have any pre-commit hooks.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakBucketProperties.HasPostcommit">
            <summary>
            Indicates whether the bucket properties have any post-commit hooks.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakBucketProperties.Search">
            <summary>
            Indicates whether Legacy (Riak 1.0) Search is enabled for this bucket.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakBucketProperties.LegacySearch">
            <summary>
            Indicates whether Legacy (Riak 1.0) Search is enabled for this bucket.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakBucketProperties.Consistent">
            <summary>
            Indicates whether strong consistency is enabled on this bucket.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakBucketProperties.ReplicationMode">
            <summary>
            Indicates which Riak Enterprise Edition replication modes are active for this bucket.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakBucketProperties.SearchIndex">
            <summary>
            Indicates whether Riak Search (2.0+) is enabled for this bucket, and which Search Index is assigned to it.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakBucketProperties.HllPrecision">
            <summary>
            The number of bits to use for HyperLogLog precision. 
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakBucketProperties.SearchEnabled">
            <summary>
            An indicator of whether legacy search indexing is enabled on the bucket. Please use <see cref="P:RiakClient.Models.RiakBucketProperties.LegacySearchEnabled"/> instead.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakBucketProperties.LegacySearchEnabled">
            <summary>
            An indicator of whether legacy search indexing is enabled on the bucket.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakBucketProperties.DataType">
            <summary>
            The DataType (if any) associated with this bucket.
            </summary>
            <remarks>
            A string representation of the DataType assigned to this bucket. 
            Possible values include 'set', 'map', 'counter', or null for no data type.
            </remarks>
        </member>
        <member name="T:RiakClient.Models.RiakLink">
            <summary>
            Represents a link to another Riak object. Used for simple graph database mechanisms.
            </summary>
        </member>
        <member name="F:RiakClient.Models.RiakLink.AllLinks">
            <summary>
            Represents the <see cref="T:RiakClient.Models.RiakLink"/> that will follow all links during linkwalking.
            </summary>
        </member>
        <member name="M:RiakClient.Models.RiakLink.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.RiakLink"/> class.
            </summary>
            <param name="bucket">The target bucket name for the link.</param>
            <param name="key">The target key for the link.</param>
            <param name="tag">The link tag.</param>
            <remarks>
            Can only be used with objects in the Default Bucket Type.
            Linkwalking is depreciated, and this class may be removed in the future.
            </remarks>
        </member>
        <member name="M:RiakClient.Models.RiakLink.FromJsonString(System.String)">
            <summary>
            Parse the <paramref name="jsonString"/> parameter into a string array,  
            and initialize a new instance of the <see cref="T:RiakClient.Models.RiakLink"/> class using the
            information it contains.
            </summary>
            <param name="jsonString">
            A string containing a JSON-formatted array of 3 strings in the following order:
            ["Bucket", "Key", "Tag"].
            </param>
            <returns>A new instance of the <see cref="T:RiakClient.Models.RiakLink"/> class.</returns>
        </member>
        <member name="M:RiakClient.Models.RiakLink.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><b>true</b> if the specified object is equal to the current object, otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:RiakClient.Models.RiakLink.Equals(RiakClient.Models.RiakLink)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="other">The object to compare with the current object.</param>
            <returns><b>true</b> if the specified object is equal to the current object, otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:RiakClient.Models.RiakLink.GetHashCode">
            <summary>
            Returns a hash code for the current object.
            Uses a combination of the public properties to generate a unique hash code.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="P:RiakClient.Models.RiakLink.Bucket">
            <summary>
            Get the target bucket name.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakLink.Key">
            <summary>
            Get the target key.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakLink.Tag">
            <summary>
            Get the link tag.
            </summary>
        </member>
        <member name="T:RiakClient.Models.SerializeObjectToString`1">
            <summary>
            A delegate to handle serialization of an object to a string.
            </summary>
            <typeparam name="T">The type of the object to serialize.</typeparam>
            <param name="theObject">The object to serialize.</param>
            <returns>A string containing the serialized object.</returns>
        </member>
        <member name="T:RiakClient.Models.SerializeObjectToByteArray`1">
            <summary>
            A delegate to handle serialization of an object to a byte[].
            </summary>
            <typeparam name="T">The type of the object to serialize.</typeparam>
            <param name="theObject">The object to serialize.</param>
            <returns>A byte[] containing the serialized object.</returns>
        </member>
        <member name="T:RiakClient.Models.DeserializeObject`1">
            <summary>
            A delegate to handle deserialization of an byte[] serialized object to it's original type.
            </summary>
            <typeparam name="T">The destination type of the object.</typeparam>
            <param name="theObject">The serialized object.</param>
            <param name="contentType">Content type of the object.</param>
            <returns>The deserialized object.</returns>
        </member>
        <member name="T:RiakClient.Models.ResolveConflict`1">
            <summary>
            A delegate to handle resolution of sibling objects. 
            Takes all the sibling objects as input and returns one "resolved" object.
            </summary>
            <typeparam name="T">The type of the objects.</typeparam>
            <param name="conflictedObjects">The conflicting sibling objects.</param>
            <returns>A single resolved object.</returns>
        </member>
        <member name="T:RiakClient.Models.RiakObject">
            <summary>
            Contains all the information about a single object in Riak.
            </summary>
        </member>
        <member name="M:RiakClient.Models.RiakObject.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.RiakObject"/> class.
            </summary>
            <param name="bucket">The object's bucket name.</param>
            <param name="key">The object's key.</param>
        </member>
        <member name="M:RiakClient.Models.RiakObject.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.RiakObject"/> class.
            </summary>
            <param name="bucket">The object's bucket name.</param>
            <param name="key">The object's key.</param>
            <param name="value">The object's value.</param>
            <remarks>Uses the default (JSON) content-type.</remarks>
        </member>
        <member name="M:RiakClient.Models.RiakObject.#ctor(System.String,System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.RiakObject"/> class.
            </summary>
            <param name="bucket">The object's bucket name.</param>
            <param name="key">The object's key.</param>
            <param name="value">The object's value.</param>
            <remarks>
            This overload expects that <paramref name="value"/> be serializable to JSON. 
            Uses the default (JSON) content-type.
            </remarks>
        </member>
        <member name="M:RiakClient.Models.RiakObject.#ctor(RiakClient.Models.RiakObjectId,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.RiakObject"/> class.
            Uses an "application/json" content type.
            </summary>
            <param name="objectId">The object's Id.</param>
            <param name="value">The object's value.</param>
            <remarks>Uses the default (JSON) content-type.</remarks>
        </member>
        <member name="M:RiakClient.Models.RiakObject.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.RiakObject"/> class.
            </summary>
            <param name="bucket">The object's bucket name.</param>
            <param name="key">The object's key.</param>
            <param name="value">The object's value.</param>
            <param name="contentType">
            The content-type of the object, must be a MIME compliant content-type.
            See <see cref="T:RiakClient.RiakConstants.ContentTypes"/> for common options.
            If the content type is not know, fall back to application/octet-stream.
            </param>
        </member>
        <member name="M:RiakClient.Models.RiakObject.#ctor(RiakClient.Models.RiakObjectId,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.RiakObject"/> class.
            </summary>
            <param name="objectId">The object's Id.</param>
            <param name="value">The object's value.</param>
            <param name="contentType">
            The content-type of the object, must be a MIME compliant content-type.
            See <see cref="T:RiakClient.RiakConstants.ContentTypes"/> for common options.
            If the content type is not know, fall back to application/octet-stream.
            </param>
        </member>
        <member name="M:RiakClient.Models.RiakObject.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.RiakObject"/> class.
            </summary>
            <param name="bucket">The object's bucket name.</param>
            <param name="key">The object's key.</param>
            <param name="value">The object's value.</param>
            <param name="contentType">
            The content-type of the object, must be a MIME compliant content-type.
            See <see cref="T:RiakClient.RiakConstants.ContentTypes"/> for common options.
            If the content type is not know, fall back to application/octet-stream.
            </param>
            <param name="charSet">The character set used to encode saved data.</param>
            <remarks>
            When saving binary data to Riak, the constant 
            <see cref="F:RiakClient.RiakConstants.CharSets.Binary"/> should be used.
            </remarks>
        </member>
        <member name="M:RiakClient.Models.RiakObject.#ctor(RiakClient.Models.RiakObjectId,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.RiakObject"/> class.
            </summary>
            <param name="objectId">The object's Id.</param>
            <param name="value">The object's value.</param>
            <param name="contentType">
            The content-type of the object, must be a MIME compliant content-type.
            See <see cref="T:RiakClient.RiakConstants.ContentTypes"/> for common options.
            If the content type is not know, fall back to application/octet-stream.
            </param>
            <param name="charSet">The character set used to encode saved data.</param>
            <exception cref="T:System.ArgumentNullException">
            The value of 'objectId', cannot be null. 
            </exception>
        </member>
        <member name="M:RiakClient.Models.RiakObject.#ctor(System.String,System.String,System.Byte[],System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.RiakObject"/> class.
            </summary>
            <param name="bucket">The object's bucket name.</param>
            <param name="key">The object's key.</param>
            <param name="value">The object's value.</param>
            <param name="contentType">
            The content-type of the object, must be a MIME compliant content-type.
            See <see cref="T:RiakClient.RiakConstants.ContentTypes"/> for common options.
            If the content type is not know, fall back to application/octet-stream.
            </param>
            <param name="charSet">The character set used to encode saved data.</param>
            <remarks>
            When saving binary data to Riak, the constant 
            <see cref="F:RiakClient.RiakConstants.CharSets.Binary"/> should be used.
            </remarks>
        </member>
        <member name="M:RiakClient.Models.RiakObject.#ctor(RiakClient.Models.RiakObjectId,System.Byte[],System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.RiakObject"/> class.
            </summary>
            <param name="objectId">The object's Id.</param>
            <param name="value">The object's value.</param>
            <param name="contentType">
            The content-type of the object, must be a MIME compliant content-type.
            See <see cref="T:RiakClient.RiakConstants.ContentTypes"/> for common options.
            If the content type is not know, fall back to application/octet-stream.
            </param>
            <param name="charSet">The character set used to encode saved data.</param>
            <remarks>
            When saving binary data to Riak, the constant 
            <see cref="F:RiakClient.RiakConstants.CharSets.Binary"/> should be used.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            The value of 'objectId', cannot be null. 
            </exception>
        </member>
        <member name="M:RiakClient.Models.RiakObject.IntIndex(System.String)">
            <summary>
            Fetch a single integer secondary index to work with.
            </summary>
            <param name="name">The name of the index to fetch.</param>
            <returns>The index.</returns>
        </member>
        <member name="M:RiakClient.Models.RiakObject.BinIndex(System.String)">
            <summary>
            Fetch a single string (binary) secondary idnex to work with.
            </summary>
            <param name="name">The name of the index to fetch.</param>
            <returns>The index.</returns>
        </member>
        <member name="M:RiakClient.Models.RiakObject.LinkTo(System.String,System.String,System.String)">
            <summary>
            Create a link from this object to another using a tag.
            </summary>
            <param name="bucket">The other object's bucket name.</param>
            <param name="key">The other object's key.</param>
            <param name="tag">The tag to use.</param>
        </member>
        <member name="M:RiakClient.Models.RiakObject.LinkTo(RiakClient.Models.RiakObjectId,System.String)">
            <summary>
            Create a link from this object to another using a tag.
            </summary>
            <param name="riakObjectId">The other's object's Id.</param>
            <param name="tag">The tag to use.</param>
            <exception cref="T:RiakClient.Exceptions.RiakUnsupportedException">
            Thrown if RiakObjectId has a bucket type. 
            Combining linkwalking and bucket types is not supported.
            </exception>
        </member>
        <member name="M:RiakClient.Models.RiakObject.LinkTo(RiakClient.Models.RiakObject,System.String)">
            <summary>
            Create a link from this object to another using a tag.
            </summary>
            <param name="riakObject">The other object.</param>
            <param name="tag">The tag to use.</param>
            <exception cref="T:RiakClient.Exceptions.RiakUnsupportedException">
            Thrown if RiakObjectId has a bucket type. 
            Combining linkwalking and bucket types is not supported.
            </exception>
        </member>
        <member name="M:RiakClient.Models.RiakObject.RemoveLink(System.String,System.String,System.String)">
            <summary>
            Remove a link, that goes from this object to another.
            </summary>
            <param name="bucket">The other object's bucket.</param>
            <param name="key">The other object's key.</param>
            <param name="tag">The tag for the link to remove.</param>
        </member>
        <member name="M:RiakClient.Models.RiakObject.RemoveLink(RiakClient.Models.RiakObjectId,System.String)">
            <summary>
            Remove a link, that goes from this object to another.
            </summary>
            <param name="riakObjectId">The other object's Id.</param>
            <param name="tag">The tag for the link to remove.</param>
            <exception cref="T:RiakClient.Exceptions.RiakUnsupportedException">
            Thrown if RiakObjectId has a bucket type. 
            Combining linkwalking and bucket types is not supported.
            </exception>
        </member>
        <member name="M:RiakClient.Models.RiakObject.RemoveLink(RiakClient.Models.RiakObject,System.String)">
            <summary>
            Remove a link, that goes from this object to another.
            </summary>
            <param name="riakObject">The other object.</param>
            <param name="tag">The tag for the link to remove.</param>
            <exception cref="T:RiakClient.Exceptions.RiakUnsupportedException">
            Thrown if RiakObjectId has a bucket type. 
            Combining linkwalking and bucket types is not supported.
            </exception>
        </member>
        <member name="M:RiakClient.Models.RiakObject.RemoveLink(RiakClient.Models.RiakLink)">
            <summary>
            Remove a link, that goes from this object to another.
            </summary>
            <param name="link">The link to remove.</param>
        </member>
        <member name="M:RiakClient.Models.RiakObject.RemoveLinks(RiakClient.Models.RiakObject)">
            <summary>
            Remove all links from this object that link to <paramref name="riakObject"/>.
            </summary>
            <param name="riakObject">The other object.</param>
            <exception cref="T:RiakClient.Exceptions.RiakUnsupportedException">
            Thrown if RiakObjectId has a bucket type. 
            Combining linkwalking and bucket types is not supported.
            </exception>
        </member>
        <member name="M:RiakClient.Models.RiakObject.RemoveLinks(RiakClient.Models.RiakObjectId)">
            <summary>
            Remove all links from this object that link to <paramref name="riakObjectId"/>.
            </summary>
            <param name="riakObjectId">The other object's Id.</param>
            <exception cref="T:RiakClient.Exceptions.RiakUnsupportedException">
            Thrown if RiakObjectId has a bucket type. 
            Combining linkwalking and bucket types is not supported.
            </exception>
        </member>
        <member name="M:RiakClient.Models.RiakObject.ToRiakObjectId">
            <summary>
            Get the Id for this object.
            </summary>
            <returns>The object Id.</returns>
        </member>
        <member name="M:RiakClient.Models.RiakObject.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><b>true</b> if the specified object is equal to the current object, otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:RiakClient.Models.RiakObject.Equals(RiakClient.Models.RiakObject)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="other">The object to compare with the current object.</param>
            <returns><b>true</b> if the specified object is equal to the current object, otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:RiakClient.Models.RiakObject.GetHashCode">
            <summary>
            Returns a hash code for the current object.
            Uses a combination of the public properties to generate a unique hash code.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:RiakClient.Models.RiakObject.SetObject``1(``0,RiakClient.Models.SerializeObjectToString{``0})">
            <summary>
            Set the object's value, after serializing it with the provided serializer.
            </summary>
            <typeparam name="T">The type of the value.</typeparam>
            <param name="value">The unserialized value.</param>
            <param name="serializeObject">A delegate to handle serialization of an object to a string.</param>
        </member>
        <member name="M:RiakClient.Models.RiakObject.SetObject``1(``0,System.String,RiakClient.Models.SerializeObjectToString{``0})">
            <summary>
            Set the object's value, after serializing it with the provided serializer.
            </summary>
            <typeparam name="T">The type of the value.</typeparam>
            <param name="value">The unserialized value.</param>
            <param name="contentType">The content type of the object.</param>
            <param name="serializeObject">A delegate to handle serialization of an object to a string.</param>
        </member>
        <member name="M:RiakClient.Models.RiakObject.SetObject``1(``0,RiakClient.Models.SerializeObjectToByteArray{``0})">
            <summary>
            Set the object's value, after serializing it with the provided serializer.
            </summary>
            <typeparam name="T">The type of the value.</typeparam>
            <param name="value">The unserialized value.</param>
            <param name="serializeObject">A delegate to handle serialization of an object to a string.</param>
        </member>
        <member name="M:RiakClient.Models.RiakObject.SetObject``1(``0,System.String,RiakClient.Models.SerializeObjectToByteArray{``0})">
            <summary>
            Set the object's value, after serializing it with the provided serializer.
            </summary>
            <typeparam name="T">The type of the value.</typeparam>
            <param name="value">The unserialized value.</param>
            <param name="contentType">The content type of the object.</param>
            <param name="serializeObject">A delegate to handle serialization of an object to a string.</param>
        </member>
        <member name="M:RiakClient.Models.RiakObject.SetObject``1(``0,System.String)">
            <summary>
            Set the object's value, after serializing it.
            </summary>
            <typeparam name="T">The type of the value.</typeparam>
            <param name="value">The unserialized value.</param>
            <param name="contentType">The content type of the object.</param>
            <remarks>
            This overload will choose its serializer based on the <paramref name="contentType"/>.
            Supported types for this overload are: <see cref="F:RiakClient.RiakConstants.ContentTypes.ApplicationJson"/>,
            <see cref="F:RiakClient.RiakConstants.ContentTypes.ProtocolBuffers"/>
            <see cref="F:RiakClient.RiakConstants.ContentTypes.Xml"/>
            and text.
            </remarks>
        </member>
        <member name="M:RiakClient.Models.RiakObject.GetObject``1(RiakClient.Models.DeserializeObject{``0},RiakClient.Models.ResolveConflict{``0})">
            <summary>
            Deserializes and returns the object's value, using the provided deserializer. 
            </summary>
            <typeparam name="T">The value's target type.</typeparam>
            <param name="deserializeObject">A delegate to handle deserialization of an byte[] serialized object to it's original type.</param>
            <param name="resolveConflict">
            A delegate to handle resolution of sibling objects. 
            Takes all the sibling objects as input and returns one "resolved" object.
            </param>
            <returns>The deserialized value.</returns>
        </member>
        <member name="M:RiakClient.Models.RiakObject.GetObject``1">
            <summary>
            Deserializes and returns the object's value.
            </summary>
            <typeparam name="T">The value's target type.</typeparam>
            <returns>The deserialized value.</returns>
            <remarks>
            This overload will choose its deserializer based on the object's <see cref="P:RiakClient.Models.RiakObject.ContentType"/> property.
            Supported types for this overload are: <see cref="F:RiakClient.RiakConstants.ContentTypes.ApplicationJson"/>,
            <see cref="F:RiakClient.RiakConstants.ContentTypes.ProtocolBuffers"/>, and <see cref="F:RiakClient.RiakConstants.ContentTypes.Xml"/>.
            </remarks>
        </member>
        <member name="M:RiakClient.Models.RiakObject.ThrowIfMixingBucketTypesAndLinks(System.String)">
            <summary>
            Helper method to check if we're mixing bucket types and links.
            Throws exception if we are.
            </summary>
            <param name="otherBucketType">The other bucket type parameter to check.</param>
            <exception cref="T:RiakClient.Exceptions.RiakUnsupportedException">
            Thrown if RiakObjectId has a bucket type. 
            Combining linkwalking and bucket types is not supported.
            </exception>
        </member>
        <member name="M:RiakClient.Models.RiakObject.CalculateHashCode">
            <summary>
            This was moved into its own function that isn't virtual so that it could
            be called inside the object's constructor.
            </summary>
            <returns>The Object's hash code.</returns>
        </member>
        <member name="P:RiakClient.Models.RiakObject.BucketType">
            <summary>
            Get the Bucket Type (if any). 
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakObject.Bucket">
            <summary>
            Get the Bucket name.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakObject.Key">
            <summary>
            Get the Key.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakObject.Value">
            <summary>
            Get the raw value, as a byte[].
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakObject.ContentEncoding">
            <summary>
            Get the ContentEncoding. 
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakObject.ContentType">
            <summary>
            Get the Content Type (MIME Type).
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakObject.CharSet">
            <summary>
            Get the CharSet encoding, if set.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakObject.VectorClock">
            <summary>
            Get the Vector Clock.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakObject.VTag">
            <summary>
            Get the VTag.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakObject.UserMetaData">
            <summary>
            Get any user set MetaData.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakObject.LastModified">
            <summary>
            Get the Last Modified unix timestamp. 
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakObject.LastModifiedUsec">
            <summary>
            Get the Last Modified unix timestamp in microseconds.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakObject.Links">
            <summary>
            Get the list of Links to other Riak objects. 
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakObject.Siblings">
            <summary>
            Get a list of conflicting Sibling objects. 
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakObject.IntIndexes">
            <summary>
            Get the collection of Integer secondary indexes for this object.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakObject.BinIndexes">
            <summary>
            Get the collection of string (binary) secondary indexes for this object.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakObject.HasChanged">
            <summary>
            Check to see if the object has changed since it was fetched.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakObject.VTags">
            <summary>
            Get the VTags.
            </summary>
        </member>
        <member name="T:RiakClient.Models.RiakPutOptions">
            <summary>
            A collection of optional settings for updating objects from Riak.
            </summary>
        </member>
        <member name="M:RiakClient.Models.RiakPutOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.RiakPutOptions"/> class.
            Uses the "default" quorum settings for W, PW, and DW settings.
            </summary>
        </member>
        <member name="M:RiakClient.Models.RiakPutOptions.SetIfNotModified(System.Boolean)">
            <summary>
            Fluent setter for the <see cref="P:RiakClient.Models.RiakPutOptions.IfNotModified"/> property.
            </summary>
            <param name="value">The value to set the property to.</param>
            <returns>A reference to the current properties object.</returns>
        </member>
        <member name="M:RiakClient.Models.RiakPutOptions.SetIfNoneMatch(System.Boolean)">
            <summary>
            Fluent setter for the <see cref="M:RiakClient.Models.RiakPutOptions.SetIfNoneMatch(System.Boolean)"/> property.
            </summary>
            <param name="value">The value to set the property to.</param>
            <returns>A reference to the current properties object.</returns>
        </member>
        <member name="M:RiakClient.Models.RiakPutOptions.SetReturnBody(System.Boolean)">
            <summary>
            Fluent setter for the <see cref="M:RiakClient.Models.RiakPutOptions.SetReturnBody(System.Boolean)"/> property.
            </summary>
            <param name="value">The value to set the property to.</param>
            <returns>A reference to the current properties object.</returns>
        </member>
        <member name="M:RiakClient.Models.RiakPutOptions.SetReturnHead(System.Boolean)">
            <summary>
            Fluent setter for the <see cref="M:RiakClient.Models.RiakPutOptions.SetReturnHead(System.Boolean)"/> property.
            </summary>
            <param name="value">The value to set the property to.</param>
            <returns>A reference to the current properties object.</returns>
        </member>
        <member name="P:RiakClient.Models.RiakPutOptions.ReturnBody">
            <summary>
            After an update, return the body along with the metadata when set to <b>true</b>. 
            Default is <b>false</b>.
            </summary>
            <remarks>
            Note that when set to <b>true</b>, Riak will also return all siblings.
            </remarks>
        </member>
        <member name="P:RiakClient.Models.RiakPutOptions.IfNotModified">
            <summary>
            Update the value only if the local vclock matches the server vclock.
            </summary>
            <remarks>
            Note: This does not guarantee any linearizable properties, as a concurrent update could occur
            on a different node, which would result in siblings or an overwritten object depending on
            your last_write_wins and allow_mult settings.
            </remarks>
        </member>
        <member name="P:RiakClient.Models.RiakPutOptions.IfNoneMatch">
            <summary>
            Store the value only if there is no object already present with the same <see cref="T:RiakClient.Models.RiakObjectId"/>.
            </summary>
            <remarks>
            Note: This does not guarantee any linearizable properties, as a concurrent update could occur
            on a different node, which would result in siblings or an overwritten object depending on
            your last_write_wins and allow_mult settings.
            </remarks>
        </member>
        <member name="P:RiakClient.Models.RiakPutOptions.ReturnHead">
            <summary>
            Return the metadata only.
            When set to <b>true</b>, Riak will only return the updated object's metadata, and omit its body.
            </summary>
            <remarks>
            This allows you to get the updated metadata back without also returning a potentially large value.
            </remarks>
        </member>
        <member name="T:RiakClient.Models.RiakServerInfo">
            <summary>
            A collection of server info that can be queried from a single Riak node.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakServerInfo.Node">
            <summary>
            The Riak node's "name".
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakServerInfo.Version">
            <summary>
            The Riak node's version string.
            </summary>
        </member>
        <member name="T:RiakClient.Models.RiakCounterUpdateOptions">
            <summary>
            A collection of options that can be modified when updating a 1.4-style counter in Riak.
            </summary>
        </member>
        <member name="M:RiakClient.Models.RiakCounterUpdateOptions.SetReturnValue(System.Boolean)">
            <summary>
            A fluent setter for the <see cref="P:RiakClient.Models.RiakCounterUpdateOptions.ReturnValue"/> property.
            Sets whether or not the updated value should be returned from the counter.
            </summary>
            <param name="value">The value to set the property to.</param>
            <returns>A reference to the current options object.</returns>
        </member>
        <member name="P:RiakClient.Models.RiakCounterUpdateOptions.ReturnValue">
            <summary>
            Whether or not the updated value should be returned from the counter
            </summary>
        </member>
        <member name="T:RiakClient.Models.Search.BinaryTerm">
            <summary>
            Represents a Lucene "binary" search term, such as AND &amp; OR.
            </summary>
        </member>
        <member name="T:RiakClient.Models.Search.Term">
            <summary>
            Represents an abstract Lucene search term.
            </summary>
        </member>
        <member name="M:RiakClient.Models.Search.Term.Build">
            <summary>
            Builds the Term into a new <see cref="T:RiakClient.Models.Search.RiakFluentSearch"/> object.
            </summary>
            <returns>A configured <see cref="T:RiakClient.Models.Search.RiakFluentSearch"/> object.</returns>
        </member>
        <member name="M:RiakClient.Models.Search.Term.Boost(System.Double)">
            <summary>
            Boosts the relevance level of the this Term when matches are found.
            </summary>
            <param name="boost">The amount to set this Term's boost value to.</param>
            <returns>A boosted <see cref="T:RiakClient.Models.Search.Term"/>.</returns>
            <remarks>The default boost value is 1.0.</remarks>
        </member>
        <member name="M:RiakClient.Models.Search.Term.Not">
            <summary>
            Inverts any matches so that the documents found by this Term are excluded from the result set.
            </summary>
            <returns>An inverted Term.</returns>
        </member>
        <member name="M:RiakClient.Models.Search.Term.Or(System.String)">
            <summary>
            Combines this Term, using a logical OR, with a new one 
            searching this Term's field for the provided <paramref name="value"/> string.
            </summary>
            <param name="value">The other value to match.</param>
            <returns>
            A new <see cref="T:RiakClient.Models.Search.BinaryTerm"/> based on this Term and the provided <paramref name="value"/>.
            </returns>
        </member>
        <member name="M:RiakClient.Models.Search.Term.Or(RiakClient.Models.Search.Token)">
            <summary>
            Combines this Term, using a logical OR, with a new one searching 
            this Term's field for the provided <paramref name="value"/> Token.
            </summary>
            <param name="value">The other value to match.</param>
            <returns>
            A new <see cref="T:RiakClient.Models.Search.BinaryTerm"/> based on this Term and the provided <paramref name="value"/>.
            </returns>
        </member>
        <member name="M:RiakClient.Models.Search.Term.Or(System.String,System.String)">
            <summary>
            Combines this Term, using a logical OR, with a new one searching the <paramref name="field"/> 
            field for <paramref name="value"/> string.
            </summary>
            <param name="field">The other field to search.</param>
            <param name="value">The other value to match.</param>
            <returns>
            A new <see cref="T:RiakClient.Models.Search.BinaryTerm"/> based on this Term and the provided <paramref name="value"/>.
            </returns>
        </member>
        <member name="M:RiakClient.Models.Search.Term.Or(System.String,RiakClient.Models.Search.Token)">
            <summary>
            Combines this Term, using a logical OR, with a new one searching 
            the <paramref name="field"/> field for the <paramref name="value"/> Token.
            </summary>
            <param name="field">The other field to search.</param>
            <param name="value">The other value to match.</param>
            <returns>
            A new <see cref="T:RiakClient.Models.Search.BinaryTerm"/> based on this Term and the provided <paramref name="value"/>.
            </returns>
        </member>
        <member name="M:RiakClient.Models.Search.Term.OrBetween(System.String,System.String,System.Boolean)">
            <summary>
            Combines this Term, using a logical OR, with a new Range Term
            searching the current field for values between <paramref name="from"/>
            and <paramref name="to"/>.
            </summary>
            <param name="from">The lower bound of values to search for.</param>
            <param name="to">The upper bound of values to search for.</param>
            <param name="inclusive">The option to include the bounds in the range or not.</param>
            <returns>
            A new <see cref="T:RiakClient.Models.Search.BinaryTerm"/> based on this Term and the provided parameters.
            </returns>
        </member>
        <member name="M:RiakClient.Models.Search.Term.OrBetween(System.String,RiakClient.Models.Search.Token,System.Boolean)">
            <summary>
            Combine this Term, using a logical OR, with a new Range Term
            searching the current field for values between <paramref name="from"/>
            and <paramref name="to"/>.
            </summary>
            <param name="from">The lower bound of values to search for.</param>
            <param name="to">The upper bound of values to search for.</param>
            <param name="inclusive">The option to include the bounds in the range or not.</param>
            <returns>
            A new <see cref="T:RiakClient.Models.Search.BinaryTerm"/> based on this Term and the provided parameters.
            </returns>
        </member>
        <member name="M:RiakClient.Models.Search.Term.OrBetween(RiakClient.Models.Search.Token,System.String,System.Boolean)">
            <summary>
            Combine this Term, using a logical OR, with a new Range Term
            searching the current field for values between <paramref name="from"/>
            and <paramref name="to"/>.
            </summary>
            <param name="from">The lower bound of values to search for.</param>
            <param name="to">The upper bound of values to search for.</param>
            <param name="inclusive">The option to include the bounds in the range or not.</param>
            <returns>
            A new <see cref="T:RiakClient.Models.Search.BinaryTerm"/> based on this Term and the provided parameters.
            </returns>
        </member>
        <member name="M:RiakClient.Models.Search.Term.OrBetween(RiakClient.Models.Search.Token,RiakClient.Models.Search.Token,System.Boolean)">
            <summary>
            Combine this Term, using a logical Or, with a new Range Term
            searching the current field for values between <paramref name="from"/>
            and <paramref name="to"/>.
            </summary>
            <param name="from">The lower bound of values to search for.</param>
            <param name="to">The upper bound of values to search for.</param>
            <param name="inclusive">The option to include the bounds in the range or not.</param>
            <returns>
            A new <see cref="T:RiakClient.Models.Search.BinaryTerm"/> based on this Term and the provided parameters.
            </returns>
        </member>
        <member name="M:RiakClient.Models.Search.Term.OrBetween(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Combine this Term, using a logical OR, with a new Range Term
            searching <paramref name="field"/> for values between <paramref name="from"/>
            and <paramref name="to"/>.
            </summary>
            <param name="field">The other field to search.</param>
            <param name="from">The lower bound of values to search for.</param>
            <param name="to">The upper bound of values to search for.</param>
            <param name="inclusive">The option to include the bounds in the range or not.</param>
            <returns>
            A new <see cref="T:RiakClient.Models.Search.BinaryTerm"/> based on this Term and the provided parameters.
            </returns>
        </member>
        <member name="M:RiakClient.Models.Search.Term.OrBetween(System.String,System.String,RiakClient.Models.Search.Token,System.Boolean)">
            <summary>
            Combine this Term, using a logical OR, with a new Range Term
            searching <paramref name="field"/> for values between <paramref name="from"/>
            and <paramref name="to"/>.
            </summary>
            <param name="field">The other field to search.</param>
            <param name="from">The lower bound of values to search for.</param>
            <param name="to">The upper bound of values to search for.</param>
            <param name="inclusive">The option to include the bounds in the range or not.</param>
            <returns>
            A new <see cref="T:RiakClient.Models.Search.BinaryTerm"/> based on this Term and the provided parameters.
            </returns>
        </member>
        <member name="M:RiakClient.Models.Search.Term.OrBetween(System.String,RiakClient.Models.Search.Token,System.String,System.Boolean)">
            <summary>
            Combine this Term, using a logical OR, with a new Range Term
            searching <paramref name="field"/> for values between <paramref name="from"/>
            and <paramref name="to"/>.
            </summary>
            <param name="field">The other field to search.</param>
            <param name="from">The lower bound of values to search for.</param>
            <param name="to">The upper bound of values to search for.</param>
            <param name="inclusive">The option to include the bounds in the range or not.</param>
            <returns>
            A new <see cref="T:RiakClient.Models.Search.BinaryTerm"/> based on this Term and the provided parameters.
            </returns>
        </member>
        <member name="M:RiakClient.Models.Search.Term.OrBetween(System.String,RiakClient.Models.Search.Token,RiakClient.Models.Search.Token,System.Boolean)">
            <summary>
            Combine this Term, using a logical OR, with a new Range Term
            searching <paramref name="field"/> for values between <paramref name="from"/>
            and <paramref name="to"/>.
            </summary>
            <param name="field">The other field to search.</param>
            <param name="from">The lower bound of values to search for.</param>
            <param name="to">The upper bound of values to search for.</param>
            <param name="inclusive">The option to include the bounds in the range or not.</param>
            <returns>
            A new <see cref="T:RiakClient.Models.Search.BinaryTerm"/> based on this Term and the provided parameters.
            </returns>
        </member>
        <member name="M:RiakClient.Models.Search.Term.Or(System.String,System.Func{RiakClient.Models.Search.Term,RiakClient.Models.Search.Term})">
            <summary>
            Combines a Term searching this field for the <paramref name="value"/> string, using a logical OR, 
            with another Term generated by the <paramref name="groupSetup"/> Func.
            </summary>
            <param name="value">The value to match using the current field.</param>
            <param name="groupSetup">
            A <see cref="T:System.Func`2"/> that accepts a <see cref="T:RiakClient.Models.Search.Term"/> for fluent configuration,
            and returns a configured <see cref="T:RiakClient.Models.Search.Term"/>. 
            </param>
            <returns>
            A new <see cref="T:RiakClient.Models.Search.BinaryTerm"/> based on the two created <see cref="T:RiakClient.Models.Search.Term"/>s.
            </returns>
        </member>
        <member name="M:RiakClient.Models.Search.Term.Or(RiakClient.Models.Search.Token,System.Func{RiakClient.Models.Search.Term,RiakClient.Models.Search.Term})">
            <summary>
            Combines a Term searching this field for the <paramref name="value"/> Token, using a logical OR, 
            with another Term generated by the <paramref name="groupSetup"/> Func.
            </summary>
            <param name="value">The value to match using the current field.</param>
            <param name="groupSetup">
            A <see cref="T:System.Func`2"/> that accepts a <see cref="T:RiakClient.Models.Search.Term"/> for fluent configuration,
            and returns a configured <see cref="T:RiakClient.Models.Search.Term"/>. 
            </param>
            <returns>
            A new <see cref="T:RiakClient.Models.Search.BinaryTerm"/> based on the two created <see cref="T:RiakClient.Models.Search.Term"/>s.
            </returns>
        </member>
        <member name="M:RiakClient.Models.Search.Term.Or(System.String,System.String,System.Func{RiakClient.Models.Search.Term,RiakClient.Models.Search.Term})">
            <summary>
            Combines a Term searching the <paramref name="field"/> field for the <paramref name="value"/> string, 
            using a logical OR, with another Term generated by the <paramref name="groupSetup"/> Func.
            </summary>
            <param name="field">The other field to search.</param>
            <param name="value">The other value to match.</param>
            <param name="groupSetup">
            A <see cref="T:System.Func`2"/> that accepts a <see cref="T:RiakClient.Models.Search.Term"/> for fluent configuration,
            and returns a configured <see cref="T:RiakClient.Models.Search.Term"/>. 
            </param>
            <returns>
            A new <see cref="T:RiakClient.Models.Search.BinaryTerm"/> based on the two created <see cref="T:RiakClient.Models.Search.Term"/>s.
            </returns>
        </member>
        <member name="M:RiakClient.Models.Search.Term.Or(System.String,RiakClient.Models.Search.Token,System.Func{RiakClient.Models.Search.Term,RiakClient.Models.Search.Term})">
            <summary>
            Combines a Term searching the <paramref name="field"/> field for the <paramref name="value"/> Token, 
            using a logical OR, with another Term generated by the <paramref name="groupSetup"/> Func.
            </summary>
            <param name="field">The other field to search.</param>
            <param name="value">The other value to match.</param>
            <param name="groupSetup">
            A <see cref="T:System.Func`2"/> that accepts a <see cref="T:RiakClient.Models.Search.Term"/> for fluent configuration,
            and returns a configured <see cref="T:RiakClient.Models.Search.Term"/>. 
            </param>
            <returns>
            A new <see cref="T:RiakClient.Models.Search.BinaryTerm"/> based on the two created <see cref="T:RiakClient.Models.Search.Term"/>s.
            </returns>
        </member>
        <member name="M:RiakClient.Models.Search.Term.And(System.String)">
            <summary>
            Combines this Term, using a logical AND, with a new one searching this 
            Term's field for the provided <paramref name="value"/> string.
            </summary>
            <param name="value">The other value to match.</param>
            <returns>
            A new <see cref="T:RiakClient.Models.Search.BinaryTerm"/> based on this Term and the provided <paramref name="value"/>.
            </returns>
        </member>
        <member name="M:RiakClient.Models.Search.Term.And(RiakClient.Models.Search.Token)">
            <summary>
            Combines this Term, using a logical AND, with a new one searching this 
            Term's field for the provided <paramref name="value"/> Token.
            </summary>
            <param name="value">The other value to match.</param>
            <returns>
            A new <see cref="T:RiakClient.Models.Search.BinaryTerm"/> based on this Term and the provided <paramref name="value"/>.
            </returns>
        </member>
        <member name="M:RiakClient.Models.Search.Term.And(System.String,System.String)">
            <summary>
            Combines this Term, using a logical AND, with a new one searching the 
            <paramref name="field"/> field for the provided <paramref name="value"/> string.
            </summary>
            <param name="field">The other field to search.</param>
            <param name="value">The other value to match.</param>
            <returns>
            A new <see cref="T:RiakClient.Models.Search.BinaryTerm"/> based on this Term and the provided <paramref name="value"/>.
            </returns>
        </member>
        <member name="M:RiakClient.Models.Search.Term.And(System.String,RiakClient.Models.Search.Token)">
            <summary>
            Combines this Term, using a logical AND, with a new one searching the 
            <paramref name="field"/> field for the provided <paramref name="value"/> Token.
            </summary>
            <param name="field">The other field to search.</param>
            <param name="value">The other value to match.</param>
            <returns>
            A new <see cref="T:RiakClient.Models.Search.BinaryTerm"/> based on this Term and the provided <paramref name="value"/>.
            </returns>
        </member>
        <member name="M:RiakClient.Models.Search.Term.AndBetween(System.String,System.String,System.Boolean)">
            <summary>
            Combine this Term, using a logical AND, with a new Range Term
            searching the current field for values between <paramref name="from"/>
            and <paramref name="to"/>.
            </summary>
            <param name="from">The lower bound of values to search for.</param>
            <param name="to">The upper bound of values to search for.</param>
            <param name="inclusive">The option to include the bounds in the range or not.</param>
            <returns>
            A new <see cref="T:RiakClient.Models.Search.BinaryTerm"/> based on this Term and the provided parameters.
            </returns>
        </member>
        <member name="M:RiakClient.Models.Search.Term.AndBetween(System.String,RiakClient.Models.Search.Token,System.Boolean)">
            <summary>
            Combine this Term, using a logical AND, with a new Range Term
            searching the current field for values between <paramref name="from"/>
            and <paramref name="to"/>.
            </summary>
            <param name="from">The lower bound of values to search for.</param>
            <param name="to">The upper bound of values to search for.</param>
            <param name="inclusive">The option to include the bounds in the range or not.</param>
            <returns>
            A new <see cref="T:RiakClient.Models.Search.BinaryTerm"/> based on this Term and the provided parameters.
            </returns>
        </member>
        <member name="M:RiakClient.Models.Search.Term.AndBetween(RiakClient.Models.Search.Token,System.String,System.Boolean)">
            <summary>
            Combine this Term, using a logical AND, with a new Range Term
            searching the current field for values between <paramref name="from"/>
            and <paramref name="to"/>.
            </summary>
            <param name="from">The lower bound of values to search for.</param>
            <param name="to">The upper bound of values to search for.</param>
            <param name="inclusive">The option to include the bounds in the range or not.</param>
            <returns>
            A new <see cref="T:RiakClient.Models.Search.BinaryTerm"/> based on this Term and the provided parameters.
            </returns>
        </member>
        <member name="M:RiakClient.Models.Search.Term.AndBetween(RiakClient.Models.Search.Token,RiakClient.Models.Search.Token,System.Boolean)">
            <summary>
            Combine this Term, using a logical AND, with a new Range Term
            searching the current field for values between <paramref name="from"/>
            and <paramref name="to"/>.
            </summary>
            <param name="from">The lower bound of values to search for.</param>
            <param name="to">The upper bound of values to search for.</param>
            <param name="inclusive">The option to include the bounds in the range or not.</param>
            <returns>
            A new <see cref="T:RiakClient.Models.Search.BinaryTerm"/> based on this Term and the provided parameters.
            </returns>
        </member>
        <member name="M:RiakClient.Models.Search.Term.AndBetween(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Combine this Term, using a logical AND, with a new Range Term
            searching <paramref name="field"/> for values between <paramref name="from"/>
            and <paramref name="to"/>.
            </summary>
            <param name="field">The other field to search.</param>
            <param name="from">The lower bound of values to search for.</param>
            <param name="to">The upper bound of values to search for.</param>
            <param name="inclusive">The option to include the bounds in the range or not.</param>
            <returns>
            A new <see cref="T:RiakClient.Models.Search.BinaryTerm"/> based on this Term and the provided parameters.
            </returns>
        </member>
        <member name="M:RiakClient.Models.Search.Term.AndBetween(System.String,System.String,RiakClient.Models.Search.Token,System.Boolean)">
            <summary>
            Combine this Term, using a logical AND, with a new Range Term
            searching <paramref name="field"/> for values between <paramref name="from"/>
            and <paramref name="to"/>.
            </summary>
            <param name="field">The other field to search.</param>
            <param name="from">The lower bound of values to search for.</param>
            <param name="to">The upper bound of values to search for.</param>
            <param name="inclusive">The option to include the bounds in the range or not.</param>
            <returns>
            A new <see cref="T:RiakClient.Models.Search.BinaryTerm"/> based on this Term and the provided parameters.
            </returns>
        </member>
        <member name="M:RiakClient.Models.Search.Term.AndBetween(System.String,RiakClient.Models.Search.Token,System.String,System.Boolean)">
            <summary>
            Combine this Term, using a logical AND, with a new Range Term
            searching <paramref name="field"/> for values between <paramref name="from"/>
            and <paramref name="to"/>.
            </summary>
            <param name="field">The other field to search.</param>
            <param name="from">The lower bound of values to search for.</param>
            <param name="to">The upper bound of values to search for.</param>
            <param name="inclusive">The option to include the bounds in the range or not.</param>
            <returns>
            A new <see cref="T:RiakClient.Models.Search.BinaryTerm"/> based on this Term and the provided parameters.
            </returns>
        </member>
        <member name="M:RiakClient.Models.Search.Term.AndBetween(System.String,RiakClient.Models.Search.Token,RiakClient.Models.Search.Token,System.Boolean)">
            <summary>
            Combine this Term, using a logical AND, with a new Range Term
            searching <paramref name="field"/> for values between <paramref name="from"/>
            and <paramref name="to"/>.
            </summary>
            <param name="field">The other field to search.</param>
            <param name="from">The lower bound of values to search for.</param>
            <param name="to">The upper bound of values to search for.</param>
            <param name="inclusive">The option to include the bounds in the range or not.</param>
            <returns>
            A new <see cref="T:RiakClient.Models.Search.BinaryTerm"/> based on this Term and the provided parameters.
            </returns>
        </member>
        <member name="M:RiakClient.Models.Search.Term.And(System.String,System.Func{RiakClient.Models.Search.Term,RiakClient.Models.Search.Term})">
            <summary>
            Combines a Term searching this field for the <paramref name="value"/> string, using a logical AND, 
            with another Term generated by the <paramref name="groupSetup"/> Func.
            </summary>
            <param name="value">The value to match using the current field.</param>
            <param name="groupSetup">
            A <see cref="T:System.Func`2"/> that accepts a <see cref="T:RiakClient.Models.Search.Term"/> for fluent configuration,
            and returns a configured <see cref="T:RiakClient.Models.Search.Term"/>. 
            </param>
            <returns>
            A new <see cref="T:RiakClient.Models.Search.BinaryTerm"/> based on the two created <see cref="T:RiakClient.Models.Search.Term"/>s.
            </returns>
        </member>
        <member name="M:RiakClient.Models.Search.Term.And(RiakClient.Models.Search.Token,System.Func{RiakClient.Models.Search.Term,RiakClient.Models.Search.Term})">
            <summary>
            Combines a Term searching this field for the <paramref name="value"/> Token, using a logical AND, 
            with another Term generated by the <paramref name="groupSetup"/> Func.
            </summary>
            <param name="value">The value to match using the current field.</param>
            <param name="groupSetup">
            A <see cref="T:System.Func`2"/> that accepts a <see cref="T:RiakClient.Models.Search.Term"/> for fluent configuration,
            and returns a configured <see cref="T:RiakClient.Models.Search.Term"/>. 
            </param>
            <returns>
            A new <see cref="T:RiakClient.Models.Search.BinaryTerm"/> based on the two created <see cref="T:RiakClient.Models.Search.Term"/>s.
            </returns>
        </member>
        <member name="M:RiakClient.Models.Search.Term.And(System.String,System.String,System.Func{RiakClient.Models.Search.Term,RiakClient.Models.Search.Term})">
            <summary>
            Combines a Term searching the <paramref name="field"/> field for the <paramref name="value"/> string, 
            using a logical AND, with another Term generated by the <paramref name="groupSetup"/> Func.
            </summary>
            <param name="field">The other field to search.</param>
            <param name="value">The other value to match.</param>
            <param name="groupSetup">
            A <see cref="T:System.Func`2"/> that accepts a <see cref="T:RiakClient.Models.Search.Term"/> for fluent configuration,
            and returns a configured <see cref="T:RiakClient.Models.Search.Term"/>. 
            </param>
            <returns>
            A new <see cref="T:RiakClient.Models.Search.BinaryTerm"/> based on the two created <see cref="T:RiakClient.Models.Search.Term"/>s.
            </returns>
        </member>
        <member name="M:RiakClient.Models.Search.Term.And(System.String,RiakClient.Models.Search.Token,System.Func{RiakClient.Models.Search.Term,RiakClient.Models.Search.Term})">
            <summary>
            Combines a Term searching the <paramref name="field"/> field for the <paramref name="value"/> Token, 
            using a logical AND, with another Term generated by the <paramref name="groupSetup"/> Func.
            </summary>
            <param name="field">The other field to search.</param>
            <param name="value">The other value to match.</param>
            <param name="groupSetup">
            A <see cref="T:System.Func`2"/> that accepts a <see cref="T:RiakClient.Models.Search.Term"/> for fluent configuration,
            and returns a configured <see cref="T:RiakClient.Models.Search.Term"/>. 
            </param>
            <returns>
            A new <see cref="T:RiakClient.Models.Search.BinaryTerm"/> based on the two created <see cref="T:RiakClient.Models.Search.Term"/>s.
            </returns>
        </member>
        <member name="M:RiakClient.Models.Search.Term.AndProximity(System.Double,System.String[])">
            <summary>
            Combine this Term, using a logical AND, with a new one that searches the current field 
            for a set of <paramref name="words"/> that are within a certain distance 
            (<paramref name="proximity"/>) of each other.
            </summary>
            <param name="proximity">The maximum distance the words can be from each other.</param>
            <param name="words">The set of words to find within a certain distance of each other.</param>
            <returns>A constructed search <see cref="T:RiakClient.Models.Search.Term"/>.</returns>
        </member>
        <member name="M:RiakClient.Models.Search.Term.AndProximity(System.String,System.Double,System.String[])">
            <summary>
            Combine this Term, using a logical AND, with a new one that searches the <paramref name="field"/> 
             field for a set of <paramref name="words"/> that are within a certain distance 
            (<paramref name="proximity"/>) of each other.
            </summary>
            <param name="field">The other field to search.</param>
            <param name="proximity">The maximum distance the words can be from each other.</param>
            <param name="words">The set of words to find within a certain distance of each other.</param>
            <returns>A constructed search <see cref="T:RiakClient.Models.Search.Term"/>.</returns>
        </member>
        <member name="M:RiakClient.Models.Search.Term.OrProximity(System.Double,System.String[])">
            <summary>
            Combine this Term, using a logical OR, with a new one that searches the current field 
            for a set of <paramref name="words"/> that are within a certain distance 
            (<paramref name="proximity"/>) of each other.
            </summary>
            <param name="proximity">The maximum distance the words can be from each other.</param>
            <param name="words">The set of words to find within a certain distance of each other.</param>
            <returns>A constructed search <see cref="T:RiakClient.Models.Search.Term"/>.</returns>
        </member>
        <member name="M:RiakClient.Models.Search.Term.OrProximity(System.String,System.Double,System.String[])">
            <summary>
            Combine this Term, using a logical OR, with a new one that searches the <paramref name="field"/> 
             field for a set of <paramref name="words"/> that are within a certain distance 
            (<paramref name="proximity"/>) of each other.
            </summary>
            <param name="field">The other field to search.</param>
            <param name="proximity">The maximum distance the words can be from each other.</param>
            <param name="words">The set of words to find within a certain distance of each other.</param>
            <returns>A constructed search <see cref="T:RiakClient.Models.Search.Term"/>.</returns>
        </member>
        <member name="P:RiakClient.Models.Search.Term.Search">
            <summary>
            Returns a new <see cref="T:RiakClient.Models.Search.RiakFluentSearch"/> object based on this Term.
            </summary>
            <returns>A configured <see cref="T:RiakClient.Models.Search.RiakFluentSearch"/> object.</returns>
        </member>
        <member name="M:RiakClient.Models.Search.BinaryTerm.ToString">
            <summary>
            Returns the term in a Lucene query string format.
            </summary>
            <returns>
            A string that represents the query term.</returns>
        </member>
        <member name="T:RiakClient.Models.Search.GroupTerm">
            <summary>
            Represents a Lucene grouped search term.
            </summary>
        </member>
        <member name="M:RiakClient.Models.Search.GroupTerm.#ctor(RiakClient.Models.Search.RiakFluentSearch,System.String,RiakClient.Models.Search.Term)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.Search.GroupTerm"/> class.
            </summary>
            <param name="search">The fluent search to add this term to.</param>
            <param name="field">The field to search.</param>
            <param name="term">The <see cref="T:RiakClient.Models.Search.Term"/> group to search the <paramref name="field"/> for.</param>
        </member>
        <member name="M:RiakClient.Models.Search.GroupTerm.ToString">
            <summary>
            Returns the term in a Lucene query string format.
            </summary>
            <returns>
            A string that represents the query term.</returns>
        </member>
        <member name="T:RiakClient.Models.Search.ProximityTerm">
            <summary>
            Represents a Lucene "proximity" search term.
            </summary>
        </member>
        <member name="M:RiakClient.Models.Search.ProximityTerm.#ctor(RiakClient.Models.Search.RiakFluentSearch,System.String,System.Double,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.Search.ProximityTerm"/> class.
            </summary>
            <param name="search">The fluent search to add this term to.</param>
            <param name="field">The field to search.</param>
            <param name="proximity">The maximum distance the words can be from each other.</param>
            <param name="words">The set of words to find within a certain distance of each other.</param>
        </member>
        <member name="M:RiakClient.Models.Search.ProximityTerm.ToString">
            <summary>
            Returns the term in a Lucene query string format.
            </summary>
            <returns>
            A string that represents the query term.</returns>
        </member>
        <member name="T:RiakClient.Models.Search.RangeTerm">
            <summary>
            Represents a Lucene "range" search term.
            </summary>
        </member>
        <member name="M:RiakClient.Models.Search.RangeTerm.#ctor(RiakClient.Models.Search.RiakFluentSearch,System.String,RiakClient.Models.Search.Token,RiakClient.Models.Search.Token,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.Search.RangeTerm"/> class.
            </summary>
            <param name="search">The fluent search to add this term to.</param>
            <param name="field">The field to search.</param>
            <param name="from">The lower bound of values to search the <paramref name="field"/> for.</param>
            <param name="to">The upper bound of values to search the <paramref name="field"/> for.</param>
            <param name="inclusive">The option to include the bounds in the range or not.</param>
        </member>
        <member name="M:RiakClient.Models.Search.RangeTerm.ToString">
            <summary>
            Returns the term in a Lucene query string format.
            </summary>
            <returns>A string that represents the query term.</returns>
        </member>
        <member name="T:RiakClient.Models.Search.RiakFluentSearch">
            <summary>
            A builder class for constructing Riak Search queries in a fluent manner.
            </summary>
        </member>
        <member name="M:RiakClient.Models.Search.RiakFluentSearch.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.Search.RiakFluentSearch"/> class.
            </summary>
            <param name="index">The index to run the query against.</param>
            <param name="field">The first field to start building a search term for.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> cannot be null, an empty string, or whitespace.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="field"/> cannot be null, an empty string, or whitespace.</exception>
        </member>
        <member name="M:RiakClient.Models.Search.RiakFluentSearch.Search(System.String)">
            <summary>
            Search the current field for an exact match to the <paramref name="value"/> string.
            </summary>
            <param name="value">The value to search for.</param>
            <returns>A constructed search <see cref="T:RiakClient.Models.Search.Term"/>.</returns>
        </member>
        <member name="M:RiakClient.Models.Search.RiakFluentSearch.Search(RiakClient.Models.Search.Token)">
            <summary>
            Search the current field for an exact match to the <paramref name="value"/> token.
            </summary>
            <param name="value">The token to search for.</param>
            <returns>A constructed search <see cref="T:RiakClient.Models.Search.Term"/>.</returns>
        </member>
        <member name="M:RiakClient.Models.Search.RiakFluentSearch.Group(System.String,System.Func{RiakClient.Models.Search.Term,RiakClient.Models.Search.Term})">
            <summary>
            Search the current field for <paramref name="value"/>, 
            and group that query with another provided by <paramref name="groupSetup"/>.
            </summary>
            <param name="value">The field to search values for.</param>
            <param name="groupSetup">
            An <see cref="T:System.Func`2"/> that accepts a <see cref="T:RiakClient.Models.Search.Term"/> for fluent configuration,
            and returns that configured <see cref="T:RiakClient.Models.Search.Term"/>. 
            </param>
            <returns>A constructed search <see cref="T:RiakClient.Models.Search.Term"/>.</returns>
            <remarks>
            Configure the phase with a lambda similar to:
            <code>new RiakFluentSearch("bucket", "key").Group("foo", t =&gt; t.Or("bar"));</code>
            The above filter will return the following grouped query string: 
            <code>key:(key:foo OR key:bar)</code>.
            </remarks>
        </member>
        <member name="M:RiakClient.Models.Search.RiakFluentSearch.Group(RiakClient.Models.Search.Token,System.Func{RiakClient.Models.Search.Term,RiakClient.Models.Search.Term})">
            <summary>
            Search the current field for the <paramref name="value"/> token,
            and group that query with another provided by <paramref name="groupSetup"/>.
            </summary>
            <param name="value">The token to search values for.</param>
            <param name="groupSetup">
            A <see cref="T:System.Func`2"/> that accepts a <see cref="T:RiakClient.Models.Search.Term"/> for fluent configuration,
            and returns that configured <see cref="T:RiakClient.Models.Search.Term"/>. 
            </param>
            <returns>A constructed search <see cref="T:RiakClient.Models.Search.Term"/>.</returns>
            <remarks>
            Configure the phase with a lambda similar to:
            <code>new RiakFluentSearch("bucket", "key").Group("foo", t =&gt; t.Or("bar"));</code>
            The above filter will return the following grouped query string: 
            <code>key:(key:foo OR key:bar)</code>.
            </remarks>
        </member>
        <member name="M:RiakClient.Models.Search.RiakFluentSearch.Between(System.String,System.String,System.Boolean)">
            <summary>
            Search the current field for values between <paramref name="from"/> and <paramref name="to"/>.
            </summary>
            <param name="from">The lower bound of values to search for.</param>
            <param name="to">The upper bound of values to search for.</param>
            <param name="inclusive">The option to include the bounds in the range or not.</param>
            <returns>A constructed search <see cref="T:RiakClient.Models.Search.Term"/>.</returns>
        </member>
        <member name="M:RiakClient.Models.Search.RiakFluentSearch.Between(RiakClient.Models.Search.Token,System.String,System.Boolean)">
            <summary>
            Search the current field for values between <paramref name="from"/> and <paramref name="to"/>.
            </summary>
            <param name="from">The lower bound of values to search for.</param>
            <param name="to">The upper bound of values to search for.</param>
            <param name="inclusive">The option to include the bounds in the range or not.</param>
            <returns>A constructed search <see cref="T:RiakClient.Models.Search.Term"/>.</returns>
        </member>
        <member name="M:RiakClient.Models.Search.RiakFluentSearch.Between(System.String,RiakClient.Models.Search.Token,System.Boolean)">
            <summary>
            Search the current field for values between <paramref name="from"/> and <paramref name="to"/>.
            </summary>
            <param name="from">The lower bound of values to search for.</param>
            <param name="to">The upper bound of values to search for.</param>
            <param name="inclusive">The option to include the bounds in the range or not.</param>
            <returns>A constructed search <see cref="T:RiakClient.Models.Search.Term"/>.</returns>
        </member>
        <member name="M:RiakClient.Models.Search.RiakFluentSearch.Between(RiakClient.Models.Search.Token,RiakClient.Models.Search.Token,System.Boolean)">
            <summary>
            Search the current field for values between <paramref name="from"/> and <paramref name="to"/>.
            </summary>
            <param name="from">The lower bound of values to search for.</param>
            <param name="to">The upper bound of values to search for.</param>
            <param name="inclusive">The option to include the bounds in the range or not.</param>
            <returns>A constructed search <see cref="T:RiakClient.Models.Search.Term"/>.</returns>
        </member>
        <member name="M:RiakClient.Models.Search.RiakFluentSearch.Proximity(System.Int32,System.String[])">
            <summary>
            Search the current field for a set of <paramref name="words"/> that 
            are within a certain distance (<paramref name="proximity"/>) of each other.
            </summary>
            <param name="proximity">The maximum distance the words can be from each other.</param>
            <param name="words">The set of words to find within a certain distance of each other.</param>
            <returns>A constructed search <see cref="T:RiakClient.Models.Search.Term"/>.</returns>
        </member>
        <member name="M:RiakClient.Models.Search.RiakFluentSearch.Proximity(System.String,System.Int32,System.String[])">
            <summary>
            Search the current field for a set of <paramref name="words"/> that 
            are within a certain distance (<paramref name="proximity"/>) of each other.
            </summary>
            <param name="field">The field to search.</param>
            <param name="proximity">The maximum distance the words can be from each other.</param>
            <param name="words">The set of words to find within a certain distance of each other.</param>
            <returns>A constructed search <see cref="T:RiakClient.Models.Search.Term"/>.</returns>
        </member>
        <member name="M:RiakClient.Models.Search.RiakFluentSearch.ToString">
            <summary>
            Returns the search query in a Lucene query string format.
            </summary>
            <returns>A string that represents the query.</returns>
        </member>
        <member name="P:RiakClient.Models.Search.RiakFluentSearch.Bucket">
            <summary>
            The bucket name to run the query against.
            Used only for Legacy Search.
            </summary>
            <remarks>The <see cref="P:RiakClient.Models.Search.RiakFluentSearch.Index"/> field replaces this one for Legacy Search queries.</remarks>
        </member>
        <member name="P:RiakClient.Models.Search.RiakFluentSearch.Index">
            <summary>
            The index to run the query against.
            </summary>
            <remarks>Replaces the <see cref="P:RiakClient.Models.Search.RiakFluentSearch.Bucket"/> field for Legacy Search queries.</remarks>
        </member>
        <member name="T:RiakClient.Models.Search.PreSort">
            <summary>
            An enumeration of Riak Search result sort orders
            </summary>
        </member>
        <member name="F:RiakClient.Models.Search.PreSort.Key">
            <summary>
            Sort the results by bucket key.
            </summary>
        </member>
        <member name="F:RiakClient.Models.Search.PreSort.Score">
            <summary>
            Sort the results by search score.
            </summary>
        </member>
        <member name="T:RiakClient.Models.Search.DefaultOperation">
            <summary>
            An enumeration of different default search query operators.
            </summary>
        </member>
        <member name="F:RiakClient.Models.Search.DefaultOperation.And">
            <summary>
            The and operator.
            </summary>
        </member>
        <member name="F:RiakClient.Models.Search.DefaultOperation.Or">
            <summary>
            The or operator.
            </summary>
        </member>
        <member name="T:RiakClient.Models.Search.RiakSearchRequest">
            <summary>
            Represents a Riak Search request.
            </summary>
        </member>
        <member name="M:RiakClient.Models.Search.RiakSearchRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.Search.RiakSearchRequest"/> class.
            </summary>
            <remarks>
            Use the <see cref="P:RiakClient.Models.Search.RiakSearchRequest.Query"/> and <see cref="P:RiakClient.Models.Search.RiakSearchRequest.Filter"/> members for specifying
            Solr query and filter.
            </remarks>
        </member>
        <member name="M:RiakClient.Models.Search.RiakSearchRequest.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.Search.RiakSearchRequest"/> class.
            </summary>
            <param name="solrIndex">The name of the Solr index to query.</param>
            <param name="solrQuery">The Solr query.</param>
            <param name="solrFilter">The Solr filter to use. Defaults to <c>null</c>.</param>
            <exception cref="T:System.ArgumentException"><paramref name="solrIndex"/> cannot be null, zero length, or whitespace</exception>
            <exception cref="T:System.ArgumentException"><paramref name="solrQuery"/> cannot be null, zero length, or whitespace</exception>
        </member>
        <member name="M:RiakClient.Models.Search.RiakSearchRequest.#ctor(RiakClient.Models.Search.RiakFluentSearch,RiakClient.Models.Search.RiakFluentSearch)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.Search.RiakSearchRequest"/> class.
            </summary>
            <param name="solrQuery">The Solr query as expressed by an instance of <see cref="T:RiakClient.Models.Search.RiakFluentSearch"/>.</param>
            <param name="solrFilter">The Solr filter as expressed by an instance of <see cref="T:RiakClient.Models.Search.RiakFluentSearch"/>. Defaults to <c>null</c>.</param>
            <exception cref="T:System.ArgumentException"><paramref name="solrIndex"/> cannot be null, zero length, or whitespace</exception>
            <exception cref="T:System.ArgumentException"><paramref name="solrQuery"/> cannot be null, zero length, or whitespace</exception>
        </member>
        <member name="M:RiakClient.Models.Search.RiakSearchRequest.Equals(RiakClient.Models.Search.RiakSearchRequest)">
            <summary>
            Compares two <see cref="T:RiakClient.Models.Search.RiakSearchRequest"/> objects for equality.
            </summary>
            <param name="other">The instance of <see cref="T:RiakClient.Models.Search.RiakSearchRequest"/> with which to compare equality</param>
            <returns><b>true</b> if the specified object is equal to the current object, otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:RiakClient.Models.Search.RiakSearchRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.Models.Search.RiakSearchRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="P:RiakClient.Models.Search.RiakSearchRequest.Query">
            <summary>
            The query to run for the search.
            </summary>
        </member>
        <member name="P:RiakClient.Models.Search.RiakSearchRequest.Filter">
            <summary>
            The filter to use for the search.
            </summary>
        </member>
        <member name="P:RiakClient.Models.Search.RiakSearchRequest.Rows">
            <summary>
            The maximum number of rows to return.
            </summary>
            <remarks>
            Combine with <see cref="P:RiakClient.Models.Search.RiakSearchRequest.Start"/> to implement paging.
            Distributed pagination in Riak Search cannot be used reliably when sorting on fields 
            that can have different values per replica of the same object, namely score and _yz_id. 
            In the case of sorting by these fields, you may receive redundant objects. 
            In the case of score, the top-N can return different results over multiple runs.
            </remarks>
        </member>
        <member name="P:RiakClient.Models.Search.RiakSearchRequest.Start">
            <summary>
            The starting row to return.
            </summary>
            <remarks>
            Combine with <see cref="P:RiakClient.Models.Search.RiakSearchRequest.Rows"/> to implement paging.
            Distributed pagination in Riak Search cannot be used reliably when sorting on fields 
            that can have different values per replica of the same object, namely score and _yz_id. 
            In the case of sorting by these fields, you may receive redundant objects. 
            In the case of score, the top-N can return different results over multiple runs.
            </remarks>
        </member>
        <member name="P:RiakClient.Models.Search.RiakSearchRequest.Sort">
            <summary>
            A <see cref="T:RiakClient.Models.Search.RiakFluentSearch"/> "filter" to run on the query.
            </summary>
            <summary>
            The field to sort on.
            </summary>
        </member>
        <member name="P:RiakClient.Models.Search.RiakSearchRequest.PreSort">
            <summary>
            Presort the results by Key or Score.
            </summary>
        </member>
        <member name="P:RiakClient.Models.Search.RiakSearchRequest.DefaultOperation">
            <summary>
            The default operator for parsing queries.
            </summary>
            <remarks>Defaults to <see cref="P:RiakClient.Models.Search.RiakSearchRequest.DefaultOperation"/>.And if not specified.</remarks>
        </member>
        <member name="P:RiakClient.Models.Search.RiakSearchRequest.ReturnFields">
            <summary>
            The list of fields that should be returned for each record in the result list.
            </summary>
            <remarks>
            The 'id' field is always returned, even if not specified in this list.
            </remarks>
        </member>
        <member name="T:RiakClient.Models.Search.RiakSearchResult">
            <summary>
            Represents the result of a Riak Search operation.
            </summary>
        </member>
        <member name="M:RiakClient.Models.Search.RiakSearchResult.#ctor(System.Single,System.Int64,System.Collections.Generic.IEnumerable{RiakClient.Models.Search.RiakSearchResultDocument})">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.Search.RiakSearchResult"/> class.
            </summary>
            <param name="maxScore">The maximum score out of all the documents found.</param>
            <param name="numFound">The total number of documents found.</param>
            <param name="documents">The documents found.</param>
            <exception cref="T:System.ArgumentNullException">The value of 'documents' cannot be null. </exception>
        </member>
        <member name="P:RiakClient.Models.Search.RiakSearchResult.MaxScore">
            <summary>
            The maximum score of all the matching documents.
            </summary>
        </member>
        <member name="P:RiakClient.Models.Search.RiakSearchResult.NumFound">
            <summary>
            The total number of matching documents found.
            </summary>
        </member>
        <member name="P:RiakClient.Models.Search.RiakSearchResult.Documents">
            <summary>
            The collection of matching documents, represented as a collection of <see cref="T:RiakClient.Models.Search.RiakSearchResultDocument"/>s.
            </summary>
        </member>
        <member name="T:RiakClient.Models.Search.RiakSearchResultDocument">
            <summary>
            Represents a single Riak Search result document.
            </summary>
        </member>
        <member name="P:RiakClient.Models.Search.RiakSearchResultDocument.Id">
            <summary>
            The Id field of the Lucene document.
            </summary>
            <remarks>You will also find this value in the <see cref="P:RiakClient.Models.Search.RiakSearchResultDocument.Fields"/> collection.</remarks>
        </member>
        <member name="P:RiakClient.Models.Search.RiakSearchResultDocument.Score">
            <summary>
            The document match score field.
            </summary>
            <remarks>You will also find this value in the <see cref="P:RiakClient.Models.Search.RiakSearchResultDocument.Fields"/> collection.</remarks>
        </member>
        <member name="P:RiakClient.Models.Search.RiakSearchResultDocument.BucketType">
            <summary>
            The Bucket Type field. Contains the Bucket Type of the matching riak object.
            </summary>
            <remarks>You will also find this value in the <see cref="P:RiakClient.Models.Search.RiakSearchResultDocument.Fields"/> collection.</remarks>
        </member>
        <member name="P:RiakClient.Models.Search.RiakSearchResultDocument.Bucket">
            <summary>
            The Bucket Name field. Contains the Bucket Name of the matching riak object.
            </summary>
            <remarks>You will also find this value in the <see cref="P:RiakClient.Models.Search.RiakSearchResultDocument.Fields"/> collection.</remarks>
        </member>
        <member name="P:RiakClient.Models.Search.RiakSearchResultDocument.Key">
            <summary>
            The Key field. Contains the Key of the matching riak object.
            </summary>
            <remarks>You will also find this value in the <see cref="P:RiakClient.Models.Search.RiakSearchResultDocument.Fields"/> collection.</remarks>
        </member>
        <member name="P:RiakClient.Models.Search.RiakSearchResultDocument.RiakObjectId">
            <summary>
            The <see cref="P:RiakClient.Models.Search.RiakSearchResultDocument.RiakObjectId"/> of the matching riak object.
            </summary>
        </member>
        <member name="P:RiakClient.Models.Search.RiakSearchResultDocument.Fields">
            <summary>
            The collection of <see cref="T:RiakClient.Models.Search.RiakSearchResultField"/>s returned by the search. 
            </summary>
        </member>
        <member name="T:RiakClient.Models.Search.RiakSearchResultField">
            <summary>
            Represents a single Riak Search result field.
            </summary>
        </member>
        <member name="P:RiakClient.Models.Search.RiakSearchResultField.Key">
            <summary>
            The key of the result field.
            </summary>
        </member>
        <member name="P:RiakClient.Models.Search.RiakSearchResultField.Value">
            <summary>
            The value of the result field.
            </summary>
        </member>
        <member name="T:RiakClient.Models.Search.SearchIndexResult">
            <summary>
            Represents the result value for fetching a Riak search index.
            </summary>
        </member>
        <member name="P:RiakClient.Models.Search.SearchIndexResult.Indexes">
            <summary>
            The collection of matching search indexes.
            </summary>
        </member>
        <member name="T:RiakClient.Models.Search.Token">
            <summary>
            Represents a Lucene search token.
            </summary>
        </member>
        <member name="M:RiakClient.Models.Search.Token.Is(System.String)">
            <summary>
            Create a token for searching for field values that exactly match the parameter <paramref name="value"/>.
            </summary>
            <param name="value">The value to search for.</param>
            <returns>A newly initialized and configured <see cref="T:RiakClient.Models.Search.Token"/>.</returns>
        </member>
        <member name="M:RiakClient.Models.Search.Token.StartsWith(System.String)">
            <summary>
            Create a token for searching for field values that start with the parameter <paramref name="value"/>.
            </summary>
            <param name="value">The value to search for.</param>
            <returns>A newly initialized and configured <see cref="T:RiakClient.Models.Search.Token"/>.</returns>
        </member>
        <member name="M:RiakClient.Models.Search.Token.ToString">
            <summary>
            Returns the token in a format acceptable for Lucene query strings.
            </summary>
            <returns>A string that represents the token.</returns>
        </member>
        <member name="T:RiakClient.Models.Search.UnaryTerm">
            <summary>
            Represents a Lucene "unary" search term.
            </summary>
        </member>
        <member name="M:RiakClient.Models.Search.UnaryTerm.#ctor(RiakClient.Models.Search.RiakFluentSearch,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.Search.UnaryTerm"/> class.
            </summary>
            <param name="search">The fluent search to add this term to.</param>
            <param name="field">The field to search.</param>
            <param name="value">The value to search the <paramref name="field"/> for.</param>
        </member>
        <member name="M:RiakClient.Models.Search.UnaryTerm.#ctor(RiakClient.Models.Search.RiakFluentSearch,System.String,RiakClient.Models.Search.Token)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.Search.UnaryTerm"/> class.
            </summary>
            <param name="search">The fluent search to add this term to.</param>
            <param name="field">The field to search.</param>
            <param name="value">The <see cref="T:RiakClient.Models.Search.Token"/> to search the <paramref name="field"/> for.</param>
        </member>
        <member name="M:RiakClient.Models.Search.UnaryTerm.ToString">
            <summary>
            Returns the term in a Lucene query string format.
            </summary>
            <returns>
            A string that represents the query term.</returns>
        </member>
        <member name="T:RiakClient.RiakAsyncClient">
            <summary>
            An asyncronous version of <see cref="T:RiakClient.RiakClient"/>.
            </summary>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.#ctor(RiakClient.IRiakClient)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.RiakAsyncClient"/> class from the specified <see cref="T:RiakClient.IRiakClient"/>.
            </summary>
            <param name="client">The <see cref="T:RiakClient.RiakClient"/> to use for all operations.</param>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.Ping">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.Get(System.String,System.String,RiakClient.Models.RiakGetOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.Get(RiakClient.Models.RiakObjectId,RiakClient.Models.RiakGetOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.Get(System.Collections.Generic.IEnumerable{RiakClient.Models.RiakObjectId},RiakClient.Models.RiakGetOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.IncrementCounter(System.String,System.String,System.Int64,RiakClient.Models.RiakCounterUpdateOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.GetCounter(System.String,System.String,RiakClient.Models.RiakCounterGetOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.Put(System.Collections.Generic.IEnumerable{RiakClient.Models.RiakObject},RiakClient.Models.RiakPutOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.Put(RiakClient.Models.RiakObject,RiakClient.Models.RiakPutOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.Delete(RiakClient.Models.RiakObject,RiakClient.Models.RiakDeleteOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.Delete(System.String,System.String,RiakClient.Models.RiakDeleteOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.Delete(RiakClient.Models.RiakObjectId,RiakClient.Models.RiakDeleteOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.Delete(System.Collections.Generic.IEnumerable{RiakClient.Models.RiakObjectId},RiakClient.Models.RiakDeleteOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.Search(RiakClient.Models.Search.RiakSearchRequest)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.MapReduce(RiakClient.Models.MapReduce.RiakMapReduceQuery)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.StreamMapReduce(RiakClient.Models.MapReduce.RiakMapReduceQuery)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.StreamListBuckets">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.ListBuckets">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.ListKeys(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.StreamListKeys(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.GetBucketProperties(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.SetBucketProperties(System.String,RiakClient.Models.RiakBucketProperties)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.ResetBucketProperties(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.ListKeysFromIndex(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.WalkLinks(RiakClient.Models.RiakObject,System.Collections.Generic.IList{RiakClient.Models.RiakLink})">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.GetServerInfo">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.GetSecondaryIndex(RiakClient.Models.RiakIndexId,System.Numerics.BigInteger,RiakClient.Models.RiakIndexGetOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.GetSecondaryIndex(RiakClient.Models.RiakIndexId,System.String,RiakClient.Models.RiakIndexGetOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.GetSecondaryIndex(RiakClient.Models.RiakIndexId,System.Numerics.BigInteger,System.Numerics.BigInteger,RiakClient.Models.RiakIndexGetOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.GetSecondaryIndex(RiakClient.Models.RiakIndexId,System.String,System.String,RiakClient.Models.RiakIndexGetOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.StreamGetSecondaryIndex(RiakClient.Models.RiakIndexId,System.Numerics.BigInteger,RiakClient.Models.RiakIndexGetOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.StreamGetSecondaryIndex(RiakClient.Models.RiakIndexId,System.String,RiakClient.Models.RiakIndexGetOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.StreamGetSecondaryIndex(RiakClient.Models.RiakIndexId,System.Numerics.BigInteger,System.Numerics.BigInteger,RiakClient.Models.RiakIndexGetOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.StreamGetSecondaryIndex(RiakClient.Models.RiakIndexId,System.String,System.String,RiakClient.Models.RiakIndexGetOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.Batch(System.Action{RiakClient.IRiakBatchClient})">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.Batch``1(System.Func{RiakClient.IRiakBatchClient,``0})">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.Ping(System.Action{RiakClient.RiakResult})">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.Get(System.String,System.String,System.Action{RiakClient.RiakResult{RiakClient.Models.RiakObject}},RiakClient.Models.RiakGetOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.Get(RiakClient.Models.RiakObjectId,System.Action{RiakClient.RiakResult{RiakClient.Models.RiakObject}},RiakClient.Models.RiakGetOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.Get(System.Collections.Generic.IEnumerable{RiakClient.Models.RiakObjectId},System.Action{System.Collections.Generic.IEnumerable{RiakClient.RiakResult{RiakClient.Models.RiakObject}}},RiakClient.Models.RiakGetOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.Put(System.Collections.Generic.IEnumerable{RiakClient.Models.RiakObject},System.Action{System.Collections.Generic.IEnumerable{RiakClient.RiakResult{RiakClient.Models.RiakObject}}},RiakClient.Models.RiakPutOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.Put(RiakClient.Models.RiakObject,System.Action{RiakClient.RiakResult{RiakClient.Models.RiakObject}},RiakClient.Models.RiakPutOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.Delete(System.String,System.String,System.Action{RiakClient.RiakResult},RiakClient.Models.RiakDeleteOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.Delete(RiakClient.Models.RiakObjectId,System.Action{RiakClient.RiakResult},RiakClient.Models.RiakDeleteOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.Delete(System.Collections.Generic.IEnumerable{RiakClient.Models.RiakObjectId},System.Action{System.Collections.Generic.IEnumerable{RiakClient.RiakResult}},RiakClient.Models.RiakDeleteOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.MapReduce(RiakClient.Models.MapReduce.RiakMapReduceQuery,System.Action{RiakClient.RiakResult{RiakClient.Models.MapReduce.RiakMapReduceResult}})">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.StreamMapReduce(RiakClient.Models.MapReduce.RiakMapReduceQuery,System.Action{RiakClient.RiakResult{RiakClient.Models.MapReduce.RiakStreamedMapReduceResult}})">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.ListBuckets(System.Action{RiakClient.RiakResult{System.Collections.Generic.IEnumerable{System.String}}})">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.ListKeys(System.String,System.Action{RiakClient.RiakResult{System.Collections.Generic.IEnumerable{System.String}}})">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.StreamListKeys(System.String,System.Action{RiakClient.RiakResult{System.Collections.Generic.IEnumerable{System.String}}})">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.GetBucketProperties(System.String,System.Action{RiakClient.RiakResult{RiakClient.Models.RiakBucketProperties}})">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.SetBucketProperties(System.String,RiakClient.Models.RiakBucketProperties,System.Action{RiakClient.RiakResult})">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.GetServerInfo(System.Action{RiakClient.RiakResult{RiakClient.Models.RiakServerInfo}})">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakAsyncClient.Execute(RiakClient.Commands.IRiakCommand)">
            <inheritdoc/>
        </member>
        <member name="T:RiakClient.RiakClient">
            <summary>
            Provides methods for interacting with a Riak database.
            The primary implementation of <see cref="T:RiakClient.IRiakClient"/>.
            </summary>
        </member>
        <member name="M:RiakClient.RiakClient.Ping">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.IncrementCounter(System.String,System.String,System.Int64,RiakClient.Models.RiakCounterUpdateOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.GetCounter(System.String,System.String,RiakClient.Models.RiakCounterGetOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.Get(System.String,System.String,System.String,RiakClient.Models.RiakGetOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.Get(System.String,System.String,RiakClient.Models.RiakGetOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.Get(RiakClient.Models.RiakObjectId,RiakClient.Models.RiakGetOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.Get(System.Collections.Generic.IEnumerable{RiakClient.Models.RiakObjectId},RiakClient.Models.RiakGetOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.Put(RiakClient.Models.RiakObject,RiakClient.Models.RiakPutOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.Put(System.Collections.Generic.IEnumerable{RiakClient.Models.RiakObject},RiakClient.Models.RiakPutOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.Delete(RiakClient.Models.RiakObject,RiakClient.Models.RiakDeleteOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.Delete(System.String,System.String,RiakClient.Models.RiakDeleteOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.Delete(System.String,System.String,System.String,RiakClient.Models.RiakDeleteOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.Delete(RiakClient.Models.RiakObjectId,RiakClient.Models.RiakDeleteOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.Delete(System.Collections.Generic.IEnumerable{RiakClient.Models.RiakObjectId},RiakClient.Models.RiakDeleteOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.MapReduce(RiakClient.Models.MapReduce.RiakMapReduceQuery)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.Search(RiakClient.Models.Search.RiakSearchRequest)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.StreamMapReduce(RiakClient.Models.MapReduce.RiakMapReduceQuery)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.ListBuckets">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.ListBuckets(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.StreamListBuckets">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.ListKeys(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.ListKeys(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.StreamListKeys(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.StreamListKeys(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.ListKeysFromIndex(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.ListKeysFromIndex(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.GetBucketProperties(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.GetBucketProperties(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.SetBucketProperties(System.String,RiakClient.Models.RiakBucketProperties)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.SetBucketProperties(System.String,System.String,RiakClient.Models.RiakBucketProperties)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.ResetBucketProperties(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.ResetBucketProperties(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.WalkLinks(RiakClient.Models.RiakObject,System.Collections.Generic.IList{RiakClient.Models.RiakLink})">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.GetServerInfo">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.StreamGetSecondaryIndex(RiakClient.Models.RiakIndexId,System.Numerics.BigInteger,RiakClient.Models.RiakIndexGetOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.StreamGetSecondaryIndex(RiakClient.Models.RiakIndexId,System.String,RiakClient.Models.RiakIndexGetOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.StreamGetSecondaryIndex(RiakClient.Models.RiakIndexId,System.Numerics.BigInteger,System.Numerics.BigInteger,RiakClient.Models.RiakIndexGetOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.StreamGetSecondaryIndex(RiakClient.Models.RiakIndexId,System.String,System.String,RiakClient.Models.RiakIndexGetOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.GetSecondaryIndex(RiakClient.Models.RiakIndexId,System.Numerics.BigInteger,System.Numerics.BigInteger,RiakClient.Models.RiakIndexGetOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.GetSecondaryIndex(RiakClient.Models.RiakIndexId,System.String,System.String,RiakClient.Models.RiakIndexGetOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.GetSecondaryIndex(RiakClient.Models.RiakIndexId,System.Numerics.BigInteger,RiakClient.Models.RiakIndexGetOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.GetSecondaryIndex(RiakClient.Models.RiakIndexId,System.String,RiakClient.Models.RiakIndexGetOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.Batch(System.Action{RiakClient.IRiakBatchClient})">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.Batch``1(System.Func{RiakClient.IRiakBatchClient,``0})">
            <inheritdoc />
        </member>
        <member name="M:RiakClient.RiakClient.DtFetchCounter(System.String,System.String,System.String,RiakClient.Models.RiakDtFetchOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.DtFetchCounter(RiakClient.Models.RiakObjectId,RiakClient.Models.RiakDtFetchOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.DtUpdateCounter(System.String,System.String,System.String,System.Int64,RiakClient.Models.RiakDtUpdateOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.DtUpdateCounter(RiakClient.Models.RiakObjectId,System.Int64,RiakClient.Models.RiakDtUpdateOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.DtFetchSet(System.String,System.String,System.String,RiakClient.Models.RiakDtFetchOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.DtFetchSet(RiakClient.Models.RiakObjectId,RiakClient.Models.RiakDtFetchOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.DtUpdateSet``1(System.String,System.String,System.String,RiakClient.Models.SerializeObjectToByteArray{``0},System.Byte[],System.Collections.Generic.List{``0},System.Collections.Generic.List{``0},RiakClient.Models.RiakDtUpdateOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.DtUpdateSet``1(RiakClient.Models.RiakObjectId,RiakClient.Models.SerializeObjectToByteArray{``0},System.Byte[],System.Collections.Generic.List{``0},System.Collections.Generic.List{``0},RiakClient.Models.RiakDtUpdateOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.DtFetchMap(System.String,System.String,System.String,RiakClient.Models.RiakDtFetchOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.DtFetchMap(RiakClient.Models.RiakObjectId,RiakClient.Models.RiakDtFetchOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.DtUpdateMap``1(System.String,System.String,System.String,RiakClient.Models.SerializeObjectToByteArray{``0},System.Byte[],System.Collections.Generic.List{RiakClient.Models.RiakDt.RiakDtMapField},System.Collections.Generic.List{RiakClient.Messages.MapUpdate},RiakClient.Models.RiakDtUpdateOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.DtUpdateMap``1(RiakClient.Models.RiakObjectId,RiakClient.Models.SerializeObjectToByteArray{``0},System.Byte[],System.Collections.Generic.List{RiakClient.Models.RiakDt.RiakDtMapField},System.Collections.Generic.List{RiakClient.Messages.MapUpdate},RiakClient.Models.RiakDtUpdateOptions)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.GetSearchIndex(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.PutSearchIndex(RiakClient.Models.Search.SearchIndex)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.DeleteSearchIndex(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.GetSearchSchema(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:RiakClient.RiakClient.PutSearchSchema(RiakClient.Models.Search.SearchSchema)">
            <inheritdoc/>
        </member>
        <member name="P:RiakClient.RiakClient.RetryCount">
            <inheritdoc/>
        </member>
        <member name="P:RiakClient.RiakClient.Async">
            <inheritdoc/>
        </member>
        <member name="T:RiakClient.Comms.RiakConnectionFactory">
            <summary>
            A factory that creates <see cref="T:RiakClient.Comms.IRiakConnection"/>s from <see cref="T:RiakClient.Config.IRiakNodeConfiguration"/>s.
            </summary>
        </member>
        <member name="M:RiakClient.Comms.RiakConnectionFactory.CreateConnection(RiakClient.Config.IRiakNodeConfiguration,RiakClient.Config.IRiakAuthenticationConfiguration)">
            <inheritdoc/>
        </member>
        <member name="T:RiakClient.RiakCluster">
            <summary>
            Represents a collection of <see cref="T:RiakClient.RiakEndPoint"/>s. 
            Allows operations to be performed using an endpoint's connection.
            Also supported rudimentary load balancing between multiple nodes.
            </summary>
        </member>
        <member name="T:RiakClient.RiakEndPoint">
            <summary>
            Represents a connection to a Riak node, and allows operations to be performed with that connection.
            Partial abstract implementation of <see cref="T:RiakClient.IRiakEndPoint"/>.
            </summary>
        </member>
        <member name="M:RiakClient.RiakEndPoint.CreateClient">
            <summary>
            Creates a new instance of <see cref="T:RiakClient.RiakClient"/>.
            </summary>
            <returns>
            A minty fresh client.
            </returns>
        </member>
        <member name="M:RiakClient.RiakEndPoint.UseConnection(System.Func{RiakClient.Comms.IRiakConnection,RiakClient.RiakResult},System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:RiakClient.RiakEndPoint.UseConnection``1(System.Func{RiakClient.Comms.IRiakConnection,RiakClient.RiakResult{``0}},System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:RiakClient.RiakEndPoint.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:RiakClient.RiakEndPoint"/> class.
            </summary>
        </member>
        <member name="M:RiakClient.RiakEndPoint.UseDelayedConnection``1(System.Func{RiakClient.Comms.IRiakConnection,System.Action,RiakClient.RiakResult{System.Collections.Generic.IEnumerable{``0}}},System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:RiakClient.RiakEndPoint.RetryWaitTime">
            <inheritdoc />
        </member>
        <member name="P:RiakClient.RiakEndPoint.DefaultRetryCount">
            <summary>
            The max number of retry attempts to make when the client encounters 
            <see cref="T:RiakClient.ResultCode"/>.NoConnections or <see cref="T:RiakClient.ResultCode"/>.CommunicationError errors.
            </summary>
        </member>
        <member name="M:RiakClient.RiakCluster.#ctor(RiakClient.Config.IRiakClusterConfiguration,RiakClient.Comms.IRiakConnectionFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.RiakCluster"/> class.
            </summary>
            <param name="clusterConfig">The <see cref="T:RiakClient.Config.IRiakClusterConfiguration"/> to use for this RiakCluster.</param>
            <param name="connectionFactory">The <see cref="T:RiakClient.Comms.IRiakConnectionFactory"/> instance to use for this RiakCluster.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="clusterConfig"/> contains no node information.</exception>
        </member>
        <member name="M:RiakClient.RiakCluster.#ctor(RiakClient.Config.IRiakClusterConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.RiakCluster"/> class using the default connection factory.
            </summary>
            <param name="clusterConfig">The <see cref="T:RiakClient.Config.IRiakClusterConfiguration"/> to use for this RiakCluster.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="clusterConfig"/> contains no node information.</exception>
        </member>
        <member name="M:RiakClient.RiakCluster.FromConfig(System.String)">
            <summary>
            Creates an instance of <see cref="T:RiakClient.IRiakClient"/> populated from from the configuration section
            specified by <paramref name="configSectionName"/>.
            </summary>
            <param name="configSectionName">The name of the configuration section to load the settings from.</param>
            <returns>A fully configured <see cref="T:RiakClient.IRiakEndPoint"/></returns>
        </member>
        <member name="M:RiakClient.RiakCluster.FromConfig(System.String,System.String)">
            <summary>
            Creates an instance of <see cref="T:RiakClient.IRiakClient"/> populated from from the configuration section
            specified by <paramref name="configSectionName"/>.
            </summary>
            <param name="configSectionName">The name of the configuration section to load the settings from.</param>
            <param name="configFileName">The full path and name of the config file to load the configuration from.</param>
            <returns>A fully configured <see cref="T:RiakClient.IRiakEndPoint"/></returns>
        </member>
        <member name="M:RiakClient.RiakCluster.UseDelayedConnection``1(System.Func{RiakClient.Comms.IRiakConnection,System.Action,RiakClient.RiakResult{System.Collections.Generic.IEnumerable{``0}}},System.Int32)">
            <summary>
            Executes a delegate function using a <see cref="T:RiakClient.Comms.IRiakConnection"/>, and returns the results.
            Can retry up to "<paramref name="retryAttempts"/>" times for <see cref="F:RiakClient.ResultCode.NoRetries"/> and <see cref="F:RiakClient.ResultCode.ShuttingDown"/> error states.
            This method is used over <see cref="M:RiakClient.RiakEndPoint.UseConnection(System.Func{RiakClient.Comms.IRiakConnection,RiakClient.RiakResult},System.Int32)"/> to keep a connection open to receive streaming results.
            </summary>
            <typeparam name="TResult">The type of the result from the <paramref name="useFun"/> parameter.</typeparam>
            <param name="useFun">
            The delegate function to execute. Takes an <see cref="T:RiakClient.Comms.IRiakConnection"/> and an <see cref="T:System.Action"/> continuation as input, and returns a 
            <see cref="T:RiakClient.RiakResult`1"/> containing an <see cref="T:System.Collections.Generic.IEnumerable`1"/> as the results of the operation.
            </param>
            <param name="retryAttempts">The number of times to retry an operation.</param>
            <returns>The results of the <paramref name="useFun"/> delegate.</returns>
        </member>
        <member name="P:RiakClient.RiakCluster.DefaultRetryCount">
            <inheritdoc/>
        </member>
        <member name="T:RiakClient.Models.MapReduce.RiakMapReduceResult">
            <summary>
            Represents a Riak mapreduce result.
            </summary>
        </member>
        <member name="P:RiakClient.Models.MapReduce.RiakMapReduceResult.PhaseResults">
            <inheritdoc/>
        </member>
        <member name="T:RiakClient.Config.RiakClusterConfiguration">
            <summary>
            Represents the configuration file section for a Riak Cluster.
            </summary>
        </member>
        <member name="M:RiakClient.Config.RiakClusterConfiguration.LoadFromConfig(System.String)">
            <summary>
            Load a <see cref="T:RiakClient.Config.RiakClusterConfiguration"/> from the local configuration file,
            and return a new <see cref="T:RiakClient.Config.IRiakClusterConfiguration"/>. 
            </summary>
            <param name="sectionName">The section to load the configuration from.</param>
            <returns>An initialized and configured <see cref="T:RiakClient.Config.IRiakClusterConfiguration"/>.</returns>
        </member>
        <member name="M:RiakClient.Config.RiakClusterConfiguration.LoadFromConfig(System.String,System.String)">
            <summary>
            Load a <see cref="T:RiakClient.Config.RiakClusterConfiguration"/> from a specified configuration file,
            and return a new <see cref="T:RiakClient.Config.IRiakClusterConfiguration"/>.
            </summary>
            <param name="sectionName">The section to load the configuration from.</param>
            <param name="fileName">The file containing the configuration section.</param>
            <returns>An initialized and configured <see cref="T:RiakClient.Config.IRiakClusterConfiguration"/>.</returns>
        </member>
        <member name="M:RiakClient.Config.RiakClusterConfiguration.RiakClient#Config#IRiakClusterConfiguration#AddNode(RiakClient.Config.IRiakNodeConfiguration)">
            <inheritdoc/>
        </member>
        <member name="P:RiakClient.Config.RiakClusterConfiguration.Nodes">
            <summary>
            A collection of <see cref="T:RiakClient.Config.IRiakNodeConfiguration"/> configurations detailing the Riak nodes that can be connected to.
            </summary>
        </member>
        <member name="P:RiakClient.Config.RiakClusterConfiguration.RiakClient#Config#IRiakClusterConfiguration#RiakNodes">
            <inheritdoc/>
        </member>
        <member name="P:RiakClient.Config.RiakClusterConfiguration.NodePollTime">
            <inheritdoc/>
            <remarks>Defaults to 5000ms if omitted from the configuration file.</remarks>
        </member>
        <member name="P:RiakClient.Config.RiakClusterConfiguration.DefaultRetryWaitTime">
            <inheritdoc/>
            <remarks>Defaults to 200ms if omitted from the configuration file.</remarks>
        </member>
        <member name="P:RiakClient.Config.RiakClusterConfiguration.DefaultRetryCount">
            <inheritdoc/>
            <remarks>Defaults to 3 if omitted from the configuration file.</remarks>
        </member>
        <member name="P:RiakClient.Config.RiakClusterConfiguration.UseTtbEncoding">
            <inheritdoc/>
            <remarks>Defaults to <b>true</b> if omitted from the configuration file.</remarks>
        </member>
        <member name="P:RiakClient.Config.RiakClusterConfiguration.Authentication">
            <summary>
            A <see cref="T:RiakClient.Config.IRiakAuthenticationConfiguration"/> configuration that details any authentication information.
            </summary>
        </member>
        <member name="P:RiakClient.Config.RiakClusterConfiguration.RiakClient#Config#IRiakClusterConfiguration#Authentication">
            <inheritdoc/>
        </member>
        <member name="T:RiakClient.Config.RiakNodeConfiguration">
            <summary>
            Represents a configuration element for a Riak Node.
            </summary>
        </member>
        <member name="P:RiakClient.Config.RiakNodeConfiguration.Name">
            <inheritdoc/>
        </member>
        <member name="P:RiakClient.Config.RiakNodeConfiguration.HostAddress">
            <inheritdoc/>
        </member>
        <member name="P:RiakClient.Config.RiakNodeConfiguration.PbcPort">
            <inheritdoc/>
            <remarks>Defaults to 8087 if omitted from the configuration file.</remarks>
        </member>
        <member name="P:RiakClient.Config.RiakNodeConfiguration.PoolSize">
            <inheritdoc/>
            <remarks>Defaults to 30 if omitted from the configuration file.</remarks>
        </member>
        <member name="P:RiakClient.Config.RiakNodeConfiguration.UseTtbEncoding">
            <inheritdoc/>
            <remarks>Defaults to <b>true</b> if omitted from the configuration file.</remarks>
        </member>
        <member name="P:RiakClient.Config.RiakNodeConfiguration.ExternalLoadBalancer">
            <inheritdoc/>
            <remarks>Defaults to False if omitted from the configuration file.</remarks>
        </member>
        <member name="P:RiakClient.Config.RiakNodeConfiguration.NetworkReadTimeout">
            <inheritdoc/>
            <remarks>Defaults to 4000ms if omitted from the configuration file.</remarks>
        </member>
        <member name="P:RiakClient.Config.RiakNodeConfiguration.NetworkWriteTimeout">
            <inheritdoc/>
            <remarks>Defaults to 4000ms if omitted from the configuration file.</remarks>
        </member>
        <member name="P:RiakClient.Config.RiakNodeConfiguration.NetworkConnectTimeout">
            <inheritdoc/>
            <remarks>Defaults to 4000ms if omitted from the configuration file.</remarks>
        </member>
        <member name="T:RiakClient.Config.RiakNodeConfigurationCollection">
            <summary>
            Represents a configuration element containing a collection of <see cref="T:RiakClient.Config.RiakNodeConfiguration"/>s.
            </summary>
        </member>
        <member name="T:RiakClient.Extensions.JsonExtensions">
            <summary>
            Helper extension methods to use common Newtonsoft.Json methods with less code. 
            </summary>
        </member>
        <member name="M:RiakClient.Extensions.JsonExtensions.ToJson``1(``0)">
            <summary>
            Serializes the specified object to a JSON string.
            </summary>
            <typeparam name="T">A value or reference type.</typeparam>
            <param name="value">The object to serialize.</param>
            <returns>The object serialized as a JSON string.</returns>
        </member>
        <member name="M:RiakClient.Extensions.JsonExtensions.Serialize``1(``0)">
            <summary>
            Serializes the specified object to a JSON string.
            </summary>
            <typeparam name="T">A reference type.</typeparam>
            <param name="obj">The object to serialize.</param>
            <returns>The object serialized as a JSON string.</returns>
        </member>
        <member name="M:RiakClient.Extensions.JsonExtensions.WriteProperty``1(Newtonsoft.Json.JsonWriter,System.String,``0)">
            <summary>
            Writes the property name and the value as a name/value pair.
            An error will be raised if the value cannot be written as a single JSON token.
            </summary>
            <typeparam name="T">A value or reference type</typeparam>
            <param name="writer">The JsonWriter to write the property to.</param>
            <param name="name">The name of the property.</param>
            <param name="value">The value of the property, writes a System.Object value.</param>
            <returns>The original JsonWriter, not modified but useful for call chaining.</returns>
        </member>
        <member name="M:RiakClient.Extensions.JsonExtensions.WriteNonNullProperty``1(Newtonsoft.Json.JsonWriter,System.String,``0)">
            <summary>
            If the value is non null, this method will write the property name and the value as a name/value pair.
            An error will be raised if the value cannot be written as a single JSON token.
            </summary>
            <typeparam name="T">A reference type</typeparam>
            <param name="writer">The JsonWriter to write the property to.</param>
            <param name="name">The name of the property.</param>
            <param name="value">The value of the property, writes a System.Object value.</param>
            <returns>The original JsonWriter, not modified but useful for call chaining.</returns>
        </member>
        <member name="M:RiakClient.Extensions.JsonExtensions.WriteNullableProperty``1(Newtonsoft.Json.JsonWriter,System.String,System.Nullable{``0})">
            <summary>
            If the nullable value type is non null, this method will write the property name and the value as a name/value pair.
            An error will be raised if the value cannot be written as a single JSON token.
            </summary>
            <typeparam name="T">A nullable value type</typeparam>
            <param name="writer">The JsonWriter to write the property to.</param>
            <param name="name">The name of the property.</param>
            <param name="value">The value of the property, writes a System.Object value.</param>
            <returns>The original JsonWriter, not modified but useful for call chaining.</returns>
        </member>
        <member name="M:RiakClient.Extensions.JsonExtensions.WriteSpecifiedProperty(Newtonsoft.Json.JsonWriter,System.String,System.String)">
            <summary>
            If the string value is non-empty, this method will write the property name and the value as a name/value pair.
            An error will be raised if the value cannot be written as a single JSON token.
            </summary>
            <param name="writer">The JsonWriter to write the property to.</param>
            <param name="name">The name of the property.</param>
            <param name="value">The value of the property, writes a System.Object value.</param>
            <returns>The original JsonWriter, not modified but useful for call chaining.</returns>
        </member>
        <member name="T:RiakClient.RiakConstants">
            <summary>
            A collection of commonly used Riak string constants.
            </summary>
        </member>
        <member name="F:RiakClient.RiakConstants.DefaultBucketType">
            <summary>
            Represents the value for the Default Bucket Type when using the .Net Client APIs.
            </summary>
        </member>
        <member name="T:RiakClient.RiakConstants.RiakEnterprise">
            <summary>
            Represents Riak Enterprise Edition-only features.
            </summary>
        </member>
        <member name="T:RiakClient.RiakConstants.RiakEnterprise.ReplicationMode">
            <summary>
            Represents the possible stats that Riak Replication could be configured for.
            </summary>
        </member>
        <member name="F:RiakClient.RiakConstants.RiakEnterprise.ReplicationMode.False">
            <summary>
            No replication is enabled.
            </summary>
        </member>
        <member name="F:RiakClient.RiakConstants.RiakEnterprise.ReplicationMode.Realtime">
            <summary>
            Realtime replication is enabled.
            </summary>
        </member>
        <member name="F:RiakClient.RiakConstants.RiakEnterprise.ReplicationMode.FullSync">
            <summary>
            Fullsync replication is enabled.
            </summary>
        </member>
        <member name="F:RiakClient.RiakConstants.RiakEnterprise.ReplicationMode.True">
            <summary>
            Realtime and fullsync replication are both enabled.
            </summary>
        </member>
        <member name="T:RiakClient.RiakConstants.ContentTypes">
            <summary>
            A collection of known content-types.
            </summary>
        </member>
        <member name="F:RiakClient.RiakConstants.ContentTypes.Any">
            <summary>
            A wildcard content-type.
            </summary>
        </member>
        <member name="F:RiakClient.RiakConstants.ContentTypes.ApplicationOctetStream">
            <summary>
            The binary, or octet-stream content-type.
            </summary>
        </member>
        <member name="F:RiakClient.RiakConstants.ContentTypes.ApplicationJson">
            <summary>
            The JSON content-type.
            </summary>
        </member>
        <member name="F:RiakClient.RiakConstants.ContentTypes.TextPlain">
            <summary>
            The plain text content-type.
            </summary>
        </member>
        <member name="F:RiakClient.RiakConstants.ContentTypes.TextHtml">
            <summary>
            The HTML content-type.
            </summary>
        </member>
        <member name="F:RiakClient.RiakConstants.ContentTypes.MultipartMixed">
            <summary>
            The multipart/mixed message content-type.
            </summary>
        </member>
        <member name="F:RiakClient.RiakConstants.ContentTypes.ImageJpg">
            <summary>
            The Jpeg image content-type.
            </summary>
        </member>
        <member name="F:RiakClient.RiakConstants.ContentTypes.ImageGif">
            <summary>
            The Gif image content-type.
            </summary>
        </member>
        <member name="F:RiakClient.RiakConstants.ContentTypes.ImagePng">
            <summary>
            The Png image content-type.
            </summary>
        </member>
        <member name="F:RiakClient.RiakConstants.ContentTypes.ErlangBinary">
            <summary>
            The Erlang Binary content-type.
            </summary>
        </member>
        <member name="F:RiakClient.RiakConstants.ContentTypes.Xml">
            <summary>
            The XML content-type.
            </summary>
        </member>
        <member name="F:RiakClient.RiakConstants.ContentTypes.ProtocolBuffers">
            <summary>
            The Protocol Buffers content-type.
            </summary>
        </member>
        <member name="T:RiakClient.RiakConstants.IndexSuffix">
            <summary>
            Represents the Secondary Index name suffixes used to determine the index's type.
            </summary>
        </member>
        <member name="F:RiakClient.RiakConstants.IndexSuffix.Integer">
            <summary>
            The suffix for integer indexes.
            </summary>
        </member>
        <member name="F:RiakClient.RiakConstants.IndexSuffix.Binary">
            <summary>
            The suffix for string(binary) indexes.
            </summary>
        </member>
        <member name="T:RiakClient.RiakConstants.MapReduceLanguage">
            <summary>
            Represents the collection of possible MapReduce job languages. 
            </summary>
        </member>
        <member name="F:RiakClient.RiakConstants.MapReduceLanguage.JavaScript">
            <summary>
            The string for JavaScript MapReduce jobs.
            </summary>
        </member>
        <member name="F:RiakClient.RiakConstants.MapReduceLanguage.Json">
            <summary>
            The string for JSON(JavaScript) MapReduce jobs.
            </summary>
        </member>
        <member name="F:RiakClient.RiakConstants.MapReduceLanguage.Erlang">
            <summary>
            The string for Erlang MapReduce jobs.
            </summary>
        </member>
        <member name="T:RiakClient.RiakConstants.MapReducePhaseType">
            <summary>
            Represents the collection of possible MapReduce job phases.
            </summary>
        </member>
        <member name="F:RiakClient.RiakConstants.MapReducePhaseType.Map">
            <summary>
            The string for a Map phase.
            </summary>
        </member>
        <member name="F:RiakClient.RiakConstants.MapReducePhaseType.Reduce">
            <summary>
            The string for a Reduce phase.
            </summary>
        </member>
        <member name="F:RiakClient.RiakConstants.MapReducePhaseType.Link">
            <summary>
            The string for a Link phase.
            </summary>
        </member>
        <member name="T:RiakClient.RiakConstants.CharSets">
            <summary>
            Represents some common Character sets.
            </summary>
        </member>
        <member name="F:RiakClient.RiakConstants.CharSets.Utf8">
            <summary>
            The charset string for the UTF-8 string data.
            </summary>
        </member>
        <member name="F:RiakClient.RiakConstants.CharSets.Binary">
            <summary>
            The charset string used when dealing with Binary data. 
            </summary>
        </member>
        <member name="T:RiakClient.RiakConstants.Defaults">
            <summary>
            Represents some defaults for different Riak Client options.
            </summary>
        </member>
        <member name="F:RiakClient.RiakConstants.Defaults.ContentType">
            <summary>
            The default content-type. Defaults to <see cref="F:RiakClient.RiakConstants.ContentTypes.ApplicationJson"/>.
            </summary>
        </member>
        <member name="F:RiakClient.RiakConstants.Defaults.CharSet">
            <summary>
            The default character set. Defaults to <see cref="F:RiakClient.RiakConstants.CharSets.Utf8"/>.
            </summary>
        </member>
        <member name="T:RiakClient.RiakConstants.Defaults.YokozunaIndex">
            <summary>
            Represents some Riak Search 2.0+ (Yokozuna) defaults.
            </summary>
        </member>
        <member name="F:RiakClient.RiakConstants.Defaults.YokozunaIndex.DefaultSchemaName">
            <summary>
            The default Schema Name to use for 2.0+ search.
            </summary>
        </member>
        <member name="F:RiakClient.RiakConstants.Defaults.YokozunaIndex.NVal">
            <summary>
            The default NVal to use for 2.0+ search index operations.
            </summary>
        </member>
        <member name="T:RiakClient.RiakConstants.KeyFilterTransforms">
            <summary>
            A collection of MapReduce key filter transformation string constants.
            See http://docs.basho.com/riak/latest/dev/using/keyfilters/ 
            and http://docs.basho.com/riak/latest/dev/references/keyfilters/ for more information.
            </summary>
        </member>
        <member name="F:RiakClient.RiakConstants.KeyFilterTransforms.IntToString">
            <summary>
            Turns an integer (previously extracted with string_to_int), into a string.
            </summary>
        </member>
        <member name="F:RiakClient.RiakConstants.KeyFilterTransforms.StringToInt">
            <summary>
            Turns a string into an integer.
            </summary>
        </member>
        <member name="F:RiakClient.RiakConstants.KeyFilterTransforms.FloatToString">
            <summary>
            Turns a floating point number (previously extracted with string_to_float), into a string.
            </summary>
        </member>
        <member name="F:RiakClient.RiakConstants.KeyFilterTransforms.StringToFloat">
            <summary>
            Turns a string into a floating point number.
            </summary>
        </member>
        <member name="F:RiakClient.RiakConstants.KeyFilterTransforms.ToUpper">
            <summary>
            Changes all letters to uppercase.
            </summary>
        </member>
        <member name="F:RiakClient.RiakConstants.KeyFilterTransforms.ToLower">
            <summary>
            Changes all letters to lowercase.
            </summary>
        </member>
        <member name="F:RiakClient.RiakConstants.KeyFilterTransforms.Tokenize">
            <summary>
            Splits the input on the string given as the first argument and returns the nth token specified by the second argument.
            </summary>
        </member>
        <member name="T:RiakClient.RiakConstants.SystemIndexKeys">
            <summary>
            A collection of special secondary index names.
            </summary>
        </member>
        <member name="F:RiakClient.RiakConstants.SystemIndexKeys.RiakKeysIndex">
            <summary>
            The index name for the special system key index.
            This index holds all the different keys for a bucket.
            </summary>
        </member>
        <member name="F:RiakClient.RiakConstants.SystemIndexKeys.RiakBucketIndex">
            <summary>
            The index name for the special system bucket index.
            This index holds all the different bucket values.
            </summary>
        </member>
        <member name="F:RiakClient.RiakConstants.SystemIndexKeys.SystemBinKeys">
            <summary>
            A collection of all the system binary index names.
            </summary>
        </member>
        <member name="F:RiakClient.RiakConstants.SystemIndexKeys.SystemIntKeys">
            <summary>
            A collection of all the system integer index names.
            </summary>
        </member>
        <member name="T:RiakClient.RiakConstants.SearchFieldKeys">
            <summary>
            A collection of string constants for riak search result documents.
            These constants represent keys for known fields within the document. 
            </summary>
        </member>
        <member name="F:RiakClient.RiakConstants.SearchFieldKeys.BucketType">
            <summary>
            Key for the "Bucket Type" field. Riak 2.0+
            </summary>
        </member>
        <member name="F:RiakClient.RiakConstants.SearchFieldKeys.Bucket">
            <summary>
            Key for the "Bucket" field. Riak 2.0+
            </summary>
        </member>
        <member name="F:RiakClient.RiakConstants.SearchFieldKeys.Key">
            <summary>
            Key for the "Key" field. Riak 2.0+
            </summary>
        </member>
        <member name="F:RiakClient.RiakConstants.SearchFieldKeys.Id">
            <summary>
            Key for the "Id" field. Riak 2.0+
            </summary>
        </member>
        <member name="F:RiakClient.RiakConstants.SearchFieldKeys.Score">
            <summary>
            Key for the "Score" field. Riak 2.0+
            </summary>
        </member>
        <member name="F:RiakClient.RiakConstants.SearchFieldKeys.LegacySearchId">
            <summary>
            Key for the Riak 1.0 Search "Id" field.
            </summary>
        </member>
        <member name="T:RiakClient.Extensions.StringExtensions">
            <summary>
            Extension methods to assist with conversion between Riak byte[] and strings.
            </summary>
        </member>
        <member name="M:RiakClient.Extensions.StringExtensions.ToRiakString(System.String)">
            <summary>
            Converts a string object to a UTF-8 encoded byte array.
            </summary>
            <param name="value">The string to encode.</param>
            <returns>The encoded string.</returns>
        </member>
        <member name="M:RiakClient.Extensions.StringExtensions.FromRiakString(System.Byte[])">
            <summary>
            Converts a UTF-8 encoded byte array to a string object.
            </summary>
            <param name="value">The byte[] to decode.</param>
            <returns>The decoded byte[].</returns>
        </member>
        <member name="T:RiakClient.Models.MapReduce.Inputs.RiakModuleFunctionArgInput">
            <summary>
            Represents an Erlang Module:Function(Arg) mapreduce input.
            </summary>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakModuleFunctionArgInput.#ctor(System.String,System.String,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.MapReduce.Inputs.RiakModuleFunctionArgInput"/> class.
            </summary>
            <param name="module">The Erlang module containing the <paramref name="function"/> to run.</param>
            <param name="function">The Erlang function to run, whose results will be used as inputs for the mapreduce job.</param>
            <param name="arg">Any arguments to pass to <paramref name="function"/>.</param>
        </member>
        <member name="M:RiakClient.Models.MapReduce.Inputs.RiakModuleFunctionArgInput.WriteJson(Newtonsoft.Json.JsonWriter)">
            <inheritdoc/>
        </member>
        <member name="P:RiakClient.Models.MapReduce.Inputs.RiakModuleFunctionArgInput.Module">
            <summary>
            The Erlang module containing the <see cref="P:RiakClient.Models.MapReduce.Inputs.RiakModuleFunctionArgInput.Function"/> to run.
            </summary>
        </member>
        <member name="P:RiakClient.Models.MapReduce.Inputs.RiakModuleFunctionArgInput.Function">
            <summary>
            The Erlang function to run, whose results will be used as inputs for the mapreduce job.
            </summary>
        </member>
        <member name="P:RiakClient.Models.MapReduce.Inputs.RiakModuleFunctionArgInput.Arg">
            <summary>
            Any arguments to pass to <see name="Function"/>.
            </summary>
        </member>
        <member name="T:RiakClient.Models.RiakDeleteOptions">
            <summary>
            A collection of optional settings for deleting objects from Riak.
            </summary>
        </member>
        <member name="M:RiakClient.Models.RiakDeleteOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.RiakDeleteOptions"/> class.
            Uses the "default" quorum settings for R, W, PR, PW, DW, and RW settings.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakDeleteOptions.Vclock">
            <summary>
            The Vclock of the version that is being deleted. 
            Use this to prevent deleting objects that have been modified since the last get request.
            </summary>
            <value>
            The vclock.
            </value>
            <remarks>
            Review the information at http://wiki.basho.com/Vector-Clocks.html for additional information on how vector clocks 
            are used in Riak.
            </remarks>
        </member>
        <member name="T:RiakClient.Models.RiakGetOptions">
            <summary>
            A collection of optional settings for fetching objects from Riak.
            </summary>
        </member>
        <member name="M:RiakClient.Models.RiakGetOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RiakClient.Models.RiakGetOptions"/> class.
            Uses the "default" quorum settings for R and PR settings.
            </summary>
        </member>
        <member name="P:RiakClient.Models.RiakGetOptions.Default">
            <summary>
            Returns a static readonly instance of the default <see cref="T:RiakClient.Models.RiakGetOptions"/> option set.
            </summary>
            <returns>A static readonly instance of the default <see cref="T:RiakClient.Models.RiakGetOptions"/> option set.</returns>
        </member>
        <member name="P:RiakClient.Models.RiakGetOptions.BasicQuorum">
            <summary>
            Gets or sets basic quorum semantics.
            When set to true, Riak will return early in some failure cases.
            (eg. when r=1 and you get 2 errors and a success basic_quorum=true would return an error).
            Can be used in conjunction when <see cref="P:RiakClient.Models.RiakGetOptions.NotFoundOk"/>=<b>false</b> to speed up the case an object 
            does not exist, thereby only reading a "quorum" of not-founds instead of "N" not-founds.
            </summary>
            <remarks>
            This property is not typically modified.
            See http://docs.basho.com/riak/latest/dev/advanced/replication-properties/#Early-Failure-Return-with-code-basic_quorum-code-
            for more information.
            </remarks>
        </member>
        <member name="P:RiakClient.Models.RiakGetOptions.NotFoundOk">
            <summary>
            Gets or sets notfound_ok semantics.
            When set to true, an object not being found on a Riak node will count towards the R count.
            </summary>
            <remarks>
            This property is not typically modified.
            See http://docs.basho.com/riak/latest/dev/advanced/replication-properties/#The-Implications-of-code-notfound_ok-code-
            for more information.
            </remarks>
        </member>
        <member name="P:RiakClient.Models.RiakGetOptions.Head">
            <summary>
            Return only the object metadata, analogous to an HTTP HEAD request.
            When set to <b>true</b>, Riak will return the object minus its value.
            </summary>
            <remarks>
            This allows you to get the metadata without a potentially large value.
            </remarks>            
        </member>
        <member name="P:RiakClient.Models.RiakGetOptions.DeletedVclock">
            <summary>
            By default single tombstones are not returned by a fetch operations. 
            When set to <b>true</b>, this will return a Tombstone if it is present.
            </summary>
            <remarks>This property is not typically modified.</remarks>
        </member>
        <member name="P:RiakClient.Models.RiakGetOptions.IfModified">
            <summary>
            When a vector clock is supplied with this option, only return the object if the vector clocks don't match.
            </summary>
            <remarks>This property is not typically modified.</remarks>
        </member>
    </members>
</doc>
